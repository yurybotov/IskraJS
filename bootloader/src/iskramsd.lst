
iskramsd.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002de0  08000000  08000000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .preinit_array 00000000  08002de0  08002de0  00020018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .init_array   00000000  08002de0  08002de0  00020018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .fini_array   00000000  08002de0  08002de0  00020018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .data         00000018  20000000  08002de0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000504  20000018  08002df8  00020018  2**2
                  ALLOC
  6 .ccm          00000000  10000000  10000000  00020018  2**0
                  CONTENTS
  7 .debug_info   00013668  00000000  00000000  00020018  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003654  00000000  00000000  00033680  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000930  00000000  00000000  00036cd8  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000008f0  00000000  00000000  00037608  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00007a68  00000000  00000000  00037ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000059be  00000000  00000000  0003f960  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00017be7  00000000  00000000  0004531e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      00000031  00000000  00000000  0005cf05  2**0
                  CONTENTS, READONLY
 15 .ARM.attributes 00000037  00000000  00000000  0005cf36  2**0
                  CONTENTS, READONLY
 16 .debug_frame  00001274  00000000  00000000  0005cf70  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    0000473c  00000000  00000000  0005e1e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000000 <vector_table>:
 8000000:	00 00 02 20 55 1c 00 08 53 1c 00 08 51 1c 00 08     ... U...S...Q...
 8000010:	51 1c 00 08 51 1c 00 08 51 1c 00 08 00 00 00 00     Q...Q...Q.......
	...
 800002c:	53 1c 00 08 53 1c 00 08 00 00 00 00 53 1c 00 08     S...S.......S...
 800003c:	b9 01 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     ....Q...Q...Q...
 800004c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800005c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800006c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800007c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800008c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800009c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 80000ac:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 80000bc:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 80000cc:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 80000dc:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 80000ec:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 80000fc:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800010c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800011c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800012c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800013c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800014c:	ad 01 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     ....Q...Q...Q...
 800015c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800016c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800017c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800018c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...
 800019c:	51 1c 00 08 51 1c 00 08 51 1c 00 08 51 1c 00 08     Q...Q...Q...Q...

080001ac <otg_fs_isr>:
extern uint32_t magic_point;

#include "usb.h"

// on usb-fs interrupt
void otg_fs_isr(void) { usbd_poll(usbdDevice); }
 80001ac:	4b01      	ldr	r3, [pc, #4]	; (80001b4 <otg_fs_isr+0x8>)
 80001ae:	6818      	ldr	r0, [r3, #0]
 80001b0:	f000 bd92 	b.w	8000cd8 <usbd_poll>
 80001b4:	200001a8 	.word	0x200001a8

080001b8 <sys_tick_handler>:

// on systick interrupt
extern volatile uint32_t system_millis;
void sys_tick_handler(void) { 
 80001b8:	4770      	bx	lr
	...

080001bc <main>:
    ;
}

static uint8_t usbd_control_buffer[128];

int main(void) {
 80001bc:	b570      	push	{r4, r5, r6, lr}
    // clock initialisation 168MHz on 8MHz quartz (405/407)
    rcc_clock_setup_pll(&rcc_hse_8mhz_3v3[RCC_CLOCK_3V3_168MHZ]);
 80001be:	4826      	ldr	r0, [pc, #152]	; (8000258 <main+0x9c>)

    // FAT12 file system on pceudo drive init
    romdisk_init();

    // usb-fs initialisation
    usbdDevice = usbd_init(&otgfs_usb_driver, &dev_descr, &config_descr, usb_strings, 3,
 80001c0:	4d26      	ldr	r5, [pc, #152]	; (800025c <main+0xa0>)
int main(void) {
 80001c2:	b088      	sub	sp, #32
    rcc_clock_setup_pll(&rcc_hse_8mhz_3v3[RCC_CLOCK_3V3_168MHZ]);
 80001c4:	f000 fce0 	bl	8000b88 <rcc_clock_setup_pll>
    rcc_periph_clock_enable(RCC_OTGFS);
 80001c8:	f240 6087 	movw	r0, #1671	; 0x687
 80001cc:	f000 fbd5 	bl	800097a <rcc_periph_clock_enable>
    initPins();
 80001d0:	f000 f85e 	bl	8000290 <initPins>
    cdcacm_init();
 80001d4:	f000 f9ae 	bl	8000534 <cdcacm_init>
    romdisk_init();
 80001d8:	f000 f8a8 	bl	800032c <romdisk_init>
    usbdDevice = usbd_init(&otgfs_usb_driver, &dev_descr, &config_descr, usb_strings, 3,
 80001dc:	4b20      	ldr	r3, [pc, #128]	; (8000260 <main+0xa4>)
 80001de:	9301      	str	r3, [sp, #4]
 80001e0:	2480      	movs	r4, #128	; 0x80
 80001e2:	2303      	movs	r3, #3
 80001e4:	4a1f      	ldr	r2, [pc, #124]	; (8000264 <main+0xa8>)
 80001e6:	4920      	ldr	r1, [pc, #128]	; (8000268 <main+0xac>)
 80001e8:	9300      	str	r3, [sp, #0]
 80001ea:	9402      	str	r4, [sp, #8]
 80001ec:	4b1f      	ldr	r3, [pc, #124]	; (800026c <main+0xb0>)
 80001ee:	4820      	ldr	r0, [pc, #128]	; (8000270 <main+0xb4>)
 80001f0:	f000 fd46 	bl	8000c80 <usbd_init>
 80001f4:	4606      	mov	r6, r0
 80001f6:	6028      	str	r0, [r5, #0]
        usbd_control_buffer, sizeof(usbd_control_buffer));

    // msc initialisation
    usb_msc_init(usbdDevice, 0x81, 64, 0x01, 64, "Amperka", "IskraJS", "1.00.00",
        romdisk_blocks(), romdisk_read, romdisk_write);
 80001f8:	f000 f97a 	bl	80004f0 <romdisk_blocks>
    usb_msc_init(usbdDevice, 0x81, 64, 0x01, 64, "Amperka", "IskraJS", "1.00.00",
 80001fc:	4b1d      	ldr	r3, [pc, #116]	; (8000274 <main+0xb8>)
 80001fe:	9306      	str	r3, [sp, #24]
 8000200:	4b1d      	ldr	r3, [pc, #116]	; (8000278 <main+0xbc>)
 8000202:	9305      	str	r3, [sp, #20]
 8000204:	4b1d      	ldr	r3, [pc, #116]	; (800027c <main+0xc0>)
 8000206:	9303      	str	r3, [sp, #12]
 8000208:	4b1d      	ldr	r3, [pc, #116]	; (8000280 <main+0xc4>)
 800020a:	9302      	str	r3, [sp, #8]
 800020c:	2240      	movs	r2, #64	; 0x40
 800020e:	4b1d      	ldr	r3, [pc, #116]	; (8000284 <main+0xc8>)
 8000210:	9200      	str	r2, [sp, #0]
 8000212:	9004      	str	r0, [sp, #16]
 8000214:	9301      	str	r3, [sp, #4]
 8000216:	2181      	movs	r1, #129	; 0x81
 8000218:	2301      	movs	r3, #1
 800021a:	4630      	mov	r0, r6
 800021c:	f001 fce2 	bl	8001be4 <usb_msc_init>
    // cdc handler connection
    usbd_register_set_config_callback(usbdDevice, cdcacm_set_config);
 8000220:	4919      	ldr	r1, [pc, #100]	; (8000288 <main+0xcc>)
 8000222:	6828      	ldr	r0, [r5, #0]
 8000224:	f000 ffbe 	bl	80011a4 <usbd_register_set_config_callback>

    // usb-fs interrupt enabling
    nvic_set_priority(NVIC_OTG_FS_IRQ, 2 << 4);
 8000228:	2120      	movs	r1, #32
 800022a:	2043      	movs	r0, #67	; 0x43
 800022c:	f001 fd92 	bl	8001d54 <nvic_set_priority>
    nvic_enable_irq(NVIC_OTG_FS_IRQ);
 8000230:	2043      	movs	r0, #67	; 0x43
 8000232:	f001 fd81 	bl	8001d38 <nvic_enable_irq>
    rcc_peripheral_enable_clock(&RCC_AHB2ENR, 1 << 7);
 8000236:	4621      	mov	r1, r4
 8000238:	4814      	ldr	r0, [pc, #80]	; (800028c <main+0xd0>)
 800023a:	f000 fb9a 	bl	8000972 <rcc_peripheral_enable_clock>

    // init systick as 1 kHz
    systick_setup();
 800023e:	f000 fab9 	bl	80007b4 <systick_setup>

    // if button pressed - do not start application, only bootloader (emergency mode)
    // otherwise - run application after bootloader init (normal mode)
    if (buttonReleased()) {
 8000242:	f000 f869 	bl	8000318 <buttonReleased>
 8000246:	b908      	cbnz	r0, 800024c <main+0x90>
        appJumper();
    } else {
        while (1)
            __asm__("nop");
 8000248:	bf00      	nop
 800024a:	e7fd      	b.n	8000248 <main+0x8c>
        appJumper();
 800024c:	f000 f9e4 	bl	8000618 <appJumper>
    }
}
 8000250:	2000      	movs	r0, #0
 8000252:	b008      	add	sp, #32
 8000254:	bd70      	pop	{r4, r5, r6, pc}
 8000256:	bf00      	nop
 8000258:	08002cd0 	.word	0x08002cd0
 800025c:	200001a8 	.word	0x200001a8
 8000260:	20000018 	.word	0x20000018
 8000264:	08002c5d 	.word	0x08002c5d
 8000268:	08002c6a 	.word	0x08002c6a
 800026c:	20000000 	.word	0x20000000
 8000270:	08002d60 	.word	0x08002d60
 8000274:	080003c5 	.word	0x080003c5
 8000278:	08000331 	.word	0x08000331
 800027c:	080025dc 	.word	0x080025dc
 8000280:	080025e4 	.word	0x080025e4
 8000284:	080025ec 	.word	0x080025ec
 8000288:	08000769 	.word	0x08000769
 800028c:	40023834 	.word	0x40023834

08000290 <initPins>:
 * License: GPLv3, all text here must be included in any redistribution.
 */

#include "depend.h"

void initPins() {
 8000290:	b510      	push	{r4, lr}
#ifdef STM32F407VGT6
    rcc_periph_clock_enable(RCC_GPIOD); // leds
 8000292:	f240 6003 	movw	r0, #1539	; 0x603
    rcc_periph_clock_enable(RCC_GPIOA); // button A0 and usb PA11 PA12
    gpio_mode_setup(GPIOA, GPIO_MODE_INPUT, GPIO_PUPD_PULLDOWN, GPIO0);
 8000296:	4c0e      	ldr	r4, [pc, #56]	; (80002d0 <initPins+0x40>)
    rcc_periph_clock_enable(RCC_GPIOD); // leds
 8000298:	f000 fb6f 	bl	800097a <rcc_periph_clock_enable>
    rcc_periph_clock_enable(RCC_GPIOA); // button A0 and usb PA11 PA12
 800029c:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80002a0:	f000 fb6b 	bl	800097a <rcc_periph_clock_enable>
    gpio_mode_setup(GPIOA, GPIO_MODE_INPUT, GPIO_PUPD_PULLDOWN, GPIO0);
 80002a4:	4620      	mov	r0, r4
 80002a6:	2301      	movs	r3, #1
 80002a8:	2202      	movs	r2, #2
 80002aa:	2100      	movs	r1, #0
 80002ac:	f000 fb13 	bl	80008d6 <gpio_mode_setup>
#ifdef STM32F411RG
    rcc_periph_clock_enable(RCC_GPIOB); // leds PB2 PB12 button PB1
    rcc_periph_clock_enable(RCC_GPIOA); // usb PA11 PA12
    gpio_mode_setup(GPIOB, GPIO_MODE_INPUT, GPIO_PUPD_PULLDOWN, GPIO1);
#endif
    gpio_mode_setup(GPIOA, GPIO_MODE_AF, GPIO_PUPD_NONE, GPIO11 | GPIO12);
 80002b0:	4620      	mov	r0, r4
 80002b2:	2200      	movs	r2, #0
 80002b4:	2102      	movs	r1, #2
 80002b6:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 80002ba:	f000 fb0c 	bl	80008d6 <gpio_mode_setup>
    gpio_set_af(GPIOA, GPIO_AF10, GPIO11 | GPIO12);
 80002be:	4620      	mov	r0, r4
 80002c0:	f44f 52c0 	mov.w	r2, #6144	; 0x1800
 80002c4:	210a      	movs	r1, #10
}
 80002c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    gpio_set_af(GPIOA, GPIO_AF10, GPIO11 | GPIO12);
 80002ca:	f000 bb26 	b.w	800091a <gpio_set_af>
 80002ce:	bf00      	nop
 80002d0:	40020000 	.word	0x40020000

080002d4 <showLeds>:

void showLeds() {
 80002d4:	b510      	push	{r4, lr}
#ifdef STM32F407VGT6
    gpio_mode_setup(GPIOD, GPIO_MODE_OUTPUT,
 80002d6:	4c07      	ldr	r4, [pc, #28]	; (80002f4 <showLeds+0x20>)
 80002d8:	2101      	movs	r1, #1
 80002da:	4620      	mov	r0, r4
 80002dc:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 80002e0:	2200      	movs	r2, #0
 80002e2:	f000 faf8 	bl	80008d6 <gpio_mode_setup>
        GPIO_PUPD_NONE, GPIO12 | GPIO13 | GPIO14 | GPIO15);
    gpio_set(GPIOD, GPIO12 | GPIO14);
 80002e6:	4620      	mov	r0, r4
 80002e8:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
#ifdef STM32F411RG
    gpio_mode_setup(GPIOB, GPIO_MODE_OUTPUT,
        GPIO_PUPD_NONE, GPIO2 | GPIO12);
    gpio_set(GPIOB, GPIO2);
#endif
}
 80002ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    gpio_set(GPIOD, GPIO12 | GPIO14);
 80002f0:	f000 bae0 	b.w	80008b4 <gpio_set>
 80002f4:	40020c00 	.word	0x40020c00

080002f8 <toggleLeds>:

void toggleLeds() {
#ifdef STM32F407VGT6
    gpio_toggle(GPIOD, GPIO12 | GPIO13 | GPIO14 | GPIO15);
 80002f8:	f44f 4170 	mov.w	r1, #61440	; 0xf000
 80002fc:	4801      	ldr	r0, [pc, #4]	; (8000304 <toggleLeds+0xc>)
 80002fe:	f000 bade 	b.w	80008be <gpio_toggle>
 8000302:	bf00      	nop
 8000304:	40020c00 	.word	0x40020c00

08000308 <hideLeds>:
#endif
}

void hideLeds() {
#ifdef STM32F407VGT6
    gpio_clear(GPIOD, GPIO12 | GPIO13 | GPIO14 | GPIO15);
 8000308:	f44f 4170 	mov.w	r1, #61440	; 0xf000
 800030c:	4801      	ldr	r0, [pc, #4]	; (8000314 <hideLeds+0xc>)
 800030e:	f000 bad3 	b.w	80008b8 <gpio_clear>
 8000312:	bf00      	nop
 8000314:	40020c00 	.word	0x40020c00

08000318 <buttonReleased>:
#ifdef STM32F411RG
    gpio_clear(GPIOB, GPIO2 | GPIO12);
#endif
}

bool buttonReleased() {
 8000318:	b508      	push	{r3, lr}
#ifdef STM32F407VGT6
    return !(gpio_port_read(GPIOA) & GPIO0);
 800031a:	4803      	ldr	r0, [pc, #12]	; (8000328 <buttonReleased+0x10>)
 800031c:	f000 fad8 	bl	80008d0 <gpio_port_read>
 8000320:	43c0      	mvns	r0, r0
    return !(gpio_port_read(GPIOC) & GPIO4);
#endif
#ifdef STM32F411RG
    return !(gpio_port_read(GPIOB) & GPIO1);
#endif
}
 8000322:	f000 0001 	and.w	r0, r0, #1
 8000326:	bd08      	pop	{r3, pc}
 8000328:	40020000 	.word	0x40020000

0800032c <romdisk_init>:

static uint8_t *romdata = (uint8_t *)APP_START; // 1 sector of flash, in 0 sector we has bootloader

int romdisk_init(void) {
    return 0;
}
 800032c:	2000      	movs	r0, #0
 800032e:	4770      	bx	lr

08000330 <romdisk_read>:

int romdisk_read(uint32_t lba, uint8_t *copy_to) {
 8000330:	b538      	push	{r3, r4, r5, lr}
 8000332:	460c      	mov	r4, r1
 8000334:	4605      	mov	r5, r0
    memset(copy_to, 0, SECTOR_SIZE);
 8000336:	f44f 7200 	mov.w	r2, #512	; 0x200
 800033a:	2100      	movs	r1, #0
 800033c:	4620      	mov	r0, r4
 800033e:	f002 f873 	bl	8002428 <memset>
    switch (lba) {
 8000342:	2d08      	cmp	r5, #8
 8000344:	d025      	beq.n	8000392 <romdisk_read+0x62>
 8000346:	d806      	bhi.n	8000356 <romdisk_read+0x26>
 8000348:	2d04      	cmp	r5, #4
 800034a:	d01a      	beq.n	8000382 <romdisk_read+0x52>
 800034c:	2d06      	cmp	r5, #6
 800034e:	d018      	beq.n	8000382 <romdisk_read+0x52>
 8000350:	b185      	cbz	r5, 8000374 <romdisk_read+0x44>
        break;    
    default:
        break;
    }
    return 0;
}
 8000352:	2000      	movs	r0, #0
 8000354:	bd38      	pop	{r3, r4, r5, pc}
    switch (lba) {
 8000356:	2d2c      	cmp	r5, #44	; 0x2c
 8000358:	d01e      	beq.n	8000398 <romdisk_read+0x68>
 800035a:	d804      	bhi.n	8000366 <romdisk_read+0x36>
 800035c:	2d28      	cmp	r5, #40	; 0x28
 800035e:	d1f8      	bne.n	8000352 <romdisk_read+0x22>
        memcpy(copy_to, Dir, sizeof(Dir));
 8000360:	22a0      	movs	r2, #160	; 0xa0
 8000362:	4911      	ldr	r1, [pc, #68]	; (80003a8 <romdisk_read+0x78>)
 8000364:	e009      	b.n	800037a <romdisk_read+0x4a>
    switch (lba) {
 8000366:	2d30      	cmp	r5, #48	; 0x30
 8000368:	d019      	beq.n	800039e <romdisk_read+0x6e>
 800036a:	2d34      	cmp	r5, #52	; 0x34
 800036c:	d1f1      	bne.n	8000352 <romdisk_read+0x22>
        memcpy(copy_to, Iskrajs_h, sizeof(Iskrajs_h));
 800036e:	227a      	movs	r2, #122	; 0x7a
 8000370:	490e      	ldr	r1, [pc, #56]	; (80003ac <romdisk_read+0x7c>)
 8000372:	e002      	b.n	800037a <romdisk_read+0x4a>
        memcpy(copy_to, BootSector, sizeof(BootSector));
 8000374:	490e      	ldr	r1, [pc, #56]	; (80003b0 <romdisk_read+0x80>)
 8000376:	f44f 7200 	mov.w	r2, #512	; 0x200
        memcpy(copy_to, Iskrajs_h, sizeof(Iskrajs_h));
 800037a:	4620      	mov	r0, r4
 800037c:	f001 ffba 	bl	80022f4 <memcpy>
        break;    
 8000380:	e7e7      	b.n	8000352 <romdisk_read+0x22>
        memcpy(copy_to, Fat, sizeof(Fat));
 8000382:	4b0c      	ldr	r3, [pc, #48]	; (80003b4 <romdisk_read+0x84>)
 8000384:	681a      	ldr	r2, [r3, #0]
 8000386:	6022      	str	r2, [r4, #0]
 8000388:	685a      	ldr	r2, [r3, #4]
 800038a:	7a1b      	ldrb	r3, [r3, #8]
 800038c:	6062      	str	r2, [r4, #4]
 800038e:	7223      	strb	r3, [r4, #8]
        break;
 8000390:	e7df      	b.n	8000352 <romdisk_read+0x22>
        memcpy(copy_to, Root, sizeof(Root));
 8000392:	22e0      	movs	r2, #224	; 0xe0
 8000394:	4908      	ldr	r1, [pc, #32]	; (80003b8 <romdisk_read+0x88>)
 8000396:	e7f0      	b.n	800037a <romdisk_read+0x4a>
        memcpy(copy_to, Guid, sizeof(Guid));
 8000398:	224c      	movs	r2, #76	; 0x4c
 800039a:	4908      	ldr	r1, [pc, #32]	; (80003bc <romdisk_read+0x8c>)
 800039c:	e7ed      	b.n	800037a <romdisk_read+0x4a>
        memcpy(copy_to, Readme, sizeof(Readme));
 800039e:	f240 1275 	movw	r2, #373	; 0x175
 80003a2:	4907      	ldr	r1, [pc, #28]	; (80003c0 <romdisk_read+0x90>)
 80003a4:	e7e9      	b.n	800037a <romdisk_read+0x4a>
 80003a6:	bf00      	nop
 80003a8:	080027f4 	.word	0x080027f4
 80003ac:	080029c9 	.word	0x080029c9
 80003b0:	080025f4 	.word	0x080025f4
 80003b4:	08002894 	.word	0x08002894
 80003b8:	080028e9 	.word	0x080028e9
 80003bc:	0800289d 	.word	0x0800289d
 80003c0:	08002a43 	.word	0x08002a43

080003c4 <romdisk_write>:
static uint8_t shift = 0;
static bool firmwareIsRight = false;

int romdisk_write(uint32_t lba, const uint8_t *copy_from) {
    // testing firmware structure
    if(lba == START_DATA_SECTOR) {
 80003c4:	2838      	cmp	r0, #56	; 0x38
int romdisk_write(uint32_t lba, const uint8_t *copy_from) {
 80003c6:	b538      	push	{r3, r4, r5, lr}
 80003c8:	4604      	mov	r4, r0
 80003ca:	460d      	mov	r5, r1
    if(lba == START_DATA_SECTOR) {
 80003cc:	d122      	bne.n	8000414 <romdisk_write+0x50>
        if(((uint32_t*)(copy_from))[0] == 0x20020000 /*&& 
 80003ce:	4b45      	ldr	r3, [pc, #276]	; (80004e4 <romdisk_write+0x120>)
 80003d0:	680a      	ldr	r2, [r1, #0]
 80003d2:	429a      	cmp	r2, r3
 80003d4:	4b44      	ldr	r3, [pc, #272]	; (80004e8 <romdisk_write+0x124>)
 80003d6:	d118      	bne.n	800040a <romdisk_write+0x46>
           ((uint32_t*)(copy_from))[83] == 0x080001ad*/) { // TODO here will be USB FS handler address
            firmwareIsRight = true;
 80003d8:	2201      	movs	r2, #1
 80003da:	701a      	strb	r2, [r3, #0]
            firmwareIsRight = false;
            relaxJumper(); // for reboot after bad firmware downloading 
        }
    }
    if (lba >= START_DATA_SECTOR) {
        if(firmwareIsRight) { // if firmware structure is ok
 80003dc:	4b42      	ldr	r3, [pc, #264]	; (80004e8 <romdisk_write+0x124>)
 80003de:	781b      	ldrb	r3, [r3, #0]
 80003e0:	b1d3      	cbz	r3, 8000418 <romdisk_write+0x54>

            flash_unlock();
 80003e2:	f000 f9f5 	bl	80007d0 <flash_unlock>

            switch (lba - START_DATA_SECTOR) {
 80003e6:	f1a4 0138 	sub.w	r1, r4, #56	; 0x38
 80003ea:	f5b1 7ff0 	cmp.w	r1, #480	; 0x1e0
 80003ee:	d061      	beq.n	80004b4 <romdisk_write+0xf0>
 80003f0:	d81e      	bhi.n	8000430 <romdisk_write+0x6c>
 80003f2:	2940      	cmp	r1, #64	; 0x40
 80003f4:	d052      	beq.n	800049c <romdisk_write+0xd8>
 80003f6:	d811      	bhi.n	800041c <romdisk_write+0x58>
 80003f8:	b3b1      	cbz	r1, 8000468 <romdisk_write+0xa4>
 80003fa:	2920      	cmp	r1, #32
 80003fc:	d046      	beq.n	800048c <romdisk_write+0xc8>
#endif // STM32F411RG 
            default:
                break;
            }

            if (lba >= START_DATA_SECTOR && lba < SECTOR_COUNT) {
 80003fe:	f5b1 6ff5 	cmp.w	r1, #1960	; 0x7a8
 8000402:	d338      	bcc.n	8000476 <romdisk_write+0xb2>
                flash_program((uint32_t)romdata + (lba - START_DATA_SECTOR) * SECTOR_SIZE, copy_from, SECTOR_SIZE);
            }

            flash_lock();
 8000404:	f000 f9f0 	bl	80007e8 <flash_lock>
 8000408:	e006      	b.n	8000418 <romdisk_write+0x54>
            firmwareIsRight = false;
 800040a:	2200      	movs	r2, #0
 800040c:	701a      	strb	r2, [r3, #0]
            relaxJumper(); // for reboot after bad firmware downloading 
 800040e:	f000 f96b 	bl	80006e8 <relaxJumper>
 8000412:	e7e3      	b.n	80003dc <romdisk_write+0x18>
    if (lba >= START_DATA_SECTOR) {
 8000414:	2837      	cmp	r0, #55	; 0x37
 8000416:	d8e1      	bhi.n	80003dc <romdisk_write+0x18>
        }
        // else do not write bad firmware
    }
    return 0;
}
 8000418:	2000      	movs	r0, #0
 800041a:	bd38      	pop	{r3, r4, r5, pc}
            switch (lba - START_DATA_SECTOR) {
 800041c:	2960      	cmp	r1, #96	; 0x60
 800041e:	d043      	beq.n	80004a8 <romdisk_write+0xe4>
 8000420:	29e0      	cmp	r1, #224	; 0xe0
 8000422:	d1ec      	bne.n	80003fe <romdisk_write+0x3a>
                otherBlock = true;
 8000424:	4b31      	ldr	r3, [pc, #196]	; (80004ec <romdisk_write+0x128>)
 8000426:	2201      	movs	r2, #1
 8000428:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(5, 0);
 800042a:	2100      	movs	r1, #0
 800042c:	2005      	movs	r0, #5
 800042e:	e032      	b.n	8000496 <romdisk_write+0xd2>
            switch (lba - START_DATA_SECTOR) {
 8000430:	f5b1 6f9c 	cmp.w	r1, #1248	; 0x4e0
 8000434:	d04a      	beq.n	80004cc <romdisk_write+0x108>
 8000436:	d80b      	bhi.n	8000450 <romdisk_write+0x8c>
 8000438:	f5b1 7f38 	cmp.w	r1, #736	; 0x2e0
 800043c:	d040      	beq.n	80004c0 <romdisk_write+0xfc>
 800043e:	f5b1 7f78 	cmp.w	r1, #992	; 0x3e0
 8000442:	d1dc      	bne.n	80003fe <romdisk_write+0x3a>
                otherBlock = true;
 8000444:	4b29      	ldr	r3, [pc, #164]	; (80004ec <romdisk_write+0x128>)
 8000446:	2201      	movs	r2, #1
 8000448:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(8, 0);
 800044a:	2100      	movs	r1, #0
 800044c:	2008      	movs	r0, #8
 800044e:	e022      	b.n	8000496 <romdisk_write+0xd2>
            switch (lba - START_DATA_SECTOR) {
 8000450:	f5b1 6fbc 	cmp.w	r1, #1504	; 0x5e0
 8000454:	d040      	beq.n	80004d8 <romdisk_write+0x114>
 8000456:	f5b1 6fdc 	cmp.w	r1, #1760	; 0x6e0
 800045a:	d1d0      	bne.n	80003fe <romdisk_write+0x3a>
                otherBlock = true;
 800045c:	4b23      	ldr	r3, [pc, #140]	; (80004ec <romdisk_write+0x128>)
 800045e:	2201      	movs	r2, #1
 8000460:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(11, 0);
 8000462:	2100      	movs	r1, #0
 8000464:	200b      	movs	r0, #11
 8000466:	e016      	b.n	8000496 <romdisk_write+0xd2>
                otherBlock = true;
 8000468:	4b20      	ldr	r3, [pc, #128]	; (80004ec <romdisk_write+0x128>)
 800046a:	2001      	movs	r0, #1
 800046c:	7018      	strb	r0, [r3, #0]
                flash_erase_sector(1, 0);
 800046e:	f000 f9f5 	bl	800085c <flash_erase_sector>
                relaxJumper();
 8000472:	f000 f939 	bl	80006e8 <relaxJumper>
                flash_program((uint32_t)romdata + (lba - START_DATA_SECTOR) * SECTOR_SIZE, copy_from, SECTOR_SIZE);
 8000476:	0260      	lsls	r0, r4, #9
 8000478:	f100 60ff 	add.w	r0, r0, #133693440	; 0x7f80000
 800047c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000480:	4629      	mov	r1, r5
 8000482:	f500 20fa 	add.w	r0, r0, #512000	; 0x7d000
 8000486:	f000 f9db 	bl	8000840 <flash_program>
 800048a:	e7bb      	b.n	8000404 <romdisk_write+0x40>
                otherBlock = true;
 800048c:	4b17      	ldr	r3, [pc, #92]	; (80004ec <romdisk_write+0x128>)
 800048e:	2201      	movs	r2, #1
 8000490:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(2, 0);
 8000492:	2100      	movs	r1, #0
 8000494:	2002      	movs	r0, #2
                flash_erase_sector(10, 0);
 8000496:	f000 f9e1 	bl	800085c <flash_erase_sector>
                break;
 800049a:	e7ec      	b.n	8000476 <romdisk_write+0xb2>
                otherBlock = true;
 800049c:	4b13      	ldr	r3, [pc, #76]	; (80004ec <romdisk_write+0x128>)
 800049e:	2201      	movs	r2, #1
 80004a0:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(3, 0);
 80004a2:	2100      	movs	r1, #0
 80004a4:	2003      	movs	r0, #3
 80004a6:	e7f6      	b.n	8000496 <romdisk_write+0xd2>
                otherBlock = true;
 80004a8:	4b10      	ldr	r3, [pc, #64]	; (80004ec <romdisk_write+0x128>)
 80004aa:	2201      	movs	r2, #1
 80004ac:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(4, 0);
 80004ae:	2100      	movs	r1, #0
 80004b0:	2004      	movs	r0, #4
 80004b2:	e7f0      	b.n	8000496 <romdisk_write+0xd2>
                otherBlock = true;
 80004b4:	4b0d      	ldr	r3, [pc, #52]	; (80004ec <romdisk_write+0x128>)
 80004b6:	2201      	movs	r2, #1
 80004b8:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(6, 0);
 80004ba:	2100      	movs	r1, #0
 80004bc:	2006      	movs	r0, #6
 80004be:	e7ea      	b.n	8000496 <romdisk_write+0xd2>
                otherBlock = true;
 80004c0:	4b0a      	ldr	r3, [pc, #40]	; (80004ec <romdisk_write+0x128>)
 80004c2:	2201      	movs	r2, #1
 80004c4:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(7, 0);
 80004c6:	2100      	movs	r1, #0
 80004c8:	2007      	movs	r0, #7
 80004ca:	e7e4      	b.n	8000496 <romdisk_write+0xd2>
                otherBlock = true;
 80004cc:	4b07      	ldr	r3, [pc, #28]	; (80004ec <romdisk_write+0x128>)
 80004ce:	2201      	movs	r2, #1
 80004d0:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(9, 0);
 80004d2:	2100      	movs	r1, #0
 80004d4:	2009      	movs	r0, #9
 80004d6:	e7de      	b.n	8000496 <romdisk_write+0xd2>
                otherBlock = true;
 80004d8:	4b04      	ldr	r3, [pc, #16]	; (80004ec <romdisk_write+0x128>)
 80004da:	2201      	movs	r2, #1
 80004dc:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(10, 0);
 80004de:	2100      	movs	r1, #0
 80004e0:	200a      	movs	r0, #10
 80004e2:	e7d8      	b.n	8000496 <romdisk_write+0xd2>
 80004e4:	20020000 	.word	0x20020000
 80004e8:	20000098 	.word	0x20000098
 80004ec:	200001a6 	.word	0x200001a6

080004f0 <romdisk_blocks>:

int romdisk_blocks(void) { return SECTOR_COUNT; }
 80004f0:	f44f 60fc 	mov.w	r0, #2016	; 0x7e0
 80004f4:	4770      	bx	lr

080004f6 <cdcacm_sync>:

bufSerial serialIn;
bufSerial serialOut;

// In interrupt solve if needs to send
void cdcacm_sync(void) {
 80004f6:	4770      	bx	lr

080004f8 <cdcacm_data_tx_all>:
        //cdcacm_data_tx_all(usbdDevice);
    //}
}

// Send packet to USB
void cdcacm_data_tx_all(usbd_device* usbd_dev) {
 80004f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    char buf[64];
    int len = (serialOut.len > 60) ? 60 : serialOut.len;
 80004fa:	4e0d      	ldr	r6, [pc, #52]	; (8000530 <cdcacm_data_tx_all+0x38>)
 80004fc:	f9b6 4004 	ldrsh.w	r4, [r6, #4]
 8000500:	2c3c      	cmp	r4, #60	; 0x3c
void cdcacm_data_tx_all(usbd_device* usbd_dev) {
 8000502:	b091      	sub	sp, #68	; 0x44
 8000504:	4607      	mov	r7, r0
    int len = (serialOut.len > 60) ? 60 : serialOut.len;
 8000506:	bfa8      	it	ge
 8000508:	243c      	movge	r4, #60	; 0x3c
    for (int i = 0; i < len; i++)
 800050a:	2500      	movs	r5, #0
 800050c:	42a5      	cmp	r5, r4
 800050e:	db07      	blt.n	8000520 <cdcacm_data_tx_all+0x28>
        buf[i] = (char)getBufSerial(&serialOut);
    usbd_ep_write_packet(usbd_dev, 0x83, buf, len);
 8000510:	b2a3      	uxth	r3, r4
 8000512:	466a      	mov	r2, sp
 8000514:	2183      	movs	r1, #131	; 0x83
 8000516:	4638      	mov	r0, r7
 8000518:	f000 fc0a 	bl	8000d30 <usbd_ep_write_packet>
}
 800051c:	b011      	add	sp, #68	; 0x44
 800051e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        buf[i] = (char)getBufSerial(&serialOut);
 8000520:	4630      	mov	r0, r6
 8000522:	f000 f852 	bl	80005ca <getBufSerial>
 8000526:	f80d 0005 	strb.w	r0, [sp, r5]
    for (int i = 0; i < len; i++)
 800052a:	3501      	adds	r5, #1
 800052c:	e7ee      	b.n	800050c <cdcacm_data_tx_all+0x14>
 800052e:	bf00      	nop
 8000530:	20000120 	.word	0x20000120

08000534 <cdcacm_init>:

// RX and TX buffers initialisation
void cdcacm_init(void) {
 8000534:	b508      	push	{r3, lr}
    initBufSerial(&serialIn);
 8000536:	4804      	ldr	r0, [pc, #16]	; (8000548 <cdcacm_init+0x14>)
 8000538:	f000 f834 	bl	80005a4 <initBufSerial>
    initBufSerial(&serialOut);
 800053c:	4803      	ldr	r0, [pc, #12]	; (800054c <cdcacm_init+0x18>)
}
 800053e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    initBufSerial(&serialOut);
 8000542:	f000 b82f 	b.w	80005a4 <initBufSerial>
 8000546:	bf00      	nop
 8000548:	2000009a 	.word	0x2000009a
 800054c:	20000120 	.word	0x20000120

08000550 <cdcacm_out_ready>:

// TX buffer is not full
bool cdcacm_out_ready(void) { 
    return canWrite(&serialOut);
 8000550:	4801      	ldr	r0, [pc, #4]	; (8000558 <cdcacm_out_ready+0x8>)
 8000552:	f000 b82c 	b.w	80005ae <canWrite>
 8000556:	bf00      	nop
 8000558:	20000120 	.word	0x20000120

0800055c <cdcacm_putc>:
}

// Put char to TX buffer
void cdcacm_putc(uint8_t c) {
 800055c:	b510      	push	{r4, lr}
    putBufSerial(&serialOut, c);
 800055e:	4c08      	ldr	r4, [pc, #32]	; (8000580 <cdcacm_putc+0x24>)
 8000560:	4601      	mov	r1, r0
 8000562:	4620      	mov	r0, r4
 8000564:	f000 f846 	bl	80005f4 <putBufSerial>
    if (serialOut.len > 60) {
 8000568:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800056c:	2b3c      	cmp	r3, #60	; 0x3c
 800056e:	dd05      	ble.n	800057c <cdcacm_putc+0x20>
        cdcacm_data_tx_all(usbdDevice);
 8000570:	4b04      	ldr	r3, [pc, #16]	; (8000584 <cdcacm_putc+0x28>)
    }
}
 8000572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        cdcacm_data_tx_all(usbdDevice);
 8000576:	6818      	ldr	r0, [r3, #0]
 8000578:	f7ff bfbe 	b.w	80004f8 <cdcacm_data_tx_all>
 800057c:	bd10      	pop	{r4, pc}
 800057e:	bf00      	nop
 8000580:	20000120 	.word	0x20000120
 8000584:	200001a8 	.word	0x200001a8

08000588 <cdcacm_in_ready>:

// RX buffer is not empty
bool cdcacm_in_ready(void) {
    return canRead(&serialIn);
 8000588:	4801      	ldr	r0, [pc, #4]	; (8000590 <cdcacm_in_ready+0x8>)
 800058a:	f000 b817 	b.w	80005bc <canRead>
 800058e:	bf00      	nop
 8000590:	2000009a 	.word	0x2000009a

08000594 <cdcacm_getc>:
}

// read char from RX buffer
int cdcacm_getc(void) {
 8000594:	b508      	push	{r3, lr}
    return getBufSerial(&serialIn);
 8000596:	4802      	ldr	r0, [pc, #8]	; (80005a0 <cdcacm_getc+0xc>)
 8000598:	f000 f817 	bl	80005ca <getBufSerial>
}
 800059c:	bd08      	pop	{r3, pc}
 800059e:	bf00      	nop
 80005a0:	2000009a 	.word	0x2000009a

080005a4 <initBufSerial>:

#include "serialbuf.h"

// initialisation
void initBufSerial(bufSerial* buf) {
    buf->len = buf->first = buf->last = 0;
 80005a4:	2300      	movs	r3, #0
 80005a6:	8043      	strh	r3, [r0, #2]
 80005a8:	8003      	strh	r3, [r0, #0]
 80005aa:	8083      	strh	r3, [r0, #4]
 80005ac:	4770      	bx	lr

080005ae <canWrite>:
}

// true if buffer is not full
bool canWrite(bufSerial* buf) { return (buf->len < SERIALBUFLEN); }
 80005ae:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 80005b2:	287f      	cmp	r0, #127	; 0x7f
 80005b4:	bfcc      	ite	gt
 80005b6:	2000      	movgt	r0, #0
 80005b8:	2001      	movle	r0, #1
 80005ba:	4770      	bx	lr

080005bc <canRead>:

// true i buffer is not empty
bool canRead(bufSerial* buf) { return (buf->len > 0); }
 80005bc:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 80005c0:	2800      	cmp	r0, #0
 80005c2:	bfd4      	ite	le
 80005c4:	2000      	movle	r0, #0
 80005c6:	2001      	movgt	r0, #1
 80005c8:	4770      	bx	lr

080005ca <getBufSerial>:
 80005ca:	f9b0 1004 	ldrsh.w	r1, [r0, #4]

// get character from buffer. -1 if buffer empty.
int16_t getBufSerial(bufSerial* buf) {
    int16_t c = -1;
    if (canRead(buf)) {
 80005ce:	2900      	cmp	r1, #0
int16_t getBufSerial(bufSerial* buf) {
 80005d0:	4602      	mov	r2, r0
    if (canRead(buf)) {
 80005d2:	dd0c      	ble.n	80005ee <getBufSerial+0x24>
        c = buf->buf[buf->last];
 80005d4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80005d8:	4418      	add	r0, r3
        buf->last++;
 80005da:	3301      	adds	r3, #1
 80005dc:	b21b      	sxth	r3, r3
        if (buf->last == SERIALBUFLEN)
 80005de:	2b80      	cmp	r3, #128	; 0x80
            buf->last = 0;
 80005e0:	bf08      	it	eq
 80005e2:	2300      	moveq	r3, #0
        buf->len--;
 80005e4:	3901      	subs	r1, #1
        c = buf->buf[buf->last];
 80005e6:	7980      	ldrb	r0, [r0, #6]
            buf->last = 0;
 80005e8:	8053      	strh	r3, [r2, #2]
        buf->len--;
 80005ea:	8091      	strh	r1, [r2, #4]
 80005ec:	4770      	bx	lr
    int16_t c = -1;
 80005ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    }
    return c;
}
 80005f2:	4770      	bx	lr

080005f4 <putBufSerial>:
bool canWrite(bufSerial* buf) { return (buf->len < SERIALBUFLEN); }
 80005f4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]

// push character to buffer
void putBufSerial(bufSerial* buf, uint8_t c) {
    if (canWrite(buf)) {
 80005f8:	2a7f      	cmp	r2, #127	; 0x7f
void putBufSerial(bufSerial* buf, uint8_t c) {
 80005fa:	b510      	push	{r4, lr}
    if (canWrite(buf)) {
 80005fc:	dc0b      	bgt.n	8000616 <putBufSerial+0x22>
        buf->buf[buf->first] = c;
 80005fe:	f9b0 3000 	ldrsh.w	r3, [r0]
 8000602:	18c4      	adds	r4, r0, r3
        buf->first++;
 8000604:	3301      	adds	r3, #1
 8000606:	b21b      	sxth	r3, r3
        if (buf->first == SERIALBUFLEN)
 8000608:	2b80      	cmp	r3, #128	; 0x80
            buf->first = 0;
 800060a:	bf08      	it	eq
 800060c:	2300      	moveq	r3, #0
        buf->len++;
 800060e:	3201      	adds	r2, #1
        buf->buf[buf->first] = c;
 8000610:	71a1      	strb	r1, [r4, #6]
            buf->first = 0;
 8000612:	8003      	strh	r3, [r0, #0]
        buf->len++;
 8000614:	8082      	strh	r2, [r0, #4]
 8000616:	bd10      	pop	{r4, pc}

08000618 <appJumper>:
    //SCB_VTOR = APP_START;

    // safe interface addresses for using in application ?

    // write to RAM address of USB FS handler
    *((volatile uint32_t*)(RAM_START - 4)) = (uint32_t)cdcacm_sync;
 8000618:	4b18      	ldr	r3, [pc, #96]	; (800067c <appJumper+0x64>)
 800061a:	4a19      	ldr	r2, [pc, #100]	; (8000680 <appJumper+0x68>)
 800061c:	601a      	str	r2, [r3, #0]
    // write to RAM address of USB_SERIAL_RX
    *((volatile uint32_t*)(RAM_START - 8)) = (uint32_t)cdcacm_getc;
 800061e:	4a19      	ldr	r2, [pc, #100]	; (8000684 <appJumper+0x6c>)
 8000620:	f843 2c04 	str.w	r2, [r3, #-4]
    // write to RAM address of USB_SERIAL_TX
    *((volatile uint32_t*)(RAM_START - 12)) = (uint32_t)cdcacm_putc;
 8000624:	4a18      	ldr	r2, [pc, #96]	; (8000688 <appJumper+0x70>)
 8000626:	f843 2c08 	str.w	r2, [r3, #-8]
    // write to RAM address of USB_SERIAL_AVAILABLE
    *((volatile uint32_t*)(RAM_START - 16)) = (uint32_t)cdcacm_in_ready;
 800062a:	4a18      	ldr	r2, [pc, #96]	; (800068c <appJumper+0x74>)
 800062c:	f843 2c0c 	str.w	r2, [r3, #-12]
    // write to RAM address of USB_SERIAL_READY
    *((volatile uint32_t*)(RAM_START - 20)) = (uint32_t)cdcacm_out_ready;
 8000630:	4a17      	ldr	r2, [pc, #92]	; (8000690 <appJumper+0x78>)
 8000632:	f843 2c10 	str.w	r2, [r3, #-16]
void appJumper(void) {
 8000636:	b082      	sub	sp, #8
 *
 * Mask all interrupts globally
 */
static inline void cm_disable_interrupts(void)
{
	__asm__ volatile ("CPSID I\n");
 8000638:	b672      	cpsid	i

    cm_disable_interrupts();

    volatile uint32_t stackPtr = *(volatile uint32_t*)(APP_START);
 800063a:	4b16      	ldr	r3, [pc, #88]	; (8000694 <appJumper+0x7c>)
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	9300      	str	r3, [sp, #0]
    volatile uint32_t jumpAddress = *(volatile uint32_t*)(APP_START + 4);
 8000640:	4b15      	ldr	r3, [pc, #84]	; (8000698 <appJumper+0x80>)
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	9301      	str	r3, [sp, #4]
    // reset core registers set stack and jump to address
    __asm volatile("eor r0, r0\n"
 8000646:	9b01      	ldr	r3, [sp, #4]
 8000648:	9a00      	ldr	r2, [sp, #0]
 800064a:	ea80 0000 	eor.w	r0, r0, r0
 800064e:	4619      	mov	r1, r3
 8000650:	4612      	mov	r2, r2
 8000652:	f380 8809 	msr	PSP, r0
 8000656:	f382 8808 	msr	MSP, r2
 800065a:	f380 8805 	msr	IPSR, r0
 800065e:	f380 8810 	msr	PRIMASK, r0
 8000662:	f380 8813 	msr	FAULTMASK, r0
 8000666:	f380 8811 	msr	BASEPRI, r0
 800066a:	f380 8814 	msr	CONTROL, r0
 800066e:	ea8e 0e0e 	eor.w	lr, lr, lr
 8000672:	f1ae 0e01 	sub.w	lr, lr, #1
 8000676:	468f      	mov	pc, r1
                   "eor lr, lr\n"
                   "sub lr, #1\n"
                   "mov pc, r1\n"
                   :
                   : "r"(jumpAddress), "r"(stackPtr));
}
 8000678:	b002      	add	sp, #8
 800067a:	4770      	bx	lr
 800067c:	200007fc 	.word	0x200007fc
 8000680:	080004f7 	.word	0x080004f7
 8000684:	08000595 	.word	0x08000595
 8000688:	0800055d 	.word	0x0800055d
 800068c:	08000589 	.word	0x08000589
 8000690:	08000551 	.word	0x08000551
 8000694:	08004000 	.word	0x08004000
 8000698:	08004004 	.word	0x08004004

0800069c <resetJumper>:

void resetJumper(void) {
 800069c:	b508      	push	{r3, lr}
    usbd_disconnect(usbdDevice, true);
 800069e:	4b03      	ldr	r3, [pc, #12]	; (80006ac <resetJumper+0x10>)
 80006a0:	2101      	movs	r1, #1
 80006a2:	6818      	ldr	r0, [r3, #0]
 80006a4:	f000 fb1c 	bl	8000ce0 <usbd_disconnect>
    scb_reset_system();
 80006a8:	f001 fb3e 	bl	8001d28 <scb_reset_system>
 80006ac:	200001a8 	.word	0x200001a8

080006b0 <relaxLoop>:
}

static void relaxLoop(void) {
 80006b0:	b570      	push	{r4, r5, r6, lr}
    // do some blinking when downloading firmware
    showLeds();
 80006b2:	f7ff fe0f 	bl	80002d4 <showLeds>
    for (int j = 0; j < 15; j++) {
 80006b6:	2400      	movs	r4, #0
        if (otherBlock) {
 80006b8:	4d09      	ldr	r5, [pc, #36]	; (80006e0 <relaxLoop+0x30>)
            otherBlock = false;
 80006ba:	4626      	mov	r6, r4
        if (otherBlock) {
 80006bc:	782b      	ldrb	r3, [r5, #0]
 80006be:	b10b      	cbz	r3, 80006c4 <relaxLoop+0x14>
            otherBlock = false;
 80006c0:	702e      	strb	r6, [r5, #0]
            j = 0;
 80006c2:	2400      	movs	r4, #0
        }
        toggleLeds();
 80006c4:	f7ff fe18 	bl	80002f8 <toggleLeds>
 80006c8:	4b06      	ldr	r3, [pc, #24]	; (80006e4 <relaxLoop+0x34>)
        for (int i = 0; i < 3000000; i++) {
            __asm__("nop");
 80006ca:	bf00      	nop
        for (int i = 0; i < 3000000; i++) {
 80006cc:	3b01      	subs	r3, #1
 80006ce:	d1fc      	bne.n	80006ca <relaxLoop+0x1a>
    for (int j = 0; j < 15; j++) {
 80006d0:	3401      	adds	r4, #1
 80006d2:	2c0e      	cmp	r4, #14
 80006d4:	ddf2      	ble.n	80006bc <relaxLoop+0xc>
        }
    }
    hideLeds();
 80006d6:	f7ff fe17 	bl	8000308 <hideLeds>
    // after blink - reboot
    resetJumper();
 80006da:	f7ff ffdf 	bl	800069c <resetJumper>
 80006de:	bf00      	nop
 80006e0:	200001a6 	.word	0x200001a6
 80006e4:	002dc6c0 	.word	0x002dc6c0

080006e8 <relaxJumper>:
 80006e8:	b672      	cpsid	i
}

void relaxJumper(void) {
    cm_disable_interrupts();
    // relocate interrupt vectors
    SCB_VTOR = 0x08000000;
 80006ea:	4b04      	ldr	r3, [pc, #16]	; (80006fc <relaxJumper+0x14>)
 80006ec:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80006f0:	601a      	str	r2, [r3, #0]
    // replace return address of usb-fs interrupt to relaxLoop
    __asm volatile("mov r1, %0\n"
 80006f2:	4b03      	ldr	r3, [pc, #12]	; (8000700 <relaxJumper+0x18>)
 80006f4:	4619      	mov	r1, r3
 80006f6:	9118      	str	r1, [sp, #96]	; 0x60
	__asm__ volatile ("CPSIE I\n");
 80006f8:	b662      	cpsie	i
 80006fa:	4770      	bx	lr
 80006fc:	e000ed08 	.word	0xe000ed08
 8000700:	080006b1 	.word	0x080006b1

08000704 <cdcacm_control_request>:

    (void)complete;
    (void)buf;
    (void)usbd_dev;

    switch (req->bRequest) {
 8000704:	7848      	ldrb	r0, [r1, #1]
 8000706:	2820      	cmp	r0, #32
 8000708:	d004      	beq.n	8000714 <cdcacm_control_request+0x10>
            return USBD_REQ_NOTSUPP;
        }

        return USBD_REQ_HANDLED;
    }
    return USBD_REQ_NOTSUPP;
 800070a:	f1a0 0322 	sub.w	r3, r0, #34	; 0x22
 800070e:	4258      	negs	r0, r3
 8000710:	4158      	adcs	r0, r3
 8000712:	4770      	bx	lr
        if (*len < sizeof(struct usb_cdc_line_coding)) {
 8000714:	8818      	ldrh	r0, [r3, #0]
        return USBD_REQ_HANDLED;
 8000716:	2806      	cmp	r0, #6
 8000718:	bf94      	ite	ls
 800071a:	2000      	movls	r0, #0
 800071c:	2001      	movhi	r0, #1
}
 800071e:	4770      	bx	lr

08000720 <cdcacm_data_rx_cb>:

void cdcacm_data_rx_cb(usbd_device* usbd_dev, uint8_t ep) {
 8000720:	b570      	push	{r4, r5, r6, lr}
 8000722:	b090      	sub	sp, #64	; 0x40
    (void)ep;

    char buf[64];
    int len = usbd_ep_read_packet(usbd_dev, 0x03, buf, 64);
 8000724:	2340      	movs	r3, #64	; 0x40
 8000726:	466a      	mov	r2, sp
 8000728:	2103      	movs	r1, #3
 800072a:	f000 fb09 	bl	8000d40 <usbd_ep_read_packet>

    for (int i = 0; i < len; i++) {
        putBufSerial(&serialIn, buf[i] + 1);
 800072e:	4e0d      	ldr	r6, [pc, #52]	; (8000764 <cdcacm_data_rx_cb+0x44>)
    int len = usbd_ep_read_packet(usbd_dev, 0x03, buf, 64);
 8000730:	4605      	mov	r5, r0
    for (int i = 0; i < len; i++) {
 8000732:	2400      	movs	r4, #0
 8000734:	42ac      	cmp	r4, r5
 8000736:	db04      	blt.n	8000742 <cdcacm_data_rx_cb+0x22>
 8000738:	2400      	movs	r4, #0
    }

    for (int i = 0; i < len; i++) {
 800073a:	42ac      	cmp	r4, r5
 800073c:	db0a      	blt.n	8000754 <cdcacm_data_rx_cb+0x34>
        cdcacm_putc(cdcacm_getc() + 1);
    }
}
 800073e:	b010      	add	sp, #64	; 0x40
 8000740:	bd70      	pop	{r4, r5, r6, pc}
        putBufSerial(&serialIn, buf[i] + 1);
 8000742:	f81d 1004 	ldrb.w	r1, [sp, r4]
 8000746:	3101      	adds	r1, #1
 8000748:	b2c9      	uxtb	r1, r1
 800074a:	4630      	mov	r0, r6
 800074c:	f7ff ff52 	bl	80005f4 <putBufSerial>
    for (int i = 0; i < len; i++) {
 8000750:	3401      	adds	r4, #1
 8000752:	e7ef      	b.n	8000734 <cdcacm_data_rx_cb+0x14>
        cdcacm_putc(cdcacm_getc() + 1);
 8000754:	f7ff ff1e 	bl	8000594 <cdcacm_getc>
 8000758:	3001      	adds	r0, #1
 800075a:	b2c0      	uxtb	r0, r0
 800075c:	f7ff fefe 	bl	800055c <cdcacm_putc>
    for (int i = 0; i < len; i++) {
 8000760:	3401      	adds	r4, #1
 8000762:	e7ea      	b.n	800073a <cdcacm_data_rx_cb+0x1a>
 8000764:	2000009a 	.word	0x2000009a

08000768 <cdcacm_set_config>:

void cdcacm_set_config(usbd_device* usbd_dev, uint16_t wValue) {
 8000768:	b537      	push	{r0, r1, r2, r4, r5, lr}
    (void)wValue;

    usbd_ep_setup(usbd_dev, 0x03, USB_ENDPOINT_ATTR_BULK, 64, cdcacm_data_rx_cb);
 800076a:	4b10      	ldr	r3, [pc, #64]	; (80007ac <cdcacm_set_config+0x44>)
 800076c:	9300      	str	r3, [sp, #0]
void cdcacm_set_config(usbd_device* usbd_dev, uint16_t wValue) {
 800076e:	4604      	mov	r4, r0
    usbd_ep_setup(usbd_dev, 0x83, USB_ENDPOINT_ATTR_BULK, 64, NULL);
 8000770:	2500      	movs	r5, #0
    usbd_ep_setup(usbd_dev, 0x03, USB_ENDPOINT_ATTR_BULK, 64, cdcacm_data_rx_cb);
 8000772:	2340      	movs	r3, #64	; 0x40
 8000774:	2202      	movs	r2, #2
 8000776:	2103      	movs	r1, #3
 8000778:	f000 fab8 	bl	8000cec <usbd_ep_setup>
    usbd_ep_setup(usbd_dev, 0x83, USB_ENDPOINT_ATTR_BULK, 64, NULL);
 800077c:	4620      	mov	r0, r4
 800077e:	9500      	str	r5, [sp, #0]
 8000780:	2340      	movs	r3, #64	; 0x40
 8000782:	2202      	movs	r2, #2
 8000784:	2183      	movs	r1, #131	; 0x83
 8000786:	f000 fab1 	bl	8000cec <usbd_ep_setup>
    usbd_ep_setup(usbd_dev, 0x84, USB_ENDPOINT_ATTR_INTERRUPT, 16, NULL);
 800078a:	4620      	mov	r0, r4
 800078c:	9500      	str	r5, [sp, #0]
 800078e:	2310      	movs	r3, #16
 8000790:	2203      	movs	r2, #3
 8000792:	2184      	movs	r1, #132	; 0x84
 8000794:	f000 faaa 	bl	8000cec <usbd_ep_setup>

    usbd_register_control_callback(
 8000798:	4b05      	ldr	r3, [pc, #20]	; (80007b0 <cdcacm_set_config+0x48>)
 800079a:	227f      	movs	r2, #127	; 0x7f
 800079c:	2121      	movs	r1, #33	; 0x21
 800079e:	4620      	mov	r0, r4
        usbd_dev, USB_REQ_TYPE_CLASS | USB_REQ_TYPE_INTERFACE,
        USB_REQ_TYPE_TYPE | USB_REQ_TYPE_RECIPIENT, cdcacm_control_request);
}
 80007a0:	b003      	add	sp, #12
 80007a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    usbd_register_control_callback(
 80007a6:	f000 be25 	b.w	80013f4 <usbd_register_control_callback>
 80007aa:	bf00      	nop
 80007ac:	08000721 	.word	0x08000721
 80007b0:	08000705 	.word	0x08000705

080007b4 <systick_setup>:
#include "systemtick.h"

volatile uint32_t system_millis = 0;

void systick_setup(void) {
 80007b4:	b508      	push	{r3, lr}
	/* 1ms interrupt rate */
	systick_set_reload(168000);
 80007b6:	4805      	ldr	r0, [pc, #20]	; (80007cc <systick_setup+0x18>)
 80007b8:	f001 fa9a 	bl	8001cf0 <systick_set_reload>
	systick_set_clocksource(STK_CSR_CLKSOURCE_AHB);
 80007bc:	2004      	movs	r0, #4
 80007be:	f001 fa9f 	bl	8001d00 <systick_set_clocksource>
	systick_counter_enable();
	//systick_interrupt_enable();
}
 80007c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	systick_counter_enable();
 80007c6:	f001 baa7 	b.w	8001d18 <systick_counter_enable>
 80007ca:	bf00      	nop
 80007cc:	00029040 	.word	0x00029040

080007d0 <flash_unlock>:
 80007d0:	4b03      	ldr	r3, [pc, #12]	; (80007e0 <flash_unlock+0x10>)
 80007d2:	4a04      	ldr	r2, [pc, #16]	; (80007e4 <flash_unlock+0x14>)
 80007d4:	601a      	str	r2, [r3, #0]
 80007d6:	f102 3288 	add.w	r2, r2, #2290649224	; 0x88888888
 80007da:	601a      	str	r2, [r3, #0]
 80007dc:	4770      	bx	lr
 80007de:	bf00      	nop
 80007e0:	40023c04 	.word	0x40023c04
 80007e4:	45670123 	.word	0x45670123

080007e8 <flash_lock>:
 80007e8:	4a02      	ldr	r2, [pc, #8]	; (80007f4 <flash_lock+0xc>)
 80007ea:	6813      	ldr	r3, [r2, #0]
 80007ec:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80007f0:	6013      	str	r3, [r2, #0]
 80007f2:	4770      	bx	lr
 80007f4:	40023c10 	.word	0x40023c10

080007f8 <flash_set_program_size>:
 80007f8:	4b04      	ldr	r3, [pc, #16]	; (800080c <flash_set_program_size+0x14>)
 80007fa:	681a      	ldr	r2, [r3, #0]
 80007fc:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8000800:	601a      	str	r2, [r3, #0]
 8000802:	681a      	ldr	r2, [r3, #0]
 8000804:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 8000808:	6018      	str	r0, [r3, #0]
 800080a:	4770      	bx	lr
 800080c:	40023c10 	.word	0x40023c10

08000810 <flash_program_byte>:
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4c0a      	ldr	r4, [pc, #40]	; (800083c <flash_program_byte+0x2c>)
 8000814:	460e      	mov	r6, r1
 8000816:	4605      	mov	r5, r0
 8000818:	f001 faac 	bl	8001d74 <flash_wait_for_last_operation>
 800081c:	2000      	movs	r0, #0
 800081e:	f7ff ffeb 	bl	80007f8 <flash_set_program_size>
 8000822:	6823      	ldr	r3, [r4, #0]
 8000824:	f043 0301 	orr.w	r3, r3, #1
 8000828:	6023      	str	r3, [r4, #0]
 800082a:	702e      	strb	r6, [r5, #0]
 800082c:	f001 faa2 	bl	8001d74 <flash_wait_for_last_operation>
 8000830:	6823      	ldr	r3, [r4, #0]
 8000832:	f023 0301 	bic.w	r3, r3, #1
 8000836:	6023      	str	r3, [r4, #0]
 8000838:	bd70      	pop	{r4, r5, r6, pc}
 800083a:	bf00      	nop
 800083c:	40023c10 	.word	0x40023c10

08000840 <flash_program>:
 8000840:	b570      	push	{r4, r5, r6, lr}
 8000842:	188d      	adds	r5, r1, r2
 8000844:	460c      	mov	r4, r1
 8000846:	1a46      	subs	r6, r0, r1
 8000848:	42ac      	cmp	r4, r5
 800084a:	d100      	bne.n	800084e <flash_program+0xe>
 800084c:	bd70      	pop	{r4, r5, r6, pc}
 800084e:	1930      	adds	r0, r6, r4
 8000850:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000854:	f7ff ffdc 	bl	8000810 <flash_program_byte>
 8000858:	e7f6      	b.n	8000848 <flash_program+0x8>
	...

0800085c <flash_erase_sector>:
 800085c:	b538      	push	{r3, r4, r5, lr}
 800085e:	460c      	mov	r4, r1
 8000860:	4605      	mov	r5, r0
 8000862:	f001 fa87 	bl	8001d74 <flash_wait_for_last_operation>
 8000866:	4620      	mov	r0, r4
 8000868:	4c11      	ldr	r4, [pc, #68]	; (80008b0 <flash_erase_sector+0x54>)
 800086a:	f7ff ffc5 	bl	80007f8 <flash_set_program_size>
 800086e:	6823      	ldr	r3, [r4, #0]
 8000870:	2d0b      	cmp	r5, #11
 8000872:	bf88      	it	hi
 8000874:	3504      	addhi	r5, #4
 8000876:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800087a:	6023      	str	r3, [r4, #0]
 800087c:	bf88      	it	hi
 800087e:	b2ed      	uxtbhi	r5, r5
 8000880:	6823      	ldr	r3, [r4, #0]
 8000882:	00ed      	lsls	r5, r5, #3
 8000884:	b2ed      	uxtb	r5, r5
 8000886:	431d      	orrs	r5, r3
 8000888:	6025      	str	r5, [r4, #0]
 800088a:	6823      	ldr	r3, [r4, #0]
 800088c:	f043 0302 	orr.w	r3, r3, #2
 8000890:	6023      	str	r3, [r4, #0]
 8000892:	6823      	ldr	r3, [r4, #0]
 8000894:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000898:	6023      	str	r3, [r4, #0]
 800089a:	f001 fa6b 	bl	8001d74 <flash_wait_for_last_operation>
 800089e:	6823      	ldr	r3, [r4, #0]
 80008a0:	f023 0302 	bic.w	r3, r3, #2
 80008a4:	6023      	str	r3, [r4, #0]
 80008a6:	6823      	ldr	r3, [r4, #0]
 80008a8:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80008ac:	6023      	str	r3, [r4, #0]
 80008ae:	bd38      	pop	{r3, r4, r5, pc}
 80008b0:	40023c10 	.word	0x40023c10

080008b4 <gpio_set>:
 80008b4:	6181      	str	r1, [r0, #24]
 80008b6:	4770      	bx	lr

080008b8 <gpio_clear>:
 80008b8:	0409      	lsls	r1, r1, #16
 80008ba:	6181      	str	r1, [r0, #24]
 80008bc:	4770      	bx	lr

080008be <gpio_toggle>:
 80008be:	6943      	ldr	r3, [r0, #20]
 80008c0:	ea03 0201 	and.w	r2, r3, r1
 80008c4:	ea21 0103 	bic.w	r1, r1, r3
 80008c8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80008cc:	6181      	str	r1, [r0, #24]
 80008ce:	4770      	bx	lr

080008d0 <gpio_port_read>:
 80008d0:	6900      	ldr	r0, [r0, #16]
 80008d2:	b280      	uxth	r0, r0
 80008d4:	4770      	bx	lr

080008d6 <gpio_mode_setup>:
 80008d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008da:	6805      	ldr	r5, [r0, #0]
 80008dc:	68c4      	ldr	r4, [r0, #12]
 80008de:	2600      	movs	r6, #0
 80008e0:	f04f 0c03 	mov.w	ip, #3
 80008e4:	fa43 f706 	asr.w	r7, r3, r6
 80008e8:	07ff      	lsls	r7, r7, #31
 80008ea:	d50f      	bpl.n	800090c <gpio_mode_setup+0x36>
 80008ec:	0077      	lsls	r7, r6, #1
 80008ee:	fa0c fe07 	lsl.w	lr, ip, r7
 80008f2:	ea6f 0e0e 	mvn.w	lr, lr
 80008f6:	fa01 f807 	lsl.w	r8, r1, r7
 80008fa:	ea0e 0505 	and.w	r5, lr, r5
 80008fe:	ea0e 0404 	and.w	r4, lr, r4
 8000902:	fa02 f707 	lsl.w	r7, r2, r7
 8000906:	ea48 0505 	orr.w	r5, r8, r5
 800090a:	433c      	orrs	r4, r7
 800090c:	3601      	adds	r6, #1
 800090e:	2e10      	cmp	r6, #16
 8000910:	d1e8      	bne.n	80008e4 <gpio_mode_setup+0xe>
 8000912:	6005      	str	r5, [r0, #0]
 8000914:	60c4      	str	r4, [r0, #12]
 8000916:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800091a <gpio_set_af>:
 800091a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800091c:	6a07      	ldr	r7, [r0, #32]
 800091e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8000920:	2300      	movs	r3, #0
 8000922:	f04f 0e0f 	mov.w	lr, #15
 8000926:	fa42 f403 	asr.w	r4, r2, r3
 800092a:	07e5      	lsls	r5, r4, #31
 800092c:	d507      	bpl.n	800093e <gpio_set_af+0x24>
 800092e:	009d      	lsls	r5, r3, #2
 8000930:	fa0e f405 	lsl.w	r4, lr, r5
 8000934:	ea27 0704 	bic.w	r7, r7, r4
 8000938:	fa01 f505 	lsl.w	r5, r1, r5
 800093c:	432f      	orrs	r7, r5
 800093e:	3301      	adds	r3, #1
 8000940:	2b08      	cmp	r3, #8
 8000942:	d1f0      	bne.n	8000926 <gpio_set_af+0xc>
 8000944:	2300      	movs	r3, #0
 8000946:	f04f 0e0f 	mov.w	lr, #15
 800094a:	f103 0408 	add.w	r4, r3, #8
 800094e:	fa42 f404 	asr.w	r4, r2, r4
 8000952:	07e4      	lsls	r4, r4, #31
 8000954:	d507      	bpl.n	8000966 <gpio_set_af+0x4c>
 8000956:	009c      	lsls	r4, r3, #2
 8000958:	fa0e f504 	lsl.w	r5, lr, r4
 800095c:	ea26 0605 	bic.w	r6, r6, r5
 8000960:	fa01 f404 	lsl.w	r4, r1, r4
 8000964:	4326      	orrs	r6, r4
 8000966:	3301      	adds	r3, #1
 8000968:	2b08      	cmp	r3, #8
 800096a:	d1ee      	bne.n	800094a <gpio_set_af+0x30>
 800096c:	6207      	str	r7, [r0, #32]
 800096e:	6246      	str	r6, [r0, #36]	; 0x24
 8000970:	bdf0      	pop	{r4, r5, r6, r7, pc}

08000972 <rcc_peripheral_enable_clock>:
 8000972:	6803      	ldr	r3, [r0, #0]
 8000974:	4319      	orrs	r1, r3
 8000976:	6001      	str	r1, [r0, #0]
 8000978:	4770      	bx	lr

0800097a <rcc_periph_clock_enable>:
 800097a:	0943      	lsrs	r3, r0, #5
 800097c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000980:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8000984:	f000 021f 	and.w	r2, r0, #31
 8000988:	6819      	ldr	r1, [r3, #0]
 800098a:	2001      	movs	r0, #1
 800098c:	4090      	lsls	r0, r2
 800098e:	4308      	orrs	r0, r1
 8000990:	6018      	str	r0, [r3, #0]
 8000992:	4770      	bx	lr

08000994 <rcc_is_osc_ready>:
 8000994:	2806      	cmp	r0, #6
 8000996:	d822      	bhi.n	80009de <rcc_is_osc_ready+0x4a>
 8000998:	e8df f000 	tbb	[pc, r0]
 800099c:	091c1704 	.word	0x091c1704
 80009a0:	130e      	.short	0x130e
 80009a2:	15          	.byte	0x15
 80009a3:	00          	.byte	0x00
 80009a4:	4b0f      	ldr	r3, [pc, #60]	; (80009e4 <rcc_is_osc_ready+0x50>)
 80009a6:	6818      	ldr	r0, [r3, #0]
 80009a8:	f3c0 6040 	ubfx	r0, r0, #25, #1
 80009ac:	4770      	bx	lr
 80009ae:	4b0d      	ldr	r3, [pc, #52]	; (80009e4 <rcc_is_osc_ready+0x50>)
 80009b0:	6818      	ldr	r0, [r3, #0]
 80009b2:	f3c0 4040 	ubfx	r0, r0, #17, #1
 80009b6:	4770      	bx	lr
 80009b8:	4b0a      	ldr	r3, [pc, #40]	; (80009e4 <rcc_is_osc_ready+0x50>)
 80009ba:	6818      	ldr	r0, [r3, #0]
 80009bc:	f3c0 0040 	ubfx	r0, r0, #1, #1
 80009c0:	4770      	bx	lr
 80009c2:	4b09      	ldr	r3, [pc, #36]	; (80009e8 <rcc_is_osc_ready+0x54>)
 80009c4:	e7f9      	b.n	80009ba <rcc_is_osc_ready+0x26>
 80009c6:	4b09      	ldr	r3, [pc, #36]	; (80009ec <rcc_is_osc_ready+0x58>)
 80009c8:	e7f7      	b.n	80009ba <rcc_is_osc_ready+0x26>
 80009ca:	4b06      	ldr	r3, [pc, #24]	; (80009e4 <rcc_is_osc_ready+0x50>)
 80009cc:	6818      	ldr	r0, [r3, #0]
 80009ce:	f3c0 7040 	ubfx	r0, r0, #29, #1
 80009d2:	4770      	bx	lr
 80009d4:	4b03      	ldr	r3, [pc, #12]	; (80009e4 <rcc_is_osc_ready+0x50>)
 80009d6:	6818      	ldr	r0, [r3, #0]
 80009d8:	f3c0 60c0 	ubfx	r0, r0, #27, #1
 80009dc:	4770      	bx	lr
 80009de:	2000      	movs	r0, #0
 80009e0:	4770      	bx	lr
 80009e2:	bf00      	nop
 80009e4:	40023800 	.word	0x40023800
 80009e8:	40023870 	.word	0x40023870
 80009ec:	40023874 	.word	0x40023874

080009f0 <rcc_wait_for_osc_ready>:
 80009f0:	b508      	push	{r3, lr}
 80009f2:	4602      	mov	r2, r0
 80009f4:	4610      	mov	r0, r2
 80009f6:	f7ff ffcd 	bl	8000994 <rcc_is_osc_ready>
 80009fa:	2800      	cmp	r0, #0
 80009fc:	d0fa      	beq.n	80009f4 <rcc_wait_for_osc_ready+0x4>
 80009fe:	bd08      	pop	{r3, pc}

08000a00 <rcc_osc_on>:
 8000a00:	2806      	cmp	r0, #6
 8000a02:	d80a      	bhi.n	8000a1a <rcc_osc_on+0x1a>
 8000a04:	e8df f000 	tbb	[pc, r0]
 8000a08:	0a1d1804 	.word	0x0a1d1804
 8000a0c:	140f      	.short	0x140f
 8000a0e:	16          	.byte	0x16
 8000a0f:	00          	.byte	0x00
 8000a10:	4a0e      	ldr	r2, [pc, #56]	; (8000a4c <rcc_osc_on+0x4c>)
 8000a12:	6813      	ldr	r3, [r2, #0]
 8000a14:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000a18:	6013      	str	r3, [r2, #0]
 8000a1a:	4770      	bx	lr
 8000a1c:	4a0b      	ldr	r2, [pc, #44]	; (8000a4c <rcc_osc_on+0x4c>)
 8000a1e:	6813      	ldr	r3, [r2, #0]
 8000a20:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000a24:	e7f8      	b.n	8000a18 <rcc_osc_on+0x18>
 8000a26:	4a09      	ldr	r2, [pc, #36]	; (8000a4c <rcc_osc_on+0x4c>)
 8000a28:	6813      	ldr	r3, [r2, #0]
 8000a2a:	f043 0301 	orr.w	r3, r3, #1
 8000a2e:	e7f3      	b.n	8000a18 <rcc_osc_on+0x18>
 8000a30:	4a07      	ldr	r2, [pc, #28]	; (8000a50 <rcc_osc_on+0x50>)
 8000a32:	e7f9      	b.n	8000a28 <rcc_osc_on+0x28>
 8000a34:	4a07      	ldr	r2, [pc, #28]	; (8000a54 <rcc_osc_on+0x54>)
 8000a36:	e7f7      	b.n	8000a28 <rcc_osc_on+0x28>
 8000a38:	4a04      	ldr	r2, [pc, #16]	; (8000a4c <rcc_osc_on+0x4c>)
 8000a3a:	6813      	ldr	r3, [r2, #0]
 8000a3c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000a40:	e7ea      	b.n	8000a18 <rcc_osc_on+0x18>
 8000a42:	4a02      	ldr	r2, [pc, #8]	; (8000a4c <rcc_osc_on+0x4c>)
 8000a44:	6813      	ldr	r3, [r2, #0]
 8000a46:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000a4a:	e7e5      	b.n	8000a18 <rcc_osc_on+0x18>
 8000a4c:	40023800 	.word	0x40023800
 8000a50:	40023870 	.word	0x40023870
 8000a54:	40023874 	.word	0x40023874

08000a58 <rcc_osc_off>:
 8000a58:	2806      	cmp	r0, #6
 8000a5a:	d80a      	bhi.n	8000a72 <rcc_osc_off+0x1a>
 8000a5c:	e8df f000 	tbb	[pc, r0]
 8000a60:	0a1d1804 	.word	0x0a1d1804
 8000a64:	140f      	.short	0x140f
 8000a66:	16          	.byte	0x16
 8000a67:	00          	.byte	0x00
 8000a68:	4a0e      	ldr	r2, [pc, #56]	; (8000aa4 <rcc_osc_off+0x4c>)
 8000a6a:	6813      	ldr	r3, [r2, #0]
 8000a6c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000a70:	6013      	str	r3, [r2, #0]
 8000a72:	4770      	bx	lr
 8000a74:	4a0b      	ldr	r2, [pc, #44]	; (8000aa4 <rcc_osc_off+0x4c>)
 8000a76:	6813      	ldr	r3, [r2, #0]
 8000a78:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000a7c:	e7f8      	b.n	8000a70 <rcc_osc_off+0x18>
 8000a7e:	4a09      	ldr	r2, [pc, #36]	; (8000aa4 <rcc_osc_off+0x4c>)
 8000a80:	6813      	ldr	r3, [r2, #0]
 8000a82:	f023 0301 	bic.w	r3, r3, #1
 8000a86:	e7f3      	b.n	8000a70 <rcc_osc_off+0x18>
 8000a88:	4a07      	ldr	r2, [pc, #28]	; (8000aa8 <rcc_osc_off+0x50>)
 8000a8a:	e7f9      	b.n	8000a80 <rcc_osc_off+0x28>
 8000a8c:	4a07      	ldr	r2, [pc, #28]	; (8000aac <rcc_osc_off+0x54>)
 8000a8e:	e7f7      	b.n	8000a80 <rcc_osc_off+0x28>
 8000a90:	4a04      	ldr	r2, [pc, #16]	; (8000aa4 <rcc_osc_off+0x4c>)
 8000a92:	6813      	ldr	r3, [r2, #0]
 8000a94:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8000a98:	e7ea      	b.n	8000a70 <rcc_osc_off+0x18>
 8000a9a:	4a02      	ldr	r2, [pc, #8]	; (8000aa4 <rcc_osc_off+0x4c>)
 8000a9c:	6813      	ldr	r3, [r2, #0]
 8000a9e:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8000aa2:	e7e5      	b.n	8000a70 <rcc_osc_off+0x18>
 8000aa4:	40023800 	.word	0x40023800
 8000aa8:	40023870 	.word	0x40023870
 8000aac:	40023874 	.word	0x40023874

08000ab0 <rcc_set_sysclk_source>:
 8000ab0:	4a03      	ldr	r2, [pc, #12]	; (8000ac0 <rcc_set_sysclk_source+0x10>)
 8000ab2:	6813      	ldr	r3, [r2, #0]
 8000ab4:	f023 0303 	bic.w	r3, r3, #3
 8000ab8:	4318      	orrs	r0, r3
 8000aba:	6010      	str	r0, [r2, #0]
 8000abc:	4770      	bx	lr
 8000abe:	bf00      	nop
 8000ac0:	40023808 	.word	0x40023808

08000ac4 <rcc_set_ppre2>:
 8000ac4:	4a03      	ldr	r2, [pc, #12]	; (8000ad4 <rcc_set_ppre2+0x10>)
 8000ac6:	6813      	ldr	r3, [r2, #0]
 8000ac8:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8000acc:	ea43 3040 	orr.w	r0, r3, r0, lsl #13
 8000ad0:	6010      	str	r0, [r2, #0]
 8000ad2:	4770      	bx	lr
 8000ad4:	40023808 	.word	0x40023808

08000ad8 <rcc_set_ppre1>:
 8000ad8:	4a03      	ldr	r2, [pc, #12]	; (8000ae8 <rcc_set_ppre1+0x10>)
 8000ada:	6813      	ldr	r3, [r2, #0]
 8000adc:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000ae0:	ea43 2080 	orr.w	r0, r3, r0, lsl #10
 8000ae4:	6010      	str	r0, [r2, #0]
 8000ae6:	4770      	bx	lr
 8000ae8:	40023808 	.word	0x40023808

08000aec <rcc_set_hpre>:
 8000aec:	4a03      	ldr	r2, [pc, #12]	; (8000afc <rcc_set_hpre+0x10>)
 8000aee:	6813      	ldr	r3, [r2, #0]
 8000af0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000af4:	ea43 1000 	orr.w	r0, r3, r0, lsl #4
 8000af8:	6010      	str	r0, [r2, #0]
 8000afa:	4770      	bx	lr
 8000afc:	40023808 	.word	0x40023808

08000b00 <rcc_set_main_pll_hsi>:
 8000b00:	b510      	push	{r4, lr}
 8000b02:	f647 74c0 	movw	r4, #32704	; 0x7fc0
 8000b06:	ea04 1181 	and.w	r1, r4, r1, lsl #6
 8000b0a:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8000b0e:	061b      	lsls	r3, r3, #24
 8000b10:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8000b14:	4301      	orrs	r1, r0
 8000b16:	4319      	orrs	r1, r3
 8000b18:	9b02      	ldr	r3, [sp, #8]
 8000b1a:	0854      	lsrs	r4, r2, #1
 8000b1c:	2b02      	cmp	r3, #2
 8000b1e:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 8000b22:	ea4f 4404 	mov.w	r4, r4, lsl #16
 8000b26:	bf38      	it	cc
 8000b28:	2302      	movcc	r3, #2
 8000b2a:	f404 3440 	and.w	r4, r4, #196608	; 0x30000
 8000b2e:	071b      	lsls	r3, r3, #28
 8000b30:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8000b34:	4321      	orrs	r1, r4
 8000b36:	4319      	orrs	r1, r3
 8000b38:	4b01      	ldr	r3, [pc, #4]	; (8000b40 <rcc_set_main_pll_hsi+0x40>)
 8000b3a:	6019      	str	r1, [r3, #0]
 8000b3c:	bd10      	pop	{r4, pc}
 8000b3e:	bf00      	nop
 8000b40:	40023804 	.word	0x40023804

08000b44 <rcc_set_main_pll_hse>:
 8000b44:	061b      	lsls	r3, r3, #24
 8000b46:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8000b4a:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8000b4e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000b52:	4303      	orrs	r3, r0
 8000b54:	f647 70c0 	movw	r0, #32704	; 0x7fc0
 8000b58:	ea00 1181 	and.w	r1, r0, r1, lsl #6
 8000b5c:	430b      	orrs	r3, r1
 8000b5e:	0851      	lsrs	r1, r2, #1
 8000b60:	9a00      	ldr	r2, [sp, #0]
 8000b62:	3901      	subs	r1, #1
 8000b64:	2a02      	cmp	r2, #2
 8000b66:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8000b6a:	bf38      	it	cc
 8000b6c:	2202      	movcc	r2, #2
 8000b6e:	f401 3140 	and.w	r1, r1, #196608	; 0x30000
 8000b72:	0712      	lsls	r2, r2, #28
 8000b74:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8000b78:	430b      	orrs	r3, r1
 8000b7a:	4313      	orrs	r3, r2
 8000b7c:	4a01      	ldr	r2, [pc, #4]	; (8000b84 <rcc_set_main_pll_hse+0x40>)
 8000b7e:	6013      	str	r3, [r2, #0]
 8000b80:	4770      	bx	lr
 8000b82:	bf00      	nop
 8000b84:	40023804 	.word	0x40023804

08000b88 <rcc_clock_setup_pll>:
 8000b88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000b8a:	4604      	mov	r4, r0
 8000b8c:	2004      	movs	r0, #4
 8000b8e:	f7ff ff37 	bl	8000a00 <rcc_osc_on>
 8000b92:	2004      	movs	r0, #4
 8000b94:	f7ff ff2c 	bl	80009f0 <rcc_wait_for_osc_ready>
 8000b98:	2000      	movs	r0, #0
 8000b9a:	f7ff ff89 	bl	8000ab0 <rcc_set_sysclk_source>
 8000b9e:	79e3      	ldrb	r3, [r4, #7]
 8000ba0:	2b01      	cmp	r3, #1
 8000ba2:	d105      	bne.n	8000bb0 <rcc_clock_setup_pll+0x28>
 8000ba4:	2003      	movs	r0, #3
 8000ba6:	f7ff ff2b 	bl	8000a00 <rcc_osc_on>
 8000baa:	2003      	movs	r0, #3
 8000bac:	f7ff ff20 	bl	80009f0 <rcc_wait_for_osc_ready>
 8000bb0:	f640 011c 	movw	r1, #2076	; 0x81c
 8000bb4:	482c      	ldr	r0, [pc, #176]	; (8000c68 <rcc_clock_setup_pll+0xe0>)
 8000bb6:	f7ff fedc 	bl	8000972 <rcc_peripheral_enable_clock>
 8000bba:	7be0      	ldrb	r0, [r4, #15]
 8000bbc:	f001 f90c 	bl	8001dd8 <pwr_set_vos_scale>
 8000bc0:	7b20      	ldrb	r0, [r4, #12]
 8000bc2:	f7ff ff93 	bl	8000aec <rcc_set_hpre>
 8000bc6:	7b60      	ldrb	r0, [r4, #13]
 8000bc8:	f7ff ff86 	bl	8000ad8 <rcc_set_ppre1>
 8000bcc:	7ba0      	ldrb	r0, [r4, #14]
 8000bce:	f7ff ff79 	bl	8000ac4 <rcc_set_ppre2>
 8000bd2:	4a26      	ldr	r2, [pc, #152]	; (8000c6c <rcc_clock_setup_pll+0xe4>)
 8000bd4:	8861      	ldrh	r1, [r4, #2]
 8000bd6:	6813      	ldr	r3, [r2, #0]
 8000bd8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000bdc:	6013      	str	r3, [r2, #0]
 8000bde:	79e3      	ldrb	r3, [r4, #7]
 8000be0:	79a5      	ldrb	r5, [r4, #6]
 8000be2:	7922      	ldrb	r2, [r4, #4]
 8000be4:	7820      	ldrb	r0, [r4, #0]
 8000be6:	9500      	str	r5, [sp, #0]
 8000be8:	2b01      	cmp	r3, #1
 8000bea:	7963      	ldrb	r3, [r4, #5]
 8000bec:	d131      	bne.n	8000c52 <rcc_clock_setup_pll+0xca>
 8000bee:	f7ff ffa9 	bl	8000b44 <rcc_set_main_pll_hse>
 8000bf2:	4a1e      	ldr	r2, [pc, #120]	; (8000c6c <rcc_clock_setup_pll+0xe4>)
 8000bf4:	6813      	ldr	r3, [r2, #0]
 8000bf6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000bfa:	6013      	str	r3, [r2, #0]
 8000bfc:	2000      	movs	r0, #0
 8000bfe:	f7ff fef7 	bl	80009f0 <rcc_wait_for_osc_ready>
 8000c02:	68a3      	ldr	r3, [r4, #8]
 8000c04:	055a      	lsls	r2, r3, #21
 8000c06:	d527      	bpl.n	8000c58 <rcc_clock_setup_pll+0xd0>
 8000c08:	f001 f8c6 	bl	8001d98 <flash_dcache_enable>
 8000c0c:	68a3      	ldr	r3, [r4, #8]
 8000c0e:	059b      	lsls	r3, r3, #22
 8000c10:	d525      	bpl.n	8000c5e <rcc_clock_setup_pll+0xd6>
 8000c12:	f001 f8d1 	bl	8001db8 <flash_icache_enable>
 8000c16:	68a0      	ldr	r0, [r4, #8]
 8000c18:	f001 f8b4 	bl	8001d84 <flash_set_ws>
 8000c1c:	2002      	movs	r0, #2
 8000c1e:	f7ff ff47 	bl	8000ab0 <rcc_set_sysclk_source>
 8000c22:	4a13      	ldr	r2, [pc, #76]	; (8000c70 <rcc_clock_setup_pll+0xe8>)
 8000c24:	6813      	ldr	r3, [r2, #0]
 8000c26:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8000c2a:	2b02      	cmp	r3, #2
 8000c2c:	d1fa      	bne.n	8000c24 <rcc_clock_setup_pll+0x9c>
 8000c2e:	4b11      	ldr	r3, [pc, #68]	; (8000c74 <rcc_clock_setup_pll+0xec>)
 8000c30:	6922      	ldr	r2, [r4, #16]
 8000c32:	601a      	str	r2, [r3, #0]
 8000c34:	4b10      	ldr	r3, [pc, #64]	; (8000c78 <rcc_clock_setup_pll+0xf0>)
 8000c36:	6962      	ldr	r2, [r4, #20]
 8000c38:	601a      	str	r2, [r3, #0]
 8000c3a:	4b10      	ldr	r3, [pc, #64]	; (8000c7c <rcc_clock_setup_pll+0xf4>)
 8000c3c:	69a2      	ldr	r2, [r4, #24]
 8000c3e:	601a      	str	r2, [r3, #0]
 8000c40:	79e3      	ldrb	r3, [r4, #7]
 8000c42:	2b01      	cmp	r3, #1
 8000c44:	d10e      	bne.n	8000c64 <rcc_clock_setup_pll+0xdc>
 8000c46:	2004      	movs	r0, #4
 8000c48:	b003      	add	sp, #12
 8000c4a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000c4e:	f7ff bf03 	b.w	8000a58 <rcc_osc_off>
 8000c52:	f7ff ff55 	bl	8000b00 <rcc_set_main_pll_hsi>
 8000c56:	e7cc      	b.n	8000bf2 <rcc_clock_setup_pll+0x6a>
 8000c58:	f001 f8a6 	bl	8001da8 <flash_dcache_disable>
 8000c5c:	e7d6      	b.n	8000c0c <rcc_clock_setup_pll+0x84>
 8000c5e:	f001 f8b3 	bl	8001dc8 <flash_icache_disable>
 8000c62:	e7d8      	b.n	8000c16 <rcc_clock_setup_pll+0x8e>
 8000c64:	b003      	add	sp, #12
 8000c66:	bd30      	pop	{r4, r5, pc}
 8000c68:	40023840 	.word	0x40023840
 8000c6c:	40023800 	.word	0x40023800
 8000c70:	40023808 	.word	0x40023808
 8000c74:	2000000c 	.word	0x2000000c
 8000c78:	20000010 	.word	0x20000010
 8000c7c:	20000014 	.word	0x20000014

08000c80 <usbd_init>:
 8000c80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c84:	461e      	mov	r6, r3
 8000c86:	6803      	ldr	r3, [r0, #0]
 8000c88:	4605      	mov	r5, r0
 8000c8a:	4688      	mov	r8, r1
 8000c8c:	4617      	mov	r7, r2
 8000c8e:	4798      	blx	r3
 8000c90:	9b06      	ldr	r3, [sp, #24]
 8000c92:	60c3      	str	r3, [r0, #12]
 8000c94:	9b07      	ldr	r3, [sp, #28]
 8000c96:	6103      	str	r3, [r0, #16]
 8000c98:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8000c9c:	8283      	strh	r3, [r0, #20]
 8000c9e:	4b0b      	ldr	r3, [pc, #44]	; (8000ccc <usbd_init+0x4c>)
 8000ca0:	6703      	str	r3, [r0, #112]	; 0x70
 8000ca2:	4b0b      	ldr	r3, [pc, #44]	; (8000cd0 <usbd_init+0x50>)
 8000ca4:	66c3      	str	r3, [r0, #108]	; 0x6c
 8000ca6:	4b0b      	ldr	r3, [pc, #44]	; (8000cd4 <usbd_init+0x54>)
 8000ca8:	6683      	str	r3, [r0, #104]	; 0x68
 8000caa:	2300      	movs	r3, #0
 8000cac:	f8c0 50dc 	str.w	r5, [r0, #220]	; 0xdc
 8000cb0:	f8c0 8000 	str.w	r8, [r0]
 8000cb4:	6047      	str	r7, [r0, #4]
 8000cb6:	6086      	str	r6, [r0, #8]
 8000cb8:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 8000cbc:	f8c0 30cc 	str.w	r3, [r0, #204]	; 0xcc
 8000cc0:	f8c0 30d0 	str.w	r3, [r0, #208]	; 0xd0
 8000cc4:	f8c0 30d4 	str.w	r3, [r0, #212]	; 0xd4
 8000cc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ccc:	0800141b 	.word	0x0800141b
 8000cd0:	0800147b 	.word	0x0800147b
 8000cd4:	080014ff 	.word	0x080014ff

08000cd8 <usbd_poll>:
 8000cd8:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000cdc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000cde:	4718      	bx	r3

08000ce0 <usbd_disconnect>:
 8000ce0:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000ce4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000ce6:	b103      	cbz	r3, 8000cea <usbd_disconnect+0xa>
 8000ce8:	4718      	bx	r3
 8000cea:	4770      	bx	lr

08000cec <usbd_ep_setup>:
 8000cec:	b410      	push	{r4}
 8000cee:	f8d0 40dc 	ldr.w	r4, [r0, #220]	; 0xdc
 8000cf2:	68a4      	ldr	r4, [r4, #8]
 8000cf4:	46a4      	mov	ip, r4
 8000cf6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cfa:	4760      	bx	ip

08000cfc <_usbd_reset>:
 8000cfc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000cfe:	6803      	ldr	r3, [r0, #0]
 8000d00:	2500      	movs	r5, #0
 8000d02:	4604      	mov	r4, r0
 8000d04:	7585      	strb	r5, [r0, #22]
 8000d06:	75c5      	strb	r5, [r0, #23]
 8000d08:	79db      	ldrb	r3, [r3, #7]
 8000d0a:	9500      	str	r5, [sp, #0]
 8000d0c:	462a      	mov	r2, r5
 8000d0e:	4629      	mov	r1, r5
 8000d10:	f7ff ffec 	bl	8000cec <usbd_ep_setup>
 8000d14:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8000d18:	4629      	mov	r1, r5
 8000d1a:	685b      	ldr	r3, [r3, #4]
 8000d1c:	4620      	mov	r0, r4
 8000d1e:	4798      	blx	r3
 8000d20:	69e3      	ldr	r3, [r4, #28]
 8000d22:	b11b      	cbz	r3, 8000d2c <_usbd_reset+0x30>
 8000d24:	b003      	add	sp, #12
 8000d26:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000d2a:	4718      	bx	r3
 8000d2c:	b003      	add	sp, #12
 8000d2e:	bd30      	pop	{r4, r5, pc}

08000d30 <usbd_ep_write_packet>:
 8000d30:	b410      	push	{r4}
 8000d32:	f8d0 40dc 	ldr.w	r4, [r0, #220]	; 0xdc
 8000d36:	69e4      	ldr	r4, [r4, #28]
 8000d38:	46a4      	mov	ip, r4
 8000d3a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d3e:	4760      	bx	ip

08000d40 <usbd_ep_read_packet>:
 8000d40:	b410      	push	{r4}
 8000d42:	f8d0 40dc 	ldr.w	r4, [r0, #220]	; 0xdc
 8000d46:	6a24      	ldr	r4, [r4, #32]
 8000d48:	46a4      	mov	ip, r4
 8000d4a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d4e:	4760      	bx	ip

08000d50 <usbd_ep_stall_set>:
 8000d50:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000d54:	691b      	ldr	r3, [r3, #16]
 8000d56:	4718      	bx	r3

08000d58 <usbd_ep_stall_get>:
 8000d58:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000d5c:	699b      	ldr	r3, [r3, #24]
 8000d5e:	4718      	bx	r3

08000d60 <usbd_ep_nak_set>:
 8000d60:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000d64:	695b      	ldr	r3, [r3, #20]
 8000d66:	4718      	bx	r3

08000d68 <usb_standard_set_configuration>:
 8000d68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d6a:	460d      	mov	r5, r1
 8000d6c:	8849      	ldrh	r1, [r1, #2]
 8000d6e:	4604      	mov	r4, r0
 8000d70:	b179      	cbz	r1, 8000d92 <usb_standard_set_configuration+0x2a>
 8000d72:	6803      	ldr	r3, [r0, #0]
 8000d74:	260d      	movs	r6, #13
 8000d76:	7c58      	ldrb	r0, [r3, #17]
 8000d78:	2300      	movs	r3, #0
 8000d7a:	4283      	cmp	r3, r0
 8000d7c:	d301      	bcc.n	8000d82 <usb_standard_set_configuration+0x1a>
 8000d7e:	2000      	movs	r0, #0
 8000d80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d82:	6862      	ldr	r2, [r4, #4]
 8000d84:	fb06 2203 	mla	r2, r6, r3, r2
 8000d88:	7952      	ldrb	r2, [r2, #5]
 8000d8a:	428a      	cmp	r2, r1
 8000d8c:	d003      	beq.n	8000d96 <usb_standard_set_configuration+0x2e>
 8000d8e:	3301      	adds	r3, #1
 8000d90:	e7f3      	b.n	8000d7a <usb_standard_set_configuration+0x12>
 8000d92:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000d96:	3301      	adds	r3, #1
 8000d98:	b2db      	uxtb	r3, r3
 8000d9a:	75e3      	strb	r3, [r4, #23]
 8000d9c:	b94b      	cbnz	r3, 8000db2 <usb_standard_set_configuration+0x4a>
 8000d9e:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8000da2:	4620      	mov	r0, r4
 8000da4:	68db      	ldr	r3, [r3, #12]
 8000da6:	4798      	blx	r3
 8000da8:	f8d4 30c8 	ldr.w	r3, [r4, #200]	; 0xc8
 8000dac:	b9ab      	cbnz	r3, 8000dda <usb_standard_set_configuration+0x72>
 8000dae:	2001      	movs	r0, #1
 8000db0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000db2:	f06f 010c 	mvn.w	r1, #12
 8000db6:	220d      	movs	r2, #13
 8000db8:	fb12 1203 	smlabb	r2, r2, r3, r1
 8000dbc:	6863      	ldr	r3, [r4, #4]
 8000dbe:	4413      	add	r3, r2
 8000dc0:	2200      	movs	r2, #0
 8000dc2:	4610      	mov	r0, r2
 8000dc4:	7919      	ldrb	r1, [r3, #4]
 8000dc6:	428a      	cmp	r2, r1
 8000dc8:	d2e9      	bcs.n	8000d9e <usb_standard_set_configuration+0x36>
 8000dca:	f8d3 1009 	ldr.w	r1, [r3, #9]
 8000dce:	0116      	lsls	r6, r2, #4
 8000dd0:	5871      	ldr	r1, [r6, r1]
 8000dd2:	b101      	cbz	r1, 8000dd6 <usb_standard_set_configuration+0x6e>
 8000dd4:	7008      	strb	r0, [r1, #0]
 8000dd6:	3201      	adds	r2, #1
 8000dd8:	e7f4      	b.n	8000dc4 <usb_standard_set_configuration+0x5c>
 8000dda:	2300      	movs	r3, #0
 8000ddc:	64a3      	str	r3, [r4, #72]	; 0x48
 8000dde:	6523      	str	r3, [r4, #80]	; 0x50
 8000de0:	65a3      	str	r3, [r4, #88]	; 0x58
 8000de2:	6623      	str	r3, [r4, #96]	; 0x60
 8000de4:	f104 06c8 	add.w	r6, r4, #200	; 0xc8
 8000de8:	f104 07d8 	add.w	r7, r4, #216	; 0xd8
 8000dec:	f856 3b04 	ldr.w	r3, [r6], #4
 8000df0:	b113      	cbz	r3, 8000df8 <usb_standard_set_configuration+0x90>
 8000df2:	8869      	ldrh	r1, [r5, #2]
 8000df4:	4620      	mov	r0, r4
 8000df6:	4798      	blx	r3
 8000df8:	42be      	cmp	r6, r7
 8000dfa:	d1f7      	bne.n	8000dec <usb_standard_set_configuration+0x84>
 8000dfc:	e7d7      	b.n	8000dae <usb_standard_set_configuration+0x46>

08000dfe <usb_standard_get_configuration>:
 8000dfe:	8819      	ldrh	r1, [r3, #0]
 8000e00:	6812      	ldr	r2, [r2, #0]
 8000e02:	2901      	cmp	r1, #1
 8000e04:	bf84      	itt	hi
 8000e06:	2101      	movhi	r1, #1
 8000e08:	8019      	strhhi	r1, [r3, #0]
 8000e0a:	7dc3      	ldrb	r3, [r0, #23]
 8000e0c:	b12b      	cbz	r3, 8000e1a <usb_standard_get_configuration+0x1c>
 8000e0e:	6841      	ldr	r1, [r0, #4]
 8000e10:	200d      	movs	r0, #13
 8000e12:	fb00 1303 	mla	r3, r0, r3, r1
 8000e16:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 8000e1a:	7013      	strb	r3, [r2, #0]
 8000e1c:	2001      	movs	r0, #1
 8000e1e:	4770      	bx	lr

08000e20 <usb_standard_get_interface>:
 8000e20:	b570      	push	{r4, r5, r6, lr}
 8000e22:	7dc6      	ldrb	r6, [r0, #23]
 8000e24:	6840      	ldr	r0, [r0, #4]
 8000e26:	f06f 050c 	mvn.w	r5, #12
 8000e2a:	240d      	movs	r4, #13
 8000e2c:	fb14 5406 	smlabb	r4, r4, r6, r5
 8000e30:	4420      	add	r0, r4
 8000e32:	888d      	ldrh	r5, [r1, #4]
 8000e34:	7904      	ldrb	r4, [r0, #4]
 8000e36:	42a5      	cmp	r5, r4
 8000e38:	d20c      	bcs.n	8000e54 <usb_standard_get_interface+0x34>
 8000e3a:	2401      	movs	r4, #1
 8000e3c:	801c      	strh	r4, [r3, #0]
 8000e3e:	888b      	ldrh	r3, [r1, #4]
 8000e40:	f8d0 0009 	ldr.w	r0, [r0, #9]
 8000e44:	6812      	ldr	r2, [r2, #0]
 8000e46:	011b      	lsls	r3, r3, #4
 8000e48:	581b      	ldr	r3, [r3, r0]
 8000e4a:	b103      	cbz	r3, 8000e4e <usb_standard_get_interface+0x2e>
 8000e4c:	781b      	ldrb	r3, [r3, #0]
 8000e4e:	7013      	strb	r3, [r2, #0]
 8000e50:	2001      	movs	r0, #1
 8000e52:	bd70      	pop	{r4, r5, r6, pc}
 8000e54:	2000      	movs	r0, #0
 8000e56:	bd70      	pop	{r4, r5, r6, pc}

08000e58 <usb_standard_interface_get_status>:
 8000e58:	8819      	ldrh	r1, [r3, #0]
 8000e5a:	2902      	cmp	r1, #2
 8000e5c:	bf84      	itt	hi
 8000e5e:	2102      	movhi	r1, #2
 8000e60:	8019      	strhhi	r1, [r3, #0]
 8000e62:	6811      	ldr	r1, [r2, #0]
 8000e64:	2300      	movs	r3, #0
 8000e66:	700b      	strb	r3, [r1, #0]
 8000e68:	6812      	ldr	r2, [r2, #0]
 8000e6a:	2001      	movs	r0, #1
 8000e6c:	7053      	strb	r3, [r2, #1]
 8000e6e:	4770      	bx	lr

08000e70 <usb_standard_endpoint_get_status>:
 8000e70:	b538      	push	{r3, r4, r5, lr}
 8000e72:	4614      	mov	r4, r2
 8000e74:	881a      	ldrh	r2, [r3, #0]
 8000e76:	6825      	ldr	r5, [r4, #0]
 8000e78:	2a02      	cmp	r2, #2
 8000e7a:	bf84      	itt	hi
 8000e7c:	2202      	movhi	r2, #2
 8000e7e:	801a      	strhhi	r2, [r3, #0]
 8000e80:	8889      	ldrh	r1, [r1, #4]
 8000e82:	b2c9      	uxtb	r1, r1
 8000e84:	f7ff ff68 	bl	8000d58 <usbd_ep_stall_get>
 8000e88:	3000      	adds	r0, #0
 8000e8a:	bf18      	it	ne
 8000e8c:	2001      	movne	r0, #1
 8000e8e:	7028      	strb	r0, [r5, #0]
 8000e90:	6823      	ldr	r3, [r4, #0]
 8000e92:	2200      	movs	r2, #0
 8000e94:	705a      	strb	r2, [r3, #1]
 8000e96:	2001      	movs	r0, #1
 8000e98:	bd38      	pop	{r3, r4, r5, pc}

08000e9a <usb_standard_endpoint_stall>:
 8000e9a:	b508      	push	{r3, lr}
 8000e9c:	8889      	ldrh	r1, [r1, #4]
 8000e9e:	2201      	movs	r2, #1
 8000ea0:	b2c9      	uxtb	r1, r1
 8000ea2:	f7ff ff55 	bl	8000d50 <usbd_ep_stall_set>
 8000ea6:	2001      	movs	r0, #1
 8000ea8:	bd08      	pop	{r3, pc}

08000eaa <usb_standard_endpoint_unstall>:
 8000eaa:	b508      	push	{r3, lr}
 8000eac:	8889      	ldrh	r1, [r1, #4]
 8000eae:	2200      	movs	r2, #0
 8000eb0:	b2c9      	uxtb	r1, r1
 8000eb2:	f7ff ff4d 	bl	8000d50 <usbd_ep_stall_set>
 8000eb6:	2001      	movs	r0, #1
 8000eb8:	bd08      	pop	{r3, pc}

08000eba <usb_standard_set_address>:
 8000eba:	b510      	push	{r4, lr}
 8000ebc:	780b      	ldrb	r3, [r1, #0]
 8000ebe:	b973      	cbnz	r3, 8000ede <usb_standard_set_address+0x24>
 8000ec0:	884c      	ldrh	r4, [r1, #2]
 8000ec2:	2c7f      	cmp	r4, #127	; 0x7f
 8000ec4:	d80b      	bhi.n	8000ede <usb_standard_set_address+0x24>
 8000ec6:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000eca:	7584      	strb	r4, [r0, #22]
 8000ecc:	f893 2030 	ldrb.w	r2, [r3, #48]	; 0x30
 8000ed0:	b11a      	cbz	r2, 8000eda <usb_standard_set_address+0x20>
 8000ed2:	8849      	ldrh	r1, [r1, #2]
 8000ed4:	685b      	ldr	r3, [r3, #4]
 8000ed6:	b2c9      	uxtb	r1, r1
 8000ed8:	4798      	blx	r3
 8000eda:	2001      	movs	r0, #1
 8000edc:	bd10      	pop	{r4, pc}
 8000ede:	2000      	movs	r0, #0
 8000ee0:	bd10      	pop	{r4, pc}

08000ee2 <usb_standard_set_interface>:
 8000ee2:	b570      	push	{r4, r5, r6, lr}
 8000ee4:	7dc2      	ldrb	r2, [r0, #23]
 8000ee6:	240d      	movs	r4, #13
 8000ee8:	461d      	mov	r5, r3
 8000eea:	f06f 030c 	mvn.w	r3, #12
 8000eee:	fb14 3302 	smlabb	r3, r4, r2, r3
 8000ef2:	6844      	ldr	r4, [r0, #4]
 8000ef4:	888a      	ldrh	r2, [r1, #4]
 8000ef6:	441c      	add	r4, r3
 8000ef8:	7923      	ldrb	r3, [r4, #4]
 8000efa:	4293      	cmp	r3, r2
 8000efc:	d916      	bls.n	8000f2c <usb_standard_set_interface+0x4a>
 8000efe:	f8d4 3009 	ldr.w	r3, [r4, #9]
 8000f02:	884c      	ldrh	r4, [r1, #2]
 8000f04:	0112      	lsls	r2, r2, #4
 8000f06:	189e      	adds	r6, r3, r2
 8000f08:	7936      	ldrb	r6, [r6, #4]
 8000f0a:	42a6      	cmp	r6, r4
 8000f0c:	d90e      	bls.n	8000f2c <usb_standard_set_interface+0x4a>
 8000f0e:	589a      	ldr	r2, [r3, r2]
 8000f10:	b152      	cbz	r2, 8000f28 <usb_standard_set_interface+0x46>
 8000f12:	7014      	strb	r4, [r2, #0]
 8000f14:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
 8000f18:	b113      	cbz	r3, 8000f20 <usb_standard_set_interface+0x3e>
 8000f1a:	884a      	ldrh	r2, [r1, #2]
 8000f1c:	8889      	ldrh	r1, [r1, #4]
 8000f1e:	4798      	blx	r3
 8000f20:	2300      	movs	r3, #0
 8000f22:	802b      	strh	r3, [r5, #0]
 8000f24:	2001      	movs	r0, #1
 8000f26:	bd70      	pop	{r4, r5, r6, pc}
 8000f28:	2c00      	cmp	r4, #0
 8000f2a:	d0f3      	beq.n	8000f14 <usb_standard_set_interface+0x32>
 8000f2c:	2000      	movs	r0, #0
 8000f2e:	bd70      	pop	{r4, r5, r6, pc}

08000f30 <usb_standard_get_descriptor>:
 8000f30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000f34:	884d      	ldrh	r5, [r1, #2]
 8000f36:	461f      	mov	r7, r3
 8000f38:	0a2b      	lsrs	r3, r5, #8
 8000f3a:	2b02      	cmp	r3, #2
 8000f3c:	b089      	sub	sp, #36	; 0x24
 8000f3e:	4616      	mov	r6, r2
 8000f40:	d011      	beq.n	8000f66 <usb_standard_get_descriptor+0x36>
 8000f42:	2b03      	cmp	r3, #3
 8000f44:	f000 80e8 	beq.w	8001118 <usb_standard_get_descriptor+0x1e8>
 8000f48:	2b01      	cmp	r3, #1
 8000f4a:	f040 811d 	bne.w	8001188 <usb_standard_get_descriptor+0x258>
 8000f4e:	6802      	ldr	r2, [r0, #0]
 8000f50:	6032      	str	r2, [r6, #0]
 8000f52:	7812      	ldrb	r2, [r2, #0]
 8000f54:	8839      	ldrh	r1, [r7, #0]
 8000f56:	428a      	cmp	r2, r1
 8000f58:	bf28      	it	cs
 8000f5a:	460a      	movcs	r2, r1
 8000f5c:	803a      	strh	r2, [r7, #0]
 8000f5e:	2001      	movs	r0, #1
 8000f60:	b009      	add	sp, #36	; 0x24
 8000f62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f66:	b2ed      	uxtb	r5, r5
 8000f68:	eb05 0645 	add.w	r6, r5, r5, lsl #1
 8000f6c:	6903      	ldr	r3, [r0, #16]
 8000f6e:	f8d0 8004 	ldr.w	r8, [r0, #4]
 8000f72:	6013      	str	r3, [r2, #0]
 8000f74:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 8000f78:	883c      	ldrh	r4, [r7, #0]
 8000f7a:	f818 5006 	ldrb.w	r5, [r8, r6]
 8000f7e:	9301      	str	r3, [sp, #4]
 8000f80:	42a5      	cmp	r5, r4
 8000f82:	eb08 0306 	add.w	r3, r8, r6
 8000f86:	bf28      	it	cs
 8000f88:	4625      	movcs	r5, r4
 8000f8a:	462a      	mov	r2, r5
 8000f8c:	4619      	mov	r1, r3
 8000f8e:	9801      	ldr	r0, [sp, #4]
 8000f90:	9302      	str	r3, [sp, #8]
 8000f92:	f001 f9af 	bl	80022f4 <memcpy>
 8000f96:	9b01      	ldr	r3, [sp, #4]
 8000f98:	f818 6006 	ldrb.w	r6, [r8, r6]
 8000f9c:	1b64      	subs	r4, r4, r5
 8000f9e:	442b      	add	r3, r5
 8000fa0:	b2a4      	uxth	r4, r4
 8000fa2:	2200      	movs	r2, #0
 8000fa4:	9203      	str	r2, [sp, #12]
 8000fa6:	9a02      	ldr	r2, [sp, #8]
 8000fa8:	7911      	ldrb	r1, [r2, #4]
 8000faa:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8000fae:	4291      	cmp	r1, r2
 8000fb0:	d803      	bhi.n	8000fba <usb_standard_get_descriptor+0x8a>
 8000fb2:	9b01      	ldr	r3, [sp, #4]
 8000fb4:	805e      	strh	r6, [r3, #2]
 8000fb6:	803d      	strh	r5, [r7, #0]
 8000fb8:	e7d1      	b.n	8000f5e <usb_standard_get_descriptor+0x2e>
 8000fba:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8000fbe:	0112      	lsls	r2, r2, #4
 8000fc0:	9207      	str	r2, [sp, #28]
 8000fc2:	9a02      	ldr	r2, [sp, #8]
 8000fc4:	9907      	ldr	r1, [sp, #28]
 8000fc6:	f8d2 2009 	ldr.w	r2, [r2, #9]
 8000fca:	440a      	add	r2, r1
 8000fcc:	f8d2 9008 	ldr.w	r9, [r2, #8]
 8000fd0:	f1b9 0f00 	cmp.w	r9, #0
 8000fd4:	d014      	beq.n	8001000 <usb_standard_get_descriptor+0xd0>
 8000fd6:	f899 8000 	ldrb.w	r8, [r9]
 8000fda:	45a0      	cmp	r8, r4
 8000fdc:	bf28      	it	cs
 8000fde:	46a0      	movcs	r8, r4
 8000fe0:	4642      	mov	r2, r8
 8000fe2:	4618      	mov	r0, r3
 8000fe4:	4649      	mov	r1, r9
 8000fe6:	f001 f985 	bl	80022f4 <memcpy>
 8000fea:	f899 2000 	ldrb.w	r2, [r9]
 8000fee:	4603      	mov	r3, r0
 8000ff0:	eba4 0408 	sub.w	r4, r4, r8
 8000ff4:	4445      	add	r5, r8
 8000ff6:	4416      	add	r6, r2
 8000ff8:	4443      	add	r3, r8
 8000ffa:	b2a4      	uxth	r4, r4
 8000ffc:	b2ad      	uxth	r5, r5
 8000ffe:	b2b6      	uxth	r6, r6
 8001000:	2200      	movs	r2, #0
 8001002:	9204      	str	r2, [sp, #16]
 8001004:	9a02      	ldr	r2, [sp, #8]
 8001006:	9907      	ldr	r1, [sp, #28]
 8001008:	f8d2 2009 	ldr.w	r2, [r2, #9]
 800100c:	440a      	add	r2, r1
 800100e:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8001012:	7910      	ldrb	r0, [r2, #4]
 8001014:	4288      	cmp	r0, r1
 8001016:	d802      	bhi.n	800101e <usb_standard_get_descriptor+0xee>
 8001018:	9a03      	ldr	r2, [sp, #12]
 800101a:	3201      	adds	r2, #1
 800101c:	e7c2      	b.n	8000fa4 <usb_standard_get_descriptor+0x74>
 800101e:	f8bd 9010 	ldrh.w	r9, [sp, #16]
 8001022:	f8d2 a00c 	ldr.w	sl, [r2, #12]
 8001026:	2115      	movs	r1, #21
 8001028:	fb01 f909 	mul.w	r9, r1, r9
 800102c:	eb0a 0b09 	add.w	fp, sl, r9
 8001030:	f81a 8009 	ldrb.w	r8, [sl, r9]
 8001034:	45a0      	cmp	r8, r4
 8001036:	bf28      	it	cs
 8001038:	46a0      	movcs	r8, r4
 800103a:	4642      	mov	r2, r8
 800103c:	4659      	mov	r1, fp
 800103e:	4618      	mov	r0, r3
 8001040:	f001 f958 	bl	80022f4 <memcpy>
 8001044:	f81a 2009 	ldrb.w	r2, [sl, r9]
 8001048:	f8db 100d 	ldr.w	r1, [fp, #13]
 800104c:	4603      	mov	r3, r0
 800104e:	eba4 0408 	sub.w	r4, r4, r8
 8001052:	4445      	add	r5, r8
 8001054:	4416      	add	r6, r2
 8001056:	4443      	add	r3, r8
 8001058:	b2a4      	uxth	r4, r4
 800105a:	b2ad      	uxth	r5, r5
 800105c:	b2b6      	uxth	r6, r6
 800105e:	b1a9      	cbz	r1, 800108c <usb_standard_get_descriptor+0x15c>
 8001060:	f8db 8011 	ldr.w	r8, [fp, #17]
 8001064:	45a0      	cmp	r8, r4
 8001066:	bfa8      	it	ge
 8001068:	46a0      	movge	r8, r4
 800106a:	fa1f f988 	uxth.w	r9, r8
 800106e:	464a      	mov	r2, r9
 8001070:	4618      	mov	r0, r3
 8001072:	f001 f93f 	bl	80022f4 <memcpy>
 8001076:	f8db 2011 	ldr.w	r2, [fp, #17]
 800107a:	4603      	mov	r3, r0
 800107c:	eba4 0409 	sub.w	r4, r4, r9
 8001080:	444d      	add	r5, r9
 8001082:	4416      	add	r6, r2
 8001084:	444b      	add	r3, r9
 8001086:	b2a4      	uxth	r4, r4
 8001088:	b2ad      	uxth	r5, r5
 800108a:	b2b6      	uxth	r6, r6
 800108c:	2200      	movs	r2, #0
 800108e:	9205      	str	r2, [sp, #20]
 8001090:	f89b 1004 	ldrb.w	r1, [fp, #4]
 8001094:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8001098:	4291      	cmp	r1, r2
 800109a:	d802      	bhi.n	80010a2 <usb_standard_get_descriptor+0x172>
 800109c:	9a04      	ldr	r2, [sp, #16]
 800109e:	3201      	adds	r2, #1
 80010a0:	e7af      	b.n	8001002 <usb_standard_get_descriptor+0xd2>
 80010a2:	f8bd 9014 	ldrh.w	r9, [sp, #20]
 80010a6:	f8db 2009 	ldr.w	r2, [fp, #9]
 80010aa:	9206      	str	r2, [sp, #24]
 80010ac:	ebc9 1909 	rsb	r9, r9, r9, lsl #4
 80010b0:	eb02 0a09 	add.w	sl, r2, r9
 80010b4:	f812 8009 	ldrb.w	r8, [r2, r9]
 80010b8:	45a0      	cmp	r8, r4
 80010ba:	bf28      	it	cs
 80010bc:	46a0      	movcs	r8, r4
 80010be:	4642      	mov	r2, r8
 80010c0:	4651      	mov	r1, sl
 80010c2:	4618      	mov	r0, r3
 80010c4:	f001 f916 	bl	80022f4 <memcpy>
 80010c8:	9a06      	ldr	r2, [sp, #24]
 80010ca:	f8da 1007 	ldr.w	r1, [sl, #7]
 80010ce:	f812 2009 	ldrb.w	r2, [r2, r9]
 80010d2:	4603      	mov	r3, r0
 80010d4:	eba4 0408 	sub.w	r4, r4, r8
 80010d8:	4445      	add	r5, r8
 80010da:	4416      	add	r6, r2
 80010dc:	4443      	add	r3, r8
 80010de:	b2a4      	uxth	r4, r4
 80010e0:	b2ad      	uxth	r5, r5
 80010e2:	b2b6      	uxth	r6, r6
 80010e4:	b1a9      	cbz	r1, 8001112 <usb_standard_get_descriptor+0x1e2>
 80010e6:	f8da 800b 	ldr.w	r8, [sl, #11]
 80010ea:	45a0      	cmp	r8, r4
 80010ec:	bfa8      	it	ge
 80010ee:	46a0      	movge	r8, r4
 80010f0:	fa1f f988 	uxth.w	r9, r8
 80010f4:	464a      	mov	r2, r9
 80010f6:	4618      	mov	r0, r3
 80010f8:	f001 f8fc 	bl	80022f4 <memcpy>
 80010fc:	f8da 200b 	ldr.w	r2, [sl, #11]
 8001100:	4603      	mov	r3, r0
 8001102:	eba4 0409 	sub.w	r4, r4, r9
 8001106:	444d      	add	r5, r9
 8001108:	4416      	add	r6, r2
 800110a:	444b      	add	r3, r9
 800110c:	b2a4      	uxth	r4, r4
 800110e:	b2ad      	uxth	r5, r5
 8001110:	b2b6      	uxth	r6, r6
 8001112:	9a05      	ldr	r2, [sp, #20]
 8001114:	3201      	adds	r2, #1
 8001116:	e7ba      	b.n	800108e <usb_standard_get_descriptor+0x15e>
 8001118:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
 800111c:	6904      	ldr	r4, [r0, #16]
 800111e:	d10d      	bne.n	800113c <usb_standard_get_descriptor+0x20c>
 8001120:	2309      	movs	r3, #9
 8001122:	70a3      	strb	r3, [r4, #2]
 8001124:	2304      	movs	r3, #4
 8001126:	70e3      	strb	r3, [r4, #3]
 8001128:	7023      	strb	r3, [r4, #0]
 800112a:	883b      	ldrh	r3, [r7, #0]
 800112c:	2b04      	cmp	r3, #4
 800112e:	bf28      	it	cs
 8001130:	2304      	movcs	r3, #4
 8001132:	803b      	strh	r3, [r7, #0]
 8001134:	2303      	movs	r3, #3
 8001136:	7063      	strb	r3, [r4, #1]
 8001138:	6034      	str	r4, [r6, #0]
 800113a:	e710      	b.n	8000f5e <usb_standard_get_descriptor+0x2e>
 800113c:	6883      	ldr	r3, [r0, #8]
 800113e:	3d01      	subs	r5, #1
 8001140:	b313      	cbz	r3, 8001188 <usb_standard_get_descriptor+0x258>
 8001142:	68c2      	ldr	r2, [r0, #12]
 8001144:	4295      	cmp	r5, r2
 8001146:	da1f      	bge.n	8001188 <usb_standard_get_descriptor+0x258>
 8001148:	8889      	ldrh	r1, [r1, #4]
 800114a:	f240 4209 	movw	r2, #1033	; 0x409
 800114e:	4291      	cmp	r1, r2
 8001150:	d11a      	bne.n	8001188 <usb_standard_get_descriptor+0x258>
 8001152:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
 8001156:	4628      	mov	r0, r5
 8001158:	f001 f9d2 	bl	8002500 <strlen>
 800115c:	3001      	adds	r0, #1
 800115e:	0040      	lsls	r0, r0, #1
 8001160:	b2c0      	uxtb	r0, r0
 8001162:	7020      	strb	r0, [r4, #0]
 8001164:	883b      	ldrh	r3, [r7, #0]
 8001166:	4298      	cmp	r0, r3
 8001168:	bf28      	it	cs
 800116a:	4618      	movcs	r0, r3
 800116c:	8038      	strh	r0, [r7, #0]
 800116e:	4629      	mov	r1, r5
 8001170:	883b      	ldrh	r3, [r7, #0]
 8001172:	085b      	lsrs	r3, r3, #1
 8001174:	1b4a      	subs	r2, r1, r5
 8001176:	3b01      	subs	r3, #1
 8001178:	4293      	cmp	r3, r2
 800117a:	dddb      	ble.n	8001134 <usb_standard_get_descriptor+0x204>
 800117c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8001180:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001184:	8053      	strh	r3, [r2, #2]
 8001186:	e7f3      	b.n	8001170 <usb_standard_get_descriptor+0x240>
 8001188:	2000      	movs	r0, #0
 800118a:	e6e9      	b.n	8000f60 <usb_standard_get_descriptor+0x30>

0800118c <usb_standard_device_get_status>:
 800118c:	8819      	ldrh	r1, [r3, #0]
 800118e:	2902      	cmp	r1, #2
 8001190:	bf84      	itt	hi
 8001192:	2102      	movhi	r1, #2
 8001194:	8019      	strhhi	r1, [r3, #0]
 8001196:	6811      	ldr	r1, [r2, #0]
 8001198:	2300      	movs	r3, #0
 800119a:	700b      	strb	r3, [r1, #0]
 800119c:	6812      	ldr	r2, [r2, #0]
 800119e:	2001      	movs	r0, #1
 80011a0:	7053      	strb	r3, [r2, #1]
 80011a2:	4770      	bx	lr

080011a4 <usbd_register_set_config_callback>:
 80011a4:	b510      	push	{r4, lr}
 80011a6:	2200      	movs	r2, #0
 80011a8:	f100 04c8 	add.w	r4, r0, #200	; 0xc8
 80011ac:	f854 3b04 	ldr.w	r3, [r4], #4
 80011b0:	b13b      	cbz	r3, 80011c2 <usbd_register_set_config_callback+0x1e>
 80011b2:	428b      	cmp	r3, r1
 80011b4:	d008      	beq.n	80011c8 <usbd_register_set_config_callback+0x24>
 80011b6:	3201      	adds	r2, #1
 80011b8:	2a04      	cmp	r2, #4
 80011ba:	d1f7      	bne.n	80011ac <usbd_register_set_config_callback+0x8>
 80011bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011c0:	bd10      	pop	{r4, pc}
 80011c2:	3232      	adds	r2, #50	; 0x32
 80011c4:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 80011c8:	2000      	movs	r0, #0
 80011ca:	bd10      	pop	{r4, pc}

080011cc <_usbd_standard_request_device>:
 80011cc:	b430      	push	{r4, r5}
 80011ce:	784c      	ldrb	r4, [r1, #1]
 80011d0:	2c09      	cmp	r4, #9
 80011d2:	d806      	bhi.n	80011e2 <_usbd_standard_request_device+0x16>
 80011d4:	4d04      	ldr	r5, [pc, #16]	; (80011e8 <_usbd_standard_request_device+0x1c>)
 80011d6:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 80011da:	b114      	cbz	r4, 80011e2 <_usbd_standard_request_device+0x16>
 80011dc:	46a4      	mov	ip, r4
 80011de:	bc30      	pop	{r4, r5}
 80011e0:	4760      	bx	ip
 80011e2:	2000      	movs	r0, #0
 80011e4:	bc30      	pop	{r4, r5}
 80011e6:	4770      	bx	lr
 80011e8:	08002d08 	.word	0x08002d08

080011ec <_usbd_standard_request_interface>:
 80011ec:	b430      	push	{r4, r5}
 80011ee:	784c      	ldrb	r4, [r1, #1]
 80011f0:	2c0b      	cmp	r4, #11
 80011f2:	d806      	bhi.n	8001202 <_usbd_standard_request_interface+0x16>
 80011f4:	4d04      	ldr	r5, [pc, #16]	; (8001208 <_usbd_standard_request_interface+0x1c>)
 80011f6:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 80011fa:	b114      	cbz	r4, 8001202 <_usbd_standard_request_interface+0x16>
 80011fc:	46a4      	mov	ip, r4
 80011fe:	bc30      	pop	{r4, r5}
 8001200:	4760      	bx	ip
 8001202:	2000      	movs	r0, #0
 8001204:	bc30      	pop	{r4, r5}
 8001206:	4770      	bx	lr
 8001208:	08002d30 	.word	0x08002d30

0800120c <_usbd_standard_request_endpoint>:
 800120c:	b410      	push	{r4}
 800120e:	784c      	ldrb	r4, [r1, #1]
 8001210:	2c01      	cmp	r4, #1
 8001212:	d006      	beq.n	8001222 <_usbd_standard_request_endpoint+0x16>
 8001214:	d30f      	bcc.n	8001236 <_usbd_standard_request_endpoint+0x2a>
 8001216:	2c03      	cmp	r4, #3
 8001218:	d008      	beq.n	800122c <_usbd_standard_request_endpoint+0x20>
 800121a:	2000      	movs	r0, #0
 800121c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001220:	4770      	bx	lr
 8001222:	884c      	ldrh	r4, [r1, #2]
 8001224:	2c00      	cmp	r4, #0
 8001226:	d1f8      	bne.n	800121a <_usbd_standard_request_endpoint+0xe>
 8001228:	4c05      	ldr	r4, [pc, #20]	; (8001240 <_usbd_standard_request_endpoint+0x34>)
 800122a:	e005      	b.n	8001238 <_usbd_standard_request_endpoint+0x2c>
 800122c:	884c      	ldrh	r4, [r1, #2]
 800122e:	2c00      	cmp	r4, #0
 8001230:	d1f3      	bne.n	800121a <_usbd_standard_request_endpoint+0xe>
 8001232:	4c04      	ldr	r4, [pc, #16]	; (8001244 <_usbd_standard_request_endpoint+0x38>)
 8001234:	e000      	b.n	8001238 <_usbd_standard_request_endpoint+0x2c>
 8001236:	4c04      	ldr	r4, [pc, #16]	; (8001248 <_usbd_standard_request_endpoint+0x3c>)
 8001238:	46a4      	mov	ip, r4
 800123a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800123e:	4760      	bx	ip
 8001240:	08000eab 	.word	0x08000eab
 8001244:	08000e9b 	.word	0x08000e9b
 8001248:	08000e71 	.word	0x08000e71

0800124c <_usbd_standard_request>:
 800124c:	b410      	push	{r4}
 800124e:	780c      	ldrb	r4, [r1, #0]
 8001250:	f014 0f60 	tst.w	r4, #96	; 0x60
 8001254:	d106      	bne.n	8001264 <_usbd_standard_request+0x18>
 8001256:	f004 041f 	and.w	r4, r4, #31
 800125a:	2c01      	cmp	r4, #1
 800125c:	d00a      	beq.n	8001274 <_usbd_standard_request+0x28>
 800125e:	d305      	bcc.n	800126c <_usbd_standard_request+0x20>
 8001260:	2c02      	cmp	r4, #2
 8001262:	d00b      	beq.n	800127c <_usbd_standard_request+0x30>
 8001264:	2000      	movs	r0, #0
 8001266:	f85d 4b04 	ldr.w	r4, [sp], #4
 800126a:	4770      	bx	lr
 800126c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001270:	f7ff bfac 	b.w	80011cc <_usbd_standard_request_device>
 8001274:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001278:	f7ff bfb8 	b.w	80011ec <_usbd_standard_request_interface>
 800127c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001280:	f7ff bfc4 	b.w	800120c <_usbd_standard_request_endpoint>

08001284 <usb_control_send_chunk>:
 8001284:	b510      	push	{r4, lr}
 8001286:	6803      	ldr	r3, [r0, #0]
 8001288:	79da      	ldrb	r2, [r3, #7]
 800128a:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800128c:	429a      	cmp	r2, r3
 800128e:	4604      	mov	r4, r0
 8001290:	d210      	bcs.n	80012b4 <usb_control_send_chunk+0x30>
 8001292:	4613      	mov	r3, r2
 8001294:	2100      	movs	r1, #0
 8001296:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8001298:	f7ff fd4a 	bl	8000d30 <usbd_ep_write_packet>
 800129c:	2302      	movs	r3, #2
 800129e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80012a2:	6823      	ldr	r3, [r4, #0]
 80012a4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80012a6:	79d9      	ldrb	r1, [r3, #7]
 80012a8:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 80012aa:	440a      	add	r2, r1
 80012ac:	1a5b      	subs	r3, r3, r1
 80012ae:	63a2      	str	r2, [r4, #56]	; 0x38
 80012b0:	87a3      	strh	r3, [r4, #60]	; 0x3c
 80012b2:	bd10      	pop	{r4, pc}
 80012b4:	6b82      	ldr	r2, [r0, #56]	; 0x38
 80012b6:	2100      	movs	r1, #0
 80012b8:	f7ff fd3a 	bl	8000d30 <usbd_ep_write_packet>
 80012bc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80012c0:	2b00      	cmp	r3, #0
 80012c2:	bf14      	ite	ne
 80012c4:	2302      	movne	r3, #2
 80012c6:	2303      	moveq	r3, #3
 80012c8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80012cc:	2300      	movs	r3, #0
 80012ce:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80012d2:	87a3      	strh	r3, [r4, #60]	; 0x3c
 80012d4:	63a3      	str	r3, [r4, #56]	; 0x38
 80012d6:	bd10      	pop	{r4, pc}

080012d8 <usb_control_request_dispatch>:
 80012d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80012dc:	4604      	mov	r4, r0
 80012de:	460e      	mov	r6, r1
 80012e0:	f100 0548 	add.w	r5, r0, #72	; 0x48
 80012e4:	f100 0b68 	add.w	fp, r0, #104	; 0x68
 80012e8:	f100 093c 	add.w	r9, r0, #60	; 0x3c
 80012ec:	f100 0838 	add.w	r8, r0, #56	; 0x38
 80012f0:	f100 0a40 	add.w	sl, r0, #64	; 0x40
 80012f4:	682f      	ldr	r7, [r5, #0]
 80012f6:	b957      	cbnz	r7, 800130e <usb_control_request_dispatch+0x36>
 80012f8:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 80012fc:	f104 0238 	add.w	r2, r4, #56	; 0x38
 8001300:	4631      	mov	r1, r6
 8001302:	4620      	mov	r0, r4
 8001304:	b003      	add	sp, #12
 8001306:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800130a:	f7ff bf9f 	b.w	800124c <_usbd_standard_request>
 800130e:	7833      	ldrb	r3, [r6, #0]
 8001310:	7969      	ldrb	r1, [r5, #5]
 8001312:	792a      	ldrb	r2, [r5, #4]
 8001314:	400b      	ands	r3, r1
 8001316:	429a      	cmp	r2, r3
 8001318:	d003      	beq.n	8001322 <usb_control_request_dispatch+0x4a>
 800131a:	3508      	adds	r5, #8
 800131c:	455d      	cmp	r5, fp
 800131e:	d1e9      	bne.n	80012f4 <usb_control_request_dispatch+0x1c>
 8001320:	e7ea      	b.n	80012f8 <usb_control_request_dispatch+0x20>
 8001322:	f8cd a000 	str.w	sl, [sp]
 8001326:	464b      	mov	r3, r9
 8001328:	4642      	mov	r2, r8
 800132a:	4631      	mov	r1, r6
 800132c:	4620      	mov	r0, r4
 800132e:	47b8      	blx	r7
 8001330:	2801      	cmp	r0, #1
 8001332:	d8f2      	bhi.n	800131a <usb_control_request_dispatch+0x42>
 8001334:	b003      	add	sp, #12
 8001336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800133a <stall_transaction>:
 800133a:	b510      	push	{r4, lr}
 800133c:	2201      	movs	r2, #1
 800133e:	4604      	mov	r4, r0
 8001340:	2100      	movs	r1, #0
 8001342:	f7ff fd05 	bl	8000d50 <usbd_ep_stall_set>
 8001346:	2300      	movs	r3, #0
 8001348:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800134c:	bd10      	pop	{r4, pc}

0800134e <usb_control_recv_chunk>:
 800134e:	b570      	push	{r4, r5, r6, lr}
 8001350:	6803      	ldr	r3, [r0, #0]
 8001352:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8001354:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 8001356:	79db      	ldrb	r3, [r3, #7]
 8001358:	6b81      	ldr	r1, [r0, #56]	; 0x38
 800135a:	1aa4      	subs	r4, r4, r2
 800135c:	429c      	cmp	r4, r3
 800135e:	bfa8      	it	ge
 8001360:	461c      	movge	r4, r3
 8001362:	b2a6      	uxth	r6, r4
 8001364:	440a      	add	r2, r1
 8001366:	4633      	mov	r3, r6
 8001368:	2100      	movs	r1, #0
 800136a:	4605      	mov	r5, r0
 800136c:	f7ff fce8 	bl	8000d40 <usbd_ep_read_packet>
 8001370:	4286      	cmp	r6, r0
 8001372:	d005      	beq.n	8001380 <usb_control_recv_chunk+0x32>
 8001374:	4628      	mov	r0, r5
 8001376:	f7ff ffe0 	bl	800133a <stall_transaction>
 800137a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800137e:	bd70      	pop	{r4, r5, r6, pc}
 8001380:	8fab      	ldrh	r3, [r5, #60]	; 0x3c
 8001382:	441e      	add	r6, r3
 8001384:	87ae      	strh	r6, [r5, #60]	; 0x3c
 8001386:	b2a0      	uxth	r0, r4
 8001388:	bd70      	pop	{r4, r5, r6, pc}

0800138a <usb_control_setup_read>:
 800138a:	b538      	push	{r3, r4, r5, lr}
 800138c:	6903      	ldr	r3, [r0, #16]
 800138e:	6383      	str	r3, [r0, #56]	; 0x38
 8001390:	798b      	ldrb	r3, [r1, #6]
 8001392:	79ca      	ldrb	r2, [r1, #7]
 8001394:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001398:	8783      	strh	r3, [r0, #60]	; 0x3c
 800139a:	4604      	mov	r4, r0
 800139c:	460d      	mov	r5, r1
 800139e:	f7ff ff9b 	bl	80012d8 <usb_control_request_dispatch>
 80013a2:	b310      	cbz	r0, 80013ea <usb_control_setup_read+0x60>
 80013a4:	88eb      	ldrh	r3, [r5, #6]
 80013a6:	b1bb      	cbz	r3, 80013d8 <usb_control_setup_read+0x4e>
 80013a8:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 80013aa:	6821      	ldr	r1, [r4, #0]
 80013ac:	4293      	cmp	r3, r2
 80013ae:	79c9      	ldrb	r1, [r1, #7]
 80013b0:	d90e      	bls.n	80013d0 <usb_control_setup_read+0x46>
 80013b2:	b17a      	cbz	r2, 80013d4 <usb_control_setup_read+0x4a>
 80013b4:	fb92 f3f1 	sdiv	r3, r2, r1
 80013b8:	fb01 2313 	mls	r3, r1, r3, r2
 80013bc:	fab3 f383 	clz	r3, r3
 80013c0:	095b      	lsrs	r3, r3, #5
 80013c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80013c6:	4620      	mov	r0, r4
 80013c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80013cc:	f7ff bf5a 	b.w	8001284 <usb_control_send_chunk>
 80013d0:	2300      	movs	r3, #0
 80013d2:	e7f6      	b.n	80013c2 <usb_control_setup_read+0x38>
 80013d4:	4613      	mov	r3, r2
 80013d6:	e7f4      	b.n	80013c2 <usb_control_setup_read+0x38>
 80013d8:	461a      	mov	r2, r3
 80013da:	4619      	mov	r1, r3
 80013dc:	4620      	mov	r0, r4
 80013de:	f7ff fca7 	bl	8000d30 <usbd_ep_write_packet>
 80013e2:	2304      	movs	r3, #4
 80013e4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80013e8:	bd38      	pop	{r3, r4, r5, pc}
 80013ea:	4620      	mov	r0, r4
 80013ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80013f0:	f7ff bfa3 	b.w	800133a <stall_transaction>

080013f4 <usbd_register_control_callback>:
 80013f4:	b570      	push	{r4, r5, r6, lr}
 80013f6:	2600      	movs	r6, #0
 80013f8:	eb00 05c6 	add.w	r5, r0, r6, lsl #3
 80013fc:	6cac      	ldr	r4, [r5, #72]	; 0x48
 80013fe:	b12c      	cbz	r4, 800140c <usbd_register_control_callback+0x18>
 8001400:	3601      	adds	r6, #1
 8001402:	2e04      	cmp	r6, #4
 8001404:	d1f8      	bne.n	80013f8 <usbd_register_control_callback+0x4>
 8001406:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800140a:	bd70      	pop	{r4, r5, r6, pc}
 800140c:	f885 104c 	strb.w	r1, [r5, #76]	; 0x4c
 8001410:	f885 204d 	strb.w	r2, [r5, #77]	; 0x4d
 8001414:	64ab      	str	r3, [r5, #72]	; 0x48
 8001416:	4620      	mov	r0, r4
 8001418:	bd70      	pop	{r4, r5, r6, pc}

0800141a <_usbd_control_setup>:
 800141a:	b570      	push	{r4, r5, r6, lr}
 800141c:	4604      	mov	r4, r0
 800141e:	2500      	movs	r5, #0
 8001420:	6405      	str	r5, [r0, #64]	; 0x40
 8001422:	2201      	movs	r2, #1
 8001424:	4629      	mov	r1, r5
 8001426:	f100 0630 	add.w	r6, r0, #48	; 0x30
 800142a:	f7ff fc99 	bl	8000d60 <usbd_ep_nak_set>
 800142e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8001430:	b92b      	cbnz	r3, 800143e <_usbd_control_setup+0x24>
 8001432:	4631      	mov	r1, r6
 8001434:	4620      	mov	r0, r4
 8001436:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800143a:	f7ff bfa6 	b.w	800138a <usb_control_setup_read>
 800143e:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 8001442:	2a00      	cmp	r2, #0
 8001444:	dbf5      	blt.n	8001432 <_usbd_control_setup+0x18>
 8001446:	8aa2      	ldrh	r2, [r4, #20]
 8001448:	429a      	cmp	r2, r3
 800144a:	d204      	bcs.n	8001456 <_usbd_control_setup+0x3c>
 800144c:	4620      	mov	r0, r4
 800144e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001452:	f7ff bf72 	b.w	800133a <stall_transaction>
 8001456:	6922      	ldr	r2, [r4, #16]
 8001458:	63a2      	str	r2, [r4, #56]	; 0x38
 800145a:	6822      	ldr	r2, [r4, #0]
 800145c:	87a5      	strh	r5, [r4, #60]	; 0x3c
 800145e:	79d2      	ldrb	r2, [r2, #7]
 8001460:	429a      	cmp	r2, r3
 8001462:	bf34      	ite	cc
 8001464:	2305      	movcc	r3, #5
 8001466:	2306      	movcs	r3, #6
 8001468:	2200      	movs	r2, #0
 800146a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800146e:	4620      	mov	r0, r4
 8001470:	4611      	mov	r1, r2
 8001472:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001476:	f7ff bc73 	b.w	8000d60 <usbd_ep_nak_set>

0800147a <_usbd_control_out>:
 800147a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800147e:	2b06      	cmp	r3, #6
 8001480:	b510      	push	{r4, lr}
 8001482:	4604      	mov	r4, r0
 8001484:	d012      	beq.n	80014ac <_usbd_control_out+0x32>
 8001486:	2b07      	cmp	r3, #7
 8001488:	d027      	beq.n	80014da <_usbd_control_out+0x60>
 800148a:	2b05      	cmp	r3, #5
 800148c:	d121      	bne.n	80014d2 <_usbd_control_out+0x58>
 800148e:	f7ff ff5e 	bl	800134e <usb_control_recv_chunk>
 8001492:	2800      	cmp	r0, #0
 8001494:	db32      	blt.n	80014fc <_usbd_control_out+0x82>
 8001496:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 8001498:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800149a:	1a9b      	subs	r3, r3, r2
 800149c:	6822      	ldr	r2, [r4, #0]
 800149e:	79d2      	ldrb	r2, [r2, #7]
 80014a0:	4293      	cmp	r3, r2
 80014a2:	dc2b      	bgt.n	80014fc <_usbd_control_out+0x82>
 80014a4:	2306      	movs	r3, #6
 80014a6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80014aa:	bd10      	pop	{r4, pc}
 80014ac:	f7ff ff4f 	bl	800134e <usb_control_recv_chunk>
 80014b0:	2800      	cmp	r0, #0
 80014b2:	db23      	blt.n	80014fc <_usbd_control_out+0x82>
 80014b4:	f104 0130 	add.w	r1, r4, #48	; 0x30
 80014b8:	4620      	mov	r0, r4
 80014ba:	f7ff ff0d 	bl	80012d8 <usb_control_request_dispatch>
 80014be:	b138      	cbz	r0, 80014d0 <_usbd_control_out+0x56>
 80014c0:	2300      	movs	r3, #0
 80014c2:	461a      	mov	r2, r3
 80014c4:	4619      	mov	r1, r3
 80014c6:	4620      	mov	r0, r4
 80014c8:	f7ff fc32 	bl	8000d30 <usbd_ep_write_packet>
 80014cc:	2304      	movs	r3, #4
 80014ce:	e7ea      	b.n	80014a6 <_usbd_control_out+0x2c>
 80014d0:	4620      	mov	r0, r4
 80014d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80014d6:	f7ff bf30 	b.w	800133a <stall_transaction>
 80014da:	2300      	movs	r3, #0
 80014dc:	461a      	mov	r2, r3
 80014de:	4619      	mov	r1, r3
 80014e0:	f7ff fc2e 	bl	8000d40 <usbd_ep_read_packet>
 80014e4:	2300      	movs	r3, #0
 80014e6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80014ea:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80014ec:	b11b      	cbz	r3, 80014f6 <_usbd_control_out+0x7c>
 80014ee:	f104 0130 	add.w	r1, r4, #48	; 0x30
 80014f2:	4620      	mov	r0, r4
 80014f4:	4798      	blx	r3
 80014f6:	2300      	movs	r3, #0
 80014f8:	6423      	str	r3, [r4, #64]	; 0x40
 80014fa:	bd10      	pop	{r4, pc}
 80014fc:	bd10      	pop	{r4, pc}

080014fe <_usbd_control_in>:
 80014fe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8001502:	2b03      	cmp	r3, #3
 8001504:	b510      	push	{r4, lr}
 8001506:	4604      	mov	r4, r0
 8001508:	d007      	beq.n	800151a <_usbd_control_in+0x1c>
 800150a:	2b04      	cmp	r3, #4
 800150c:	d00e      	beq.n	800152c <_usbd_control_in+0x2e>
 800150e:	2b02      	cmp	r3, #2
 8001510:	d123      	bne.n	800155a <_usbd_control_in+0x5c>
 8001512:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001516:	f7ff beb5 	b.w	8001284 <usb_control_send_chunk>
 800151a:	2307      	movs	r3, #7
 800151c:	2200      	movs	r2, #0
 800151e:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8001522:	4611      	mov	r1, r2
 8001524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001528:	f7ff bc1a 	b.w	8000d60 <usbd_ep_nak_set>
 800152c:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800152e:	b113      	cbz	r3, 8001536 <_usbd_control_in+0x38>
 8001530:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8001534:	4798      	blx	r3
 8001536:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800153a:	b953      	cbnz	r3, 8001552 <_usbd_control_in+0x54>
 800153c:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
 8001540:	2b05      	cmp	r3, #5
 8001542:	d106      	bne.n	8001552 <_usbd_control_in+0x54>
 8001544:	8e61      	ldrh	r1, [r4, #50]	; 0x32
 8001546:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800154a:	b2c9      	uxtb	r1, r1
 800154c:	685b      	ldr	r3, [r3, #4]
 800154e:	4620      	mov	r0, r4
 8001550:	4798      	blx	r3
 8001552:	2300      	movs	r3, #0
 8001554:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8001558:	bd10      	pop	{r4, pc}
 800155a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800155e:	f7ff beec 	b.w	800133a <stall_transaction>
	...

08001564 <stm32f107_usbd_init>:
 8001564:	b508      	push	{r3, lr}
 8001566:	f240 6087 	movw	r0, #1671	; 0x687
 800156a:	f7ff fa06 	bl	800097a <rcc_periph_clock_enable>
 800156e:	4a25      	ldr	r2, [pc, #148]	; (8001604 <stm32f107_usbd_init+0xa0>)
 8001570:	6813      	ldr	r3, [r2, #0]
 8001572:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001576:	6013      	str	r3, [r2, #0]
 8001578:	4b23      	ldr	r3, [pc, #140]	; (8001608 <stm32f107_usbd_init+0xa4>)
 800157a:	4619      	mov	r1, r3
 800157c:	681a      	ldr	r2, [r3, #0]
 800157e:	2a00      	cmp	r2, #0
 8001580:	dafc      	bge.n	800157c <stm32f107_usbd_init+0x18>
 8001582:	681a      	ldr	r2, [r3, #0]
 8001584:	f042 0201 	orr.w	r2, r2, #1
 8001588:	601a      	str	r2, [r3, #0]
 800158a:	680b      	ldr	r3, [r1, #0]
 800158c:	07db      	lsls	r3, r3, #31
 800158e:	d4fc      	bmi.n	800158a <stm32f107_usbd_init+0x26>
 8001590:	4b1e      	ldr	r3, [pc, #120]	; (800160c <stm32f107_usbd_init+0xa8>)
 8001592:	481f      	ldr	r0, [pc, #124]	; (8001610 <stm32f107_usbd_init+0xac>)
 8001594:	681b      	ldr	r3, [r3, #0]
 8001596:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800159a:	4b1e      	ldr	r3, [pc, #120]	; (8001614 <stm32f107_usbd_init+0xb0>)
 800159c:	681a      	ldr	r2, [r3, #0]
 800159e:	bf2c      	ite	cs
 80015a0:	f442 1204 	orrcs.w	r2, r2, #2162688	; 0x210000
 80015a4:	f442 2210 	orrcc.w	r2, r2, #589824	; 0x90000
 80015a8:	601a      	str	r2, [r3, #0]
 80015aa:	4a1b      	ldr	r2, [pc, #108]	; (8001618 <stm32f107_usbd_init+0xb4>)
 80015ac:	6813      	ldr	r3, [r2, #0]
 80015ae:	f023 0302 	bic.w	r3, r3, #2
 80015b2:	6013      	str	r3, [r2, #0]
 80015b4:	f5a2 62ff 	sub.w	r2, r2, #2040	; 0x7f8
 80015b8:	6813      	ldr	r3, [r2, #0]
 80015ba:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80015be:	f443 5370 	orr.w	r3, r3, #15360	; 0x3c00
 80015c2:	6013      	str	r3, [r2, #0]
 80015c4:	4b15      	ldr	r3, [pc, #84]	; (800161c <stm32f107_usbd_init+0xb8>)
 80015c6:	2202      	movs	r2, #2
 80015c8:	601a      	str	r2, [r3, #0]
 80015ca:	4a15      	ldr	r2, [pc, #84]	; (8001620 <stm32f107_usbd_init+0xbc>)
 80015cc:	6813      	ldr	r3, [r2, #0]
 80015ce:	f043 0303 	orr.w	r3, r3, #3
 80015d2:	6013      	str	r3, [r2, #0]
 80015d4:	4b13      	ldr	r3, [pc, #76]	; (8001624 <stm32f107_usbd_init+0xc0>)
 80015d6:	2200      	movs	r2, #0
 80015d8:	601a      	str	r2, [r3, #0]
 80015da:	4a13      	ldr	r2, [pc, #76]	; (8001628 <stm32f107_usbd_init+0xc4>)
 80015dc:	2380      	movs	r3, #128	; 0x80
 80015de:	6013      	str	r3, [r2, #0]
 80015e0:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
 80015e4:	f852 3c1c 	ldr.w	r3, [r2, #-28]
 80015e8:	f043 0301 	orr.w	r3, r3, #1
 80015ec:	f842 3c1c 	str.w	r3, [r2, #-28]
 80015f0:	4b0e      	ldr	r3, [pc, #56]	; (800162c <stm32f107_usbd_init+0xc8>)
 80015f2:	4a0f      	ldr	r2, [pc, #60]	; (8001630 <stm32f107_usbd_init+0xcc>)
 80015f4:	601a      	str	r2, [r3, #0]
 80015f6:	220f      	movs	r2, #15
 80015f8:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 80015fc:	2201      	movs	r2, #1
 80015fe:	f8c3 27f8 	str.w	r2, [r3, #2040]	; 0x7f8
 8001602:	bd08      	pop	{r3, pc}
 8001604:	5000000c 	.word	0x5000000c
 8001608:	50000010 	.word	0x50000010
 800160c:	5000003c 	.word	0x5000003c
 8001610:	200001ac 	.word	0x200001ac
 8001614:	50000038 	.word	0x50000038
 8001618:	50000804 	.word	0x50000804
 800161c:	50000014 	.word	0x50000014
 8001620:	50000800 	.word	0x50000800
 8001624:	50000e00 	.word	0x50000e00
 8001628:	50000024 	.word	0x50000024
 800162c:	50000018 	.word	0x50000018
 8001630:	80042810 	.word	0x80042810

08001634 <msc_control_request>:
 8001634:	7848      	ldrb	r0, [r1, #1]
 8001636:	28fe      	cmp	r0, #254	; 0xfe
 8001638:	d004      	beq.n	8001644 <msc_control_request+0x10>
 800163a:	f1a0 03ff 	sub.w	r3, r0, #255	; 0xff
 800163e:	4258      	negs	r0, r3
 8001640:	4158      	adcs	r0, r3
 8001642:	4770      	bx	lr
 8001644:	6812      	ldr	r2, [r2, #0]
 8001646:	2100      	movs	r1, #0
 8001648:	2001      	movs	r0, #1
 800164a:	7011      	strb	r1, [r2, #0]
 800164c:	8018      	strh	r0, [r3, #0]
 800164e:	4770      	bx	lr

08001650 <msc_set_config>:
 8001650:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001652:	4c0d      	ldr	r4, [pc, #52]	; (8001688 <msc_set_config+0x38>)
 8001654:	4a0d      	ldr	r2, [pc, #52]	; (800168c <msc_set_config+0x3c>)
 8001656:	7963      	ldrb	r3, [r4, #5]
 8001658:	7921      	ldrb	r1, [r4, #4]
 800165a:	9200      	str	r2, [sp, #0]
 800165c:	2202      	movs	r2, #2
 800165e:	4605      	mov	r5, r0
 8001660:	f7ff fb44 	bl	8000cec <usbd_ep_setup>
 8001664:	4a0a      	ldr	r2, [pc, #40]	; (8001690 <msc_set_config+0x40>)
 8001666:	79e3      	ldrb	r3, [r4, #7]
 8001668:	79a1      	ldrb	r1, [r4, #6]
 800166a:	9200      	str	r2, [sp, #0]
 800166c:	4628      	mov	r0, r5
 800166e:	2202      	movs	r2, #2
 8001670:	f7ff fb3c 	bl	8000cec <usbd_ep_setup>
 8001674:	4b07      	ldr	r3, [pc, #28]	; (8001694 <msc_set_config+0x44>)
 8001676:	227f      	movs	r2, #127	; 0x7f
 8001678:	2121      	movs	r1, #33	; 0x21
 800167a:	4628      	mov	r0, r5
 800167c:	b003      	add	sp, #12
 800167e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001682:	f7ff beb7 	b.w	80013f4 <usbd_register_control_callback>
 8001686:	bf00      	nop
 8001688:	200002a8 	.word	0x200002a8
 800168c:	080019b1 	.word	0x080019b1
 8001690:	08001a85 	.word	0x08001a85
 8001694:	08001635 	.word	0x08001635

08001698 <scsi_command.constprop.3>:
 8001698:	b570      	push	{r4, r5, r6, lr}
 800169a:	4605      	mov	r5, r0
 800169c:	4cbc      	ldr	r4, [pc, #752]	; (8001990 <scsi_command.constprop.3+0x2f8>)
 800169e:	b9b0      	cbnz	r0, 80016ce <scsi_command.constprop.3+0x36>
 80016a0:	f245 3355 	movw	r3, #21333	; 0x5355
 80016a4:	f8a4 3262 	strh.w	r3, [r4, #610]	; 0x262
 80016a8:	f245 3342 	movw	r3, #21314	; 0x5342
 80016ac:	f8a4 3264 	strh.w	r3, [r4, #612]	; 0x264
 80016b0:	f8d4 302d 	ldr.w	r3, [r4, #45]	; 0x2d
 80016b4:	f884 0261 	strb.w	r0, [r4, #609]	; 0x261
 80016b8:	f8c4 3266 	str.w	r3, [r4, #614]	; 0x266
 80016bc:	f8a4 026a 	strh.w	r0, [r4, #618]	; 0x26a
 80016c0:	f8a4 026c 	strh.w	r0, [r4, #620]	; 0x26c
 80016c4:	f884 026e 	strb.w	r0, [r4, #622]	; 0x26e
 80016c8:	64e0      	str	r0, [r4, #76]	; 0x4c
 80016ca:	64a0      	str	r0, [r4, #72]	; 0x48
 80016cc:	6520      	str	r0, [r4, #80]	; 0x50
 80016ce:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80016d2:	2b12      	cmp	r3, #18
 80016d4:	f000 80b6 	beq.w	8001844 <scsi_command.constprop.3+0x1ac>
 80016d8:	d82c      	bhi.n	8001734 <scsi_command.constprop.3+0x9c>
 80016da:	2b04      	cmp	r3, #4
 80016dc:	d062      	beq.n	80017a4 <scsi_command.constprop.3+0x10c>
 80016de:	d811      	bhi.n	8001704 <scsi_command.constprop.3+0x6c>
 80016e0:	b383      	cbz	r3, 8001744 <scsi_command.constprop.3+0xac>
 80016e2:	2b03      	cmp	r3, #3
 80016e4:	d070      	beq.n	80017c8 <scsi_command.constprop.3+0x130>
 80016e6:	2305      	movs	r3, #5
 80016e8:	f884 3270 	strb.w	r3, [r4, #624]	; 0x270
 80016ec:	2320      	movs	r3, #32
 80016ee:	f884 3271 	strb.w	r3, [r4, #625]	; 0x271
 80016f2:	2300      	movs	r3, #0
 80016f4:	f884 3272 	strb.w	r3, [r4, #626]	; 0x272
 80016f8:	64e3      	str	r3, [r4, #76]	; 0x4c
 80016fa:	64a3      	str	r3, [r4, #72]	; 0x48
 80016fc:	2301      	movs	r3, #1
 80016fe:	f884 326e 	strb.w	r3, [r4, #622]	; 0x26e
 8001702:	bd70      	pop	{r4, r5, r6, pc}
 8001704:	2b08      	cmp	r3, #8
 8001706:	f000 8090 	beq.w	800182a <scsi_command.constprop.3+0x192>
 800170a:	2b0a      	cmp	r3, #10
 800170c:	d1eb      	bne.n	80016e6 <scsi_command.constprop.3+0x4e>
 800170e:	2d00      	cmp	r5, #0
 8001710:	d1f7      	bne.n	8001702 <scsi_command.constprop.3+0x6a>
 8001712:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8001716:	8f62      	ldrh	r2, [r4, #58]	; 0x3a
 8001718:	041b      	lsls	r3, r3, #16
 800171a:	ba52      	rev16	r2, r2
 800171c:	f403 13f8 	and.w	r3, r3, #2031616	; 0x1f0000
 8001720:	b292      	uxth	r2, r2
 8001722:	4313      	orrs	r3, r2
 8001724:	6563      	str	r3, [r4, #84]	; 0x54
 8001726:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800172a:	65a3      	str	r3, [r4, #88]	; 0x58
 800172c:	025b      	lsls	r3, r3, #9
 800172e:	65e5      	str	r5, [r4, #92]	; 0x5c
 8001730:	64a3      	str	r3, [r4, #72]	; 0x48
 8001732:	bd70      	pop	{r4, r5, r6, pc}
 8001734:	2b23      	cmp	r3, #35	; 0x23
 8001736:	f000 810d 	beq.w	8001954 <scsi_command.constprop.3+0x2bc>
 800173a:	d80b      	bhi.n	8001754 <scsi_command.constprop.3+0xbc>
 800173c:	2b1a      	cmp	r3, #26
 800173e:	d063      	beq.n	8001808 <scsi_command.constprop.3+0x170>
 8001740:	2b1d      	cmp	r3, #29
 8001742:	d1d0      	bne.n	80016e6 <scsi_command.constprop.3+0x4e>
 8001744:	2300      	movs	r3, #0
 8001746:	f884 3270 	strb.w	r3, [r4, #624]	; 0x270
 800174a:	f884 3271 	strb.w	r3, [r4, #625]	; 0x271
 800174e:	f884 3272 	strb.w	r3, [r4, #626]	; 0x272
 8001752:	bd70      	pop	{r4, r5, r6, pc}
 8001754:	2b28      	cmp	r3, #40	; 0x28
 8001756:	f000 80ca 	beq.w	80018ee <scsi_command.constprop.3+0x256>
 800175a:	2b2a      	cmp	r3, #42	; 0x2a
 800175c:	f000 80e1 	beq.w	8001922 <scsi_command.constprop.3+0x28a>
 8001760:	2b25      	cmp	r3, #37	; 0x25
 8001762:	d1c0      	bne.n	80016e6 <scsi_command.constprop.3+0x4e>
 8001764:	2d00      	cmp	r5, #0
 8001766:	d1cc      	bne.n	8001702 <scsi_command.constprop.3+0x6a>
 8001768:	6963      	ldr	r3, [r4, #20]
 800176a:	f884 3063 	strb.w	r3, [r4, #99]	; 0x63
 800176e:	0e1a      	lsrs	r2, r3, #24
 8001770:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
 8001774:	0c1a      	lsrs	r2, r3, #16
 8001776:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
 800177a:	0a1a      	lsrs	r2, r3, #8
 800177c:	2302      	movs	r3, #2
 800177e:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8001782:	f884 2062 	strb.w	r2, [r4, #98]	; 0x62
 8001786:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 800178a:	f884 5065 	strb.w	r5, [r4, #101]	; 0x65
 800178e:	f884 5067 	strb.w	r5, [r4, #103]	; 0x67
 8001792:	2308      	movs	r3, #8
 8001794:	f884 5270 	strb.w	r5, [r4, #624]	; 0x270
 8001798:	f884 5271 	strb.w	r5, [r4, #625]	; 0x271
 800179c:	f884 5272 	strb.w	r5, [r4, #626]	; 0x272
 80017a0:	64e3      	str	r3, [r4, #76]	; 0x4c
 80017a2:	bd70      	pop	{r4, r5, r6, pc}
 80017a4:	2d00      	cmp	r5, #0
 80017a6:	d1ac      	bne.n	8001702 <scsi_command.constprop.3+0x6a>
 80017a8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80017ac:	4629      	mov	r1, r5
 80017ae:	4879      	ldr	r0, [pc, #484]	; (8001994 <scsi_command.constprop.3+0x2fc>)
 80017b0:	4e78      	ldr	r6, [pc, #480]	; (8001994 <scsi_command.constprop.3+0x2fc>)
 80017b2:	f000 fe39 	bl	8002428 <memset>
 80017b6:	6963      	ldr	r3, [r4, #20]
 80017b8:	429d      	cmp	r5, r3
 80017ba:	d2c3      	bcs.n	8001744 <scsi_command.constprop.3+0xac>
 80017bc:	4628      	mov	r0, r5
 80017be:	69e3      	ldr	r3, [r4, #28]
 80017c0:	4631      	mov	r1, r6
 80017c2:	4798      	blx	r3
 80017c4:	3501      	adds	r5, #1
 80017c6:	e7f6      	b.n	80017b6 <scsi_command.constprop.3+0x11e>
 80017c8:	2d00      	cmp	r5, #0
 80017ca:	d19a      	bne.n	8001702 <scsi_command.constprop.3+0x6a>
 80017cc:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80017d0:	64e3      	str	r3, [r4, #76]	; 0x4c
 80017d2:	4b71      	ldr	r3, [pc, #452]	; (8001998 <scsi_command.constprop.3+0x300>)
 80017d4:	4a6f      	ldr	r2, [pc, #444]	; (8001994 <scsi_command.constprop.3+0x2fc>)
 80017d6:	f103 0610 	add.w	r6, r3, #16
 80017da:	6818      	ldr	r0, [r3, #0]
 80017dc:	6859      	ldr	r1, [r3, #4]
 80017de:	4615      	mov	r5, r2
 80017e0:	c503      	stmia	r5!, {r0, r1}
 80017e2:	3308      	adds	r3, #8
 80017e4:	42b3      	cmp	r3, r6
 80017e6:	462a      	mov	r2, r5
 80017e8:	d1f7      	bne.n	80017da <scsi_command.constprop.3+0x142>
 80017ea:	881b      	ldrh	r3, [r3, #0]
 80017ec:	802b      	strh	r3, [r5, #0]
 80017ee:	f894 3270 	ldrb.w	r3, [r4, #624]	; 0x270
 80017f2:	f884 3062 	strb.w	r3, [r4, #98]	; 0x62
 80017f6:	f894 3271 	ldrb.w	r3, [r4, #625]	; 0x271
 80017fa:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 80017fe:	f894 3272 	ldrb.w	r3, [r4, #626]	; 0x272
 8001802:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8001806:	bd70      	pop	{r4, r5, r6, pc}
 8001808:	2d00      	cmp	r5, #0
 800180a:	f47f af7a 	bne.w	8001702 <scsi_command.constprop.3+0x6a>
 800180e:	2304      	movs	r3, #4
 8001810:	2203      	movs	r2, #3
 8001812:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
 8001816:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800181a:	f884 5062 	strb.w	r5, [r4, #98]	; 0x62
 800181e:	f8a4 326a 	strh.w	r3, [r4, #618]	; 0x26a
 8001822:	f8a4 526c 	strh.w	r5, [r4, #620]	; 0x26c
 8001826:	64e3      	str	r3, [r4, #76]	; 0x4c
 8001828:	bd70      	pop	{r4, r5, r6, pc}
 800182a:	2d00      	cmp	r5, #0
 800182c:	f47f af69 	bne.w	8001702 <scsi_command.constprop.3+0x6a>
 8001830:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8001832:	65e5      	str	r5, [r4, #92]	; 0x5c
 8001834:	ba5b      	rev16	r3, r3
 8001836:	b29b      	uxth	r3, r3
 8001838:	6563      	str	r3, [r4, #84]	; 0x54
 800183a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800183e:	65a3      	str	r3, [r4, #88]	; 0x58
 8001840:	025b      	lsls	r3, r3, #9
 8001842:	e7a7      	b.n	8001794 <scsi_command.constprop.3+0xfc>
 8001844:	2d00      	cmp	r5, #0
 8001846:	f47f af5c 	bne.w	8001702 <scsi_command.constprop.3+0x6a>
 800184a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800184e:	07db      	lsls	r3, r3, #31
 8001850:	d43a      	bmi.n	80018c8 <scsi_command.constprop.3+0x230>
 8001852:	2324      	movs	r3, #36	; 0x24
 8001854:	64e3      	str	r3, [r4, #76]	; 0x4c
 8001856:	4b51      	ldr	r3, [pc, #324]	; (800199c <scsi_command.constprop.3+0x304>)
 8001858:	4a4e      	ldr	r2, [pc, #312]	; (8001994 <scsi_command.constprop.3+0x2fc>)
 800185a:	f103 0620 	add.w	r6, r3, #32
 800185e:	6818      	ldr	r0, [r3, #0]
 8001860:	6859      	ldr	r1, [r3, #4]
 8001862:	4615      	mov	r5, r2
 8001864:	c503      	stmia	r5!, {r0, r1}
 8001866:	3308      	adds	r3, #8
 8001868:	42b3      	cmp	r3, r6
 800186a:	462a      	mov	r2, r5
 800186c:	d1f7      	bne.n	800185e <scsi_command.constprop.3+0x1c6>
 800186e:	6818      	ldr	r0, [r3, #0]
 8001870:	6028      	str	r0, [r5, #0]
 8001872:	68a5      	ldr	r5, [r4, #8]
 8001874:	4628      	mov	r0, r5
 8001876:	f000 fe43 	bl	8002500 <strlen>
 800187a:	2808      	cmp	r0, #8
 800187c:	4602      	mov	r2, r0
 800187e:	4629      	mov	r1, r5
 8001880:	bf28      	it	cs
 8001882:	2208      	movcs	r2, #8
 8001884:	4846      	ldr	r0, [pc, #280]	; (80019a0 <scsi_command.constprop.3+0x308>)
 8001886:	f000 fd35 	bl	80022f4 <memcpy>
 800188a:	68e5      	ldr	r5, [r4, #12]
 800188c:	4628      	mov	r0, r5
 800188e:	f000 fe37 	bl	8002500 <strlen>
 8001892:	2810      	cmp	r0, #16
 8001894:	4602      	mov	r2, r0
 8001896:	4629      	mov	r1, r5
 8001898:	bf28      	it	cs
 800189a:	2210      	movcs	r2, #16
 800189c:	4841      	ldr	r0, [pc, #260]	; (80019a4 <scsi_command.constprop.3+0x30c>)
 800189e:	f000 fd29 	bl	80022f4 <memcpy>
 80018a2:	6925      	ldr	r5, [r4, #16]
 80018a4:	4628      	mov	r0, r5
 80018a6:	f000 fe2b 	bl	8002500 <strlen>
 80018aa:	2804      	cmp	r0, #4
 80018ac:	4602      	mov	r2, r0
 80018ae:	4629      	mov	r1, r5
 80018b0:	bf28      	it	cs
 80018b2:	2204      	movcs	r2, #4
 80018b4:	483c      	ldr	r0, [pc, #240]	; (80019a8 <scsi_command.constprop.3+0x310>)
 80018b6:	f000 fd1d 	bl	80022f4 <memcpy>
 80018ba:	2300      	movs	r3, #0
 80018bc:	2224      	movs	r2, #36	; 0x24
 80018be:	f8a4 226a 	strh.w	r2, [r4, #618]	; 0x26a
 80018c2:	f8a4 326c 	strh.w	r3, [r4, #620]	; 0x26c
 80018c6:	e73e      	b.n	8001746 <scsi_command.constprop.3+0xae>
 80018c8:	2314      	movs	r3, #20
 80018ca:	64e3      	str	r3, [r4, #76]	; 0x4c
 80018cc:	4b37      	ldr	r3, [pc, #220]	; (80019ac <scsi_command.constprop.3+0x314>)
 80018ce:	4a31      	ldr	r2, [pc, #196]	; (8001994 <scsi_command.constprop.3+0x2fc>)
 80018d0:	f103 0610 	add.w	r6, r3, #16
 80018d4:	6818      	ldr	r0, [r3, #0]
 80018d6:	6859      	ldr	r1, [r3, #4]
 80018d8:	4615      	mov	r5, r2
 80018da:	c503      	stmia	r5!, {r0, r1}
 80018dc:	3308      	adds	r3, #8
 80018de:	42b3      	cmp	r3, r6
 80018e0:	462a      	mov	r2, r5
 80018e2:	d1f7      	bne.n	80018d4 <scsi_command.constprop.3+0x23c>
 80018e4:	6818      	ldr	r0, [r3, #0]
 80018e6:	6028      	str	r0, [r5, #0]
 80018e8:	2300      	movs	r3, #0
 80018ea:	2214      	movs	r2, #20
 80018ec:	e7e7      	b.n	80018be <scsi_command.constprop.3+0x226>
 80018ee:	2d00      	cmp	r5, #0
 80018f0:	f47f af07 	bne.w	8001702 <scsi_command.constprop.3+0x6a>
 80018f4:	f894 303b 	ldrb.w	r3, [r4, #59]	; 0x3b
 80018f8:	f894 203a 	ldrb.w	r2, [r4, #58]	; 0x3a
 80018fc:	041b      	lsls	r3, r3, #16
 80018fe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001902:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8001906:	4313      	orrs	r3, r2
 8001908:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 800190c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001910:	6563      	str	r3, [r4, #84]	; 0x54
 8001912:	f894 203f 	ldrb.w	r2, [r4, #63]	; 0x3f
 8001916:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800191a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800191e:	65a3      	str	r3, [r4, #88]	; 0x58
 8001920:	e78e      	b.n	8001840 <scsi_command.constprop.3+0x1a8>
 8001922:	2d00      	cmp	r5, #0
 8001924:	f47f aeed 	bne.w	8001702 <scsi_command.constprop.3+0x6a>
 8001928:	f894 303b 	ldrb.w	r3, [r4, #59]	; 0x3b
 800192c:	f894 203a 	ldrb.w	r2, [r4, #58]	; 0x3a
 8001930:	041b      	lsls	r3, r3, #16
 8001932:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001936:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800193a:	4313      	orrs	r3, r2
 800193c:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8001940:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001944:	6563      	str	r3, [r4, #84]	; 0x54
 8001946:	f894 203f 	ldrb.w	r2, [r4, #63]	; 0x3f
 800194a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800194e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001952:	e6ea      	b.n	800172a <scsi_command.constprop.3+0x92>
 8001954:	2d00      	cmp	r5, #0
 8001956:	f47f aed4 	bne.w	8001702 <scsi_command.constprop.3+0x6a>
 800195a:	2308      	movs	r3, #8
 800195c:	f884 3063 	strb.w	r3, [r4, #99]	; 0x63
 8001960:	6963      	ldr	r3, [r4, #20]
 8001962:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8001966:	0e1a      	lsrs	r2, r3, #24
 8001968:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 800196c:	0c1a      	lsrs	r2, r3, #16
 800196e:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8001972:	0a1a      	lsrs	r2, r3, #8
 8001974:	2302      	movs	r3, #2
 8001976:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 800197a:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800197e:	f884 2066 	strb.w	r2, [r4, #102]	; 0x66
 8001982:	f884 5069 	strb.w	r5, [r4, #105]	; 0x69
 8001986:	f884 506b 	strb.w	r5, [r4, #107]	; 0x6b
 800198a:	2309      	movs	r3, #9
 800198c:	e702      	b.n	8001794 <scsi_command.constprop.3+0xfc>
 800198e:	bf00      	nop
 8001990:	200002a8 	.word	0x200002a8
 8001994:	20000308 	.word	0x20000308
 8001998:	08002dcc 	.word	0x08002dcc
 800199c:	08002d94 	.word	0x08002d94
 80019a0:	20000310 	.word	0x20000310
 80019a4:	20000318 	.word	0x20000318
 80019a8:	20000328 	.word	0x20000328
 80019ac:	08002db8 	.word	0x08002db8

080019b0 <msc_data_tx_cb>:
 80019b0:	b570      	push	{r4, r5, r6, lr}
 80019b2:	4c33      	ldr	r4, [pc, #204]	; (8001a80 <msc_data_tx_cb+0xd0>)
 80019b4:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80019b6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 80019b8:	4293      	cmp	r3, r2
 80019ba:	4605      	mov	r5, r0
 80019bc:	460e      	mov	r6, r1
 80019be:	d222      	bcs.n	8001a06 <msc_data_tx_cb+0x56>
 80019c0:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80019c2:	b162      	cbz	r2, 80019de <msc_data_tx_cb+0x2e>
 80019c4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80019c8:	b94b      	cbnz	r3, 80019de <msc_data_tx_cb+0x2e>
 80019ca:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80019cc:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80019ce:	69a3      	ldr	r3, [r4, #24]
 80019d0:	f104 0160 	add.w	r1, r4, #96	; 0x60
 80019d4:	4410      	add	r0, r2
 80019d6:	4798      	blx	r3
 80019d8:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 80019da:	3301      	adds	r3, #1
 80019dc:	65e3      	str	r3, [r4, #92]	; 0x5c
 80019de:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80019e0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80019e2:	79e1      	ldrb	r1, [r4, #7]
 80019e4:	1a9b      	subs	r3, r3, r2
 80019e6:	428b      	cmp	r3, r1
 80019e8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80019ec:	bfa8      	it	ge
 80019ee:	460b      	movge	r3, r1
 80019f0:	3260      	adds	r2, #96	; 0x60
 80019f2:	b29b      	uxth	r3, r3
 80019f4:	4422      	add	r2, r4
 80019f6:	4631      	mov	r1, r6
 80019f8:	4628      	mov	r0, r5
 80019fa:	f7ff f999 	bl	8000d30 <usbd_ep_write_packet>
 80019fe:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001a00:	4418      	add	r0, r3
 8001a02:	6520      	str	r0, [r4, #80]	; 0x50
 8001a04:	bd70      	pop	{r4, r5, r6, pc}
 8001a06:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001a08:	b13b      	cbz	r3, 8001a1a <msc_data_tx_cb+0x6a>
 8001a0a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001a0c:	4293      	cmp	r3, r2
 8001a0e:	d104      	bne.n	8001a1a <msc_data_tx_cb+0x6a>
 8001a10:	2300      	movs	r3, #0
 8001a12:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001a14:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a16:	b103      	cbz	r3, 8001a1a <msc_data_tx_cb+0x6a>
 8001a18:	4798      	blx	r3
 8001a1a:	f894 3260 	ldrb.w	r3, [r4, #608]	; 0x260
 8001a1e:	b92b      	cbnz	r3, 8001a2c <msc_data_tx_cb+0x7c>
 8001a20:	2001      	movs	r0, #1
 8001a22:	f7ff fe39 	bl	8001698 <scsi_command.constprop.3>
 8001a26:	2301      	movs	r3, #1
 8001a28:	f884 3260 	strb.w	r3, [r4, #608]	; 0x260
 8001a2c:	f894 2261 	ldrb.w	r2, [r4, #609]	; 0x261
 8001a30:	f1c2 010d 	rsb	r1, r2, #13
 8001a34:	2900      	cmp	r1, #0
 8001a36:	dd11      	ble.n	8001a5c <msc_data_tx_cb+0xac>
 8001a38:	79e3      	ldrb	r3, [r4, #7]
 8001a3a:	428b      	cmp	r3, r1
 8001a3c:	bfa8      	it	ge
 8001a3e:	460b      	movge	r3, r1
 8001a40:	f202 2262 	addw	r2, r2, #610	; 0x262
 8001a44:	b29b      	uxth	r3, r3
 8001a46:	4422      	add	r2, r4
 8001a48:	4631      	mov	r1, r6
 8001a4a:	4628      	mov	r0, r5
 8001a4c:	f7ff f970 	bl	8000d30 <usbd_ep_write_packet>
 8001a50:	f894 3261 	ldrb.w	r3, [r4, #609]	; 0x261
 8001a54:	4418      	add	r0, r3
 8001a56:	f884 0261 	strb.w	r0, [r4, #609]	; 0x261
 8001a5a:	bd70      	pop	{r4, r5, r6, pc}
 8001a5c:	2a0d      	cmp	r2, #13
 8001a5e:	d10e      	bne.n	8001a7e <msc_data_tx_cb+0xce>
 8001a60:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001a64:	6563      	str	r3, [r4, #84]	; 0x54
 8001a66:	2300      	movs	r3, #0
 8001a68:	65a3      	str	r3, [r4, #88]	; 0x58
 8001a6a:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001a6c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8001a70:	64a3      	str	r3, [r4, #72]	; 0x48
 8001a72:	64e3      	str	r3, [r4, #76]	; 0x4c
 8001a74:	6523      	str	r3, [r4, #80]	; 0x50
 8001a76:	f884 3261 	strb.w	r3, [r4, #609]	; 0x261
 8001a7a:	f884 3260 	strb.w	r3, [r4, #608]	; 0x260
 8001a7e:	bd70      	pop	{r4, r5, r6, pc}
 8001a80:	200002a8 	.word	0x200002a8

08001a84 <msc_data_rx_cb>:
 8001a84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a86:	4c55      	ldr	r4, [pc, #340]	; (8001bdc <msc_data_rx_cb+0x158>)
 8001a88:	f894 2028 	ldrb.w	r2, [r4, #40]	; 0x28
 8001a8c:	f1c2 071f 	rsb	r7, r2, #31
 8001a90:	2f00      	cmp	r7, #0
 8001a92:	4605      	mov	r5, r0
 8001a94:	460e      	mov	r6, r1
 8001a96:	dc2e      	bgt.n	8001af6 <msc_data_rx_cb+0x72>
 8001a98:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001a9a:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8001a9c:	4293      	cmp	r3, r2
 8001a9e:	d343      	bcc.n	8001b28 <msc_data_rx_cb+0xa4>
 8001aa0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 8001aa2:	4293      	cmp	r3, r2
 8001aa4:	f080 8088 	bcs.w	8001bb8 <msc_data_rx_cb+0x134>
 8001aa8:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8001aaa:	b182      	cbz	r2, 8001ace <msc_data_rx_cb+0x4a>
 8001aac:	b913      	cbnz	r3, 8001ab4 <msc_data_rx_cb+0x30>
 8001aae:	6a23      	ldr	r3, [r4, #32]
 8001ab0:	b103      	cbz	r3, 8001ab4 <msc_data_rx_cb+0x30>
 8001ab2:	4798      	blx	r3
 8001ab4:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001ab6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001aba:	b943      	cbnz	r3, 8001ace <msc_data_rx_cb+0x4a>
 8001abc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001abe:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001ac0:	69a3      	ldr	r3, [r4, #24]
 8001ac2:	4947      	ldr	r1, [pc, #284]	; (8001be0 <msc_data_rx_cb+0x15c>)
 8001ac4:	4410      	add	r0, r2
 8001ac6:	4798      	blx	r3
 8001ac8:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8001aca:	3301      	adds	r3, #1
 8001acc:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001ace:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001ad0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8001ad2:	79e1      	ldrb	r1, [r4, #7]
 8001ad4:	1a9b      	subs	r3, r3, r2
 8001ad6:	428b      	cmp	r3, r1
 8001ad8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001adc:	bfa8      	it	ge
 8001ade:	460b      	movge	r3, r1
 8001ae0:	3260      	adds	r2, #96	; 0x60
 8001ae2:	b29b      	uxth	r3, r3
 8001ae4:	4422      	add	r2, r4
 8001ae6:	7921      	ldrb	r1, [r4, #4]
 8001ae8:	4628      	mov	r0, r5
 8001aea:	f7ff f921 	bl	8000d30 <usbd_ep_write_packet>
 8001aee:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001af0:	4418      	add	r0, r3
 8001af2:	6520      	str	r0, [r4, #80]	; 0x50
 8001af4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001af6:	79e3      	ldrb	r3, [r4, #7]
 8001af8:	42bb      	cmp	r3, r7
 8001afa:	bfa8      	it	ge
 8001afc:	463b      	movge	r3, r7
 8001afe:	3229      	adds	r2, #41	; 0x29
 8001b00:	b29b      	uxth	r3, r3
 8001b02:	4422      	add	r2, r4
 8001b04:	f7ff f91c 	bl	8000d40 <usbd_ep_read_packet>
 8001b08:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8001b0c:	4418      	add	r0, r3
 8001b0e:	b2c0      	uxtb	r0, r0
 8001b10:	281f      	cmp	r0, #31
 8001b12:	f884 0028 	strb.w	r0, [r4, #40]	; 0x28
 8001b16:	d1bf      	bne.n	8001a98 <msc_data_rx_cb+0x14>
 8001b18:	2000      	movs	r0, #0
 8001b1a:	f7ff fdbd 	bl	8001698 <scsi_command.constprop.3>
 8001b1e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001b20:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001b22:	429a      	cmp	r2, r3
 8001b24:	d2b8      	bcs.n	8001a98 <msc_data_rx_cb+0x14>
 8001b26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b28:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8001b2a:	b11a      	cbz	r2, 8001b34 <msc_data_rx_cb+0xb0>
 8001b2c:	b913      	cbnz	r3, 8001b34 <msc_data_rx_cb+0xb0>
 8001b2e:	6a23      	ldr	r3, [r4, #32]
 8001b30:	b103      	cbz	r3, 8001b34 <msc_data_rx_cb+0xb0>
 8001b32:	4798      	blx	r3
 8001b34:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001b36:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001b38:	79e1      	ldrb	r1, [r4, #7]
 8001b3a:	1a9b      	subs	r3, r3, r2
 8001b3c:	428b      	cmp	r3, r1
 8001b3e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001b42:	bfa8      	it	ge
 8001b44:	460b      	movge	r3, r1
 8001b46:	3260      	adds	r2, #96	; 0x60
 8001b48:	b29b      	uxth	r3, r3
 8001b4a:	4422      	add	r2, r4
 8001b4c:	4631      	mov	r1, r6
 8001b4e:	4628      	mov	r0, r5
 8001b50:	f7ff f8f6 	bl	8000d40 <usbd_ep_read_packet>
 8001b54:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001b56:	4418      	add	r0, r3
 8001b58:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001b5a:	6520      	str	r0, [r4, #80]	; 0x50
 8001b5c:	b15b      	cbz	r3, 8001b76 <msc_data_rx_cb+0xf2>
 8001b5e:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8001b62:	b940      	cbnz	r0, 8001b76 <msc_data_rx_cb+0xf2>
 8001b64:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001b66:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001b68:	69e3      	ldr	r3, [r4, #28]
 8001b6a:	491d      	ldr	r1, [pc, #116]	; (8001be0 <msc_data_rx_cb+0x15c>)
 8001b6c:	4410      	add	r0, r2
 8001b6e:	4798      	blx	r3
 8001b70:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8001b72:	3301      	adds	r3, #1
 8001b74:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001b76:	f894 3260 	ldrb.w	r3, [r4, #608]	; 0x260
 8001b7a:	b92b      	cbnz	r3, 8001b88 <msc_data_rx_cb+0x104>
 8001b7c:	2001      	movs	r0, #1
 8001b7e:	f7ff fd8b 	bl	8001698 <scsi_command.constprop.3>
 8001b82:	2301      	movs	r3, #1
 8001b84:	f884 3260 	strb.w	r3, [r4, #608]	; 0x260
 8001b88:	f894 2261 	ldrb.w	r2, [r4, #609]	; 0x261
 8001b8c:	f1c2 010d 	rsb	r1, r2, #13
 8001b90:	2900      	cmp	r1, #0
 8001b92:	dd10      	ble.n	8001bb6 <msc_data_rx_cb+0x132>
 8001b94:	79e3      	ldrb	r3, [r4, #7]
 8001b96:	428b      	cmp	r3, r1
 8001b98:	bfa8      	it	ge
 8001b9a:	460b      	movge	r3, r1
 8001b9c:	f202 2262 	addw	r2, r2, #610	; 0x262
 8001ba0:	b29b      	uxth	r3, r3
 8001ba2:	4422      	add	r2, r4
 8001ba4:	7921      	ldrb	r1, [r4, #4]
 8001ba6:	4628      	mov	r0, r5
 8001ba8:	f7ff f8c2 	bl	8000d30 <usbd_ep_write_packet>
 8001bac:	f894 3261 	ldrb.w	r3, [r4, #609]	; 0x261
 8001bb0:	4418      	add	r0, r3
 8001bb2:	f884 0261 	strb.w	r0, [r4, #609]	; 0x261
 8001bb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001bb8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001bba:	2b00      	cmp	r3, #0
 8001bbc:	d0db      	beq.n	8001b76 <msc_data_rx_cb+0xf2>
 8001bbe:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001bc0:	4293      	cmp	r3, r2
 8001bc2:	d1d8      	bne.n	8001b76 <msc_data_rx_cb+0xf2>
 8001bc4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001bc6:	69e2      	ldr	r2, [r4, #28]
 8001bc8:	4905      	ldr	r1, [pc, #20]	; (8001be0 <msc_data_rx_cb+0x15c>)
 8001bca:	4418      	add	r0, r3
 8001bcc:	4790      	blx	r2
 8001bce:	2300      	movs	r3, #0
 8001bd0:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001bd2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001bd4:	2b00      	cmp	r3, #0
 8001bd6:	d0ce      	beq.n	8001b76 <msc_data_rx_cb+0xf2>
 8001bd8:	4798      	blx	r3
 8001bda:	e7cc      	b.n	8001b76 <msc_data_rx_cb+0xf2>
 8001bdc:	200002a8 	.word	0x200002a8
 8001be0:	20000308 	.word	0x20000308

08001be4 <usb_msc_init>:
 8001be4:	b510      	push	{r4, lr}
 8001be6:	4c18      	ldr	r4, [pc, #96]	; (8001c48 <usb_msc_init+0x64>)
 8001be8:	71a3      	strb	r3, [r4, #6]
 8001bea:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8001bee:	71e3      	strb	r3, [r4, #7]
 8001bf0:	9b03      	ldr	r3, [sp, #12]
 8001bf2:	60a3      	str	r3, [r4, #8]
 8001bf4:	9b04      	ldr	r3, [sp, #16]
 8001bf6:	60e3      	str	r3, [r4, #12]
 8001bf8:	9b05      	ldr	r3, [sp, #20]
 8001bfa:	6123      	str	r3, [r4, #16]
 8001bfc:	9b06      	ldr	r3, [sp, #24]
 8001bfe:	7121      	strb	r1, [r4, #4]
 8001c00:	3b01      	subs	r3, #1
 8001c02:	6163      	str	r3, [r4, #20]
 8001c04:	9b07      	ldr	r3, [sp, #28]
 8001c06:	61a3      	str	r3, [r4, #24]
 8001c08:	9b08      	ldr	r3, [sp, #32]
 8001c0a:	7162      	strb	r2, [r4, #5]
 8001c0c:	61e3      	str	r3, [r4, #28]
 8001c0e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001c12:	2300      	movs	r3, #0
 8001c14:	490d      	ldr	r1, [pc, #52]	; (8001c4c <usb_msc_init+0x68>)
 8001c16:	6020      	str	r0, [r4, #0]
 8001c18:	6223      	str	r3, [r4, #32]
 8001c1a:	6263      	str	r3, [r4, #36]	; 0x24
 8001c1c:	6562      	str	r2, [r4, #84]	; 0x54
 8001c1e:	65a3      	str	r3, [r4, #88]	; 0x58
 8001c20:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001c22:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8001c26:	64a3      	str	r3, [r4, #72]	; 0x48
 8001c28:	64e3      	str	r3, [r4, #76]	; 0x4c
 8001c2a:	6523      	str	r3, [r4, #80]	; 0x50
 8001c2c:	f884 3260 	strb.w	r3, [r4, #608]	; 0x260
 8001c30:	f884 3261 	strb.w	r3, [r4, #609]	; 0x261
 8001c34:	f884 3270 	strb.w	r3, [r4, #624]	; 0x270
 8001c38:	f884 3271 	strb.w	r3, [r4, #625]	; 0x271
 8001c3c:	f884 3272 	strb.w	r3, [r4, #626]	; 0x272
 8001c40:	f7ff fab0 	bl	80011a4 <usbd_register_set_config_callback>
 8001c44:	4620      	mov	r0, r4
 8001c46:	bd10      	pop	{r4, pc}
 8001c48:	200002a8 	.word	0x200002a8
 8001c4c:	08001651 	.word	0x08001651

08001c50 <blocking_handler>:
 8001c50:	e7fe      	b.n	8001c50 <blocking_handler>

08001c52 <null_handler>:
 8001c52:	4770      	bx	lr

08001c54 <reset_handler>:
 8001c54:	b538      	push	{r3, r4, r5, lr}
 8001c56:	491b      	ldr	r1, [pc, #108]	; (8001cc4 <reset_handler+0x70>)
 8001c58:	4c1b      	ldr	r4, [pc, #108]	; (8001cc8 <reset_handler+0x74>)
 8001c5a:	481c      	ldr	r0, [pc, #112]	; (8001ccc <reset_handler+0x78>)
 8001c5c:	2200      	movs	r2, #0
 8001c5e:	1853      	adds	r3, r2, r1
 8001c60:	4283      	cmp	r3, r0
 8001c62:	d31b      	bcc.n	8001c9c <reset_handler+0x48>
 8001c64:	4a1a      	ldr	r2, [pc, #104]	; (8001cd0 <reset_handler+0x7c>)
 8001c66:	2100      	movs	r1, #0
 8001c68:	4293      	cmp	r3, r2
 8001c6a:	d31b      	bcc.n	8001ca4 <reset_handler+0x50>
 8001c6c:	4a19      	ldr	r2, [pc, #100]	; (8001cd4 <reset_handler+0x80>)
 8001c6e:	4c1a      	ldr	r4, [pc, #104]	; (8001cd8 <reset_handler+0x84>)
 8001c70:	6813      	ldr	r3, [r2, #0]
 8001c72:	4d1a      	ldr	r5, [pc, #104]	; (8001cdc <reset_handler+0x88>)
 8001c74:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001c78:	6013      	str	r3, [r2, #0]
 8001c7a:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8001c7c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001c80:	6753      	str	r3, [r2, #116]	; 0x74
 8001c82:	42ac      	cmp	r4, r5
 8001c84:	d311      	bcc.n	8001caa <reset_handler+0x56>
 8001c86:	4c16      	ldr	r4, [pc, #88]	; (8001ce0 <reset_handler+0x8c>)
 8001c88:	4d16      	ldr	r5, [pc, #88]	; (8001ce4 <reset_handler+0x90>)
 8001c8a:	42ac      	cmp	r4, r5
 8001c8c:	d311      	bcc.n	8001cb2 <reset_handler+0x5e>
 8001c8e:	f7fe fa95 	bl	80001bc <main>
 8001c92:	4c15      	ldr	r4, [pc, #84]	; (8001ce8 <reset_handler+0x94>)
 8001c94:	4d15      	ldr	r5, [pc, #84]	; (8001cec <reset_handler+0x98>)
 8001c96:	42ac      	cmp	r4, r5
 8001c98:	d30f      	bcc.n	8001cba <reset_handler+0x66>
 8001c9a:	bd38      	pop	{r3, r4, r5, pc}
 8001c9c:	5913      	ldr	r3, [r2, r4]
 8001c9e:	5053      	str	r3, [r2, r1]
 8001ca0:	3204      	adds	r2, #4
 8001ca2:	e7dc      	b.n	8001c5e <reset_handler+0xa>
 8001ca4:	6019      	str	r1, [r3, #0]
 8001ca6:	3304      	adds	r3, #4
 8001ca8:	e7de      	b.n	8001c68 <reset_handler+0x14>
 8001caa:	f854 3b04 	ldr.w	r3, [r4], #4
 8001cae:	4798      	blx	r3
 8001cb0:	e7e7      	b.n	8001c82 <reset_handler+0x2e>
 8001cb2:	f854 3b04 	ldr.w	r3, [r4], #4
 8001cb6:	4798      	blx	r3
 8001cb8:	e7e7      	b.n	8001c8a <reset_handler+0x36>
 8001cba:	f854 3b04 	ldr.w	r3, [r4], #4
 8001cbe:	4798      	blx	r3
 8001cc0:	e7e9      	b.n	8001c96 <reset_handler+0x42>
 8001cc2:	bf00      	nop
 8001cc4:	20000000 	.word	0x20000000
 8001cc8:	08002de0 	.word	0x08002de0
 8001ccc:	20000018 	.word	0x20000018
 8001cd0:	2000051c 	.word	0x2000051c
 8001cd4:	e000ed14 	.word	0xe000ed14
 8001cd8:	08002de0 	.word	0x08002de0
 8001cdc:	08002de0 	.word	0x08002de0
 8001ce0:	08002de0 	.word	0x08002de0
 8001ce4:	08002de0 	.word	0x08002de0
 8001ce8:	08002de0 	.word	0x08002de0
 8001cec:	08002de0 	.word	0x08002de0

08001cf0 <systick_set_reload>:
 8001cf0:	4b02      	ldr	r3, [pc, #8]	; (8001cfc <systick_set_reload+0xc>)
 8001cf2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8001cf6:	6018      	str	r0, [r3, #0]
 8001cf8:	4770      	bx	lr
 8001cfa:	bf00      	nop
 8001cfc:	e000e014 	.word	0xe000e014

08001d00 <systick_set_clocksource>:
 8001d00:	4a04      	ldr	r2, [pc, #16]	; (8001d14 <systick_set_clocksource+0x14>)
 8001d02:	6813      	ldr	r3, [r2, #0]
 8001d04:	f000 0004 	and.w	r0, r0, #4
 8001d08:	f023 0304 	bic.w	r3, r3, #4
 8001d0c:	4303      	orrs	r3, r0
 8001d0e:	6013      	str	r3, [r2, #0]
 8001d10:	4770      	bx	lr
 8001d12:	bf00      	nop
 8001d14:	e000e010 	.word	0xe000e010

08001d18 <systick_counter_enable>:
 8001d18:	4a02      	ldr	r2, [pc, #8]	; (8001d24 <systick_counter_enable+0xc>)
 8001d1a:	6813      	ldr	r3, [r2, #0]
 8001d1c:	f043 0301 	orr.w	r3, r3, #1
 8001d20:	6013      	str	r3, [r2, #0]
 8001d22:	4770      	bx	lr
 8001d24:	e000e010 	.word	0xe000e010

08001d28 <scb_reset_system>:
 8001d28:	4b01      	ldr	r3, [pc, #4]	; (8001d30 <scb_reset_system+0x8>)
 8001d2a:	4a02      	ldr	r2, [pc, #8]	; (8001d34 <scb_reset_system+0xc>)
 8001d2c:	601a      	str	r2, [r3, #0]
 8001d2e:	e7fe      	b.n	8001d2e <scb_reset_system+0x6>
 8001d30:	e000ed0c 	.word	0xe000ed0c
 8001d34:	05fa0004 	.word	0x05fa0004

08001d38 <nvic_enable_irq>:
 8001d38:	4b05      	ldr	r3, [pc, #20]	; (8001d50 <nvic_enable_irq+0x18>)
 8001d3a:	0942      	lsrs	r2, r0, #5
 8001d3c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8001d40:	f000 001f 	and.w	r0, r0, #31
 8001d44:	2201      	movs	r2, #1
 8001d46:	fa02 f000 	lsl.w	r0, r2, r0
 8001d4a:	6018      	str	r0, [r3, #0]
 8001d4c:	4770      	bx	lr
 8001d4e:	bf00      	nop
 8001d50:	e000e100 	.word	0xe000e100

08001d54 <nvic_set_priority>:
 8001d54:	285a      	cmp	r0, #90	; 0x5a
 8001d56:	bf93      	iteet	ls
 8001d58:	f100 4060 	addls.w	r0, r0, #3758096384	; 0xe0000000
 8001d5c:	f000 000f 	andhi.w	r0, r0, #15
 8001d60:	4b03      	ldrhi	r3, [pc, #12]	; (8001d70 <nvic_set_priority+0x1c>)
 8001d62:	f500 4064 	addls.w	r0, r0, #58368	; 0xe400
 8001d66:	bf8c      	ite	hi
 8001d68:	54c1      	strbhi	r1, [r0, r3]
 8001d6a:	7001      	strbls	r1, [r0, #0]
 8001d6c:	4770      	bx	lr
 8001d6e:	bf00      	nop
 8001d70:	e000ed14 	.word	0xe000ed14

08001d74 <flash_wait_for_last_operation>:
 8001d74:	4a02      	ldr	r2, [pc, #8]	; (8001d80 <flash_wait_for_last_operation+0xc>)
 8001d76:	6813      	ldr	r3, [r2, #0]
 8001d78:	03db      	lsls	r3, r3, #15
 8001d7a:	d4fc      	bmi.n	8001d76 <flash_wait_for_last_operation+0x2>
 8001d7c:	4770      	bx	lr
 8001d7e:	bf00      	nop
 8001d80:	40023c0c 	.word	0x40023c0c

08001d84 <flash_set_ws>:
 8001d84:	4a03      	ldr	r2, [pc, #12]	; (8001d94 <flash_set_ws+0x10>)
 8001d86:	6813      	ldr	r3, [r2, #0]
 8001d88:	f023 030f 	bic.w	r3, r3, #15
 8001d8c:	4318      	orrs	r0, r3
 8001d8e:	6010      	str	r0, [r2, #0]
 8001d90:	4770      	bx	lr
 8001d92:	bf00      	nop
 8001d94:	40023c00 	.word	0x40023c00

08001d98 <flash_dcache_enable>:
 8001d98:	4a02      	ldr	r2, [pc, #8]	; (8001da4 <flash_dcache_enable+0xc>)
 8001d9a:	6813      	ldr	r3, [r2, #0]
 8001d9c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001da0:	6013      	str	r3, [r2, #0]
 8001da2:	4770      	bx	lr
 8001da4:	40023c00 	.word	0x40023c00

08001da8 <flash_dcache_disable>:
 8001da8:	4a02      	ldr	r2, [pc, #8]	; (8001db4 <flash_dcache_disable+0xc>)
 8001daa:	6813      	ldr	r3, [r2, #0]
 8001dac:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001db0:	6013      	str	r3, [r2, #0]
 8001db2:	4770      	bx	lr
 8001db4:	40023c00 	.word	0x40023c00

08001db8 <flash_icache_enable>:
 8001db8:	4a02      	ldr	r2, [pc, #8]	; (8001dc4 <flash_icache_enable+0xc>)
 8001dba:	6813      	ldr	r3, [r2, #0]
 8001dbc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001dc0:	6013      	str	r3, [r2, #0]
 8001dc2:	4770      	bx	lr
 8001dc4:	40023c00 	.word	0x40023c00

08001dc8 <flash_icache_disable>:
 8001dc8:	4a02      	ldr	r2, [pc, #8]	; (8001dd4 <flash_icache_disable+0xc>)
 8001dca:	6813      	ldr	r3, [r2, #0]
 8001dcc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001dd0:	6013      	str	r3, [r2, #0]
 8001dd2:	4770      	bx	lr
 8001dd4:	40023c00 	.word	0x40023c00

08001dd8 <pwr_set_vos_scale>:
 8001dd8:	4a04      	ldr	r2, [pc, #16]	; (8001dec <pwr_set_vos_scale+0x14>)
 8001dda:	6813      	ldr	r3, [r2, #0]
 8001ddc:	0380      	lsls	r0, r0, #14
 8001dde:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001de2:	b280      	uxth	r0, r0
 8001de4:	4318      	orrs	r0, r3
 8001de6:	6010      	str	r0, [r2, #0]
 8001de8:	4770      	bx	lr
 8001dea:	bf00      	nop
 8001dec:	40007000 	.word	0x40007000

08001df0 <dwc_set_address>:
 8001df0:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8001df4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001df6:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8001dfa:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8001dfe:	ea43 1101 	orr.w	r1, r3, r1, lsl #4
 8001e02:	f8c2 1800 	str.w	r1, [r2, #2048]	; 0x800
 8001e06:	4770      	bx	lr

08001e08 <dwc_ep_setup>:
 8001e08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e0c:	f011 057f 	ands.w	r5, r1, #127	; 0x7f
 8001e10:	9e08      	ldr	r6, [sp, #32]
 8001e12:	f8d0 e0dc 	ldr.w	lr, [r0, #220]	; 0xdc
 8001e16:	f003 077f 	and.w	r7, r3, #127	; 0x7f
 8001e1a:	d141      	bne.n	8001ea0 <dwc_ep_setup+0x98>
 8001e1c:	2b3f      	cmp	r3, #63	; 0x3f
 8001e1e:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001e22:	d932      	bls.n	8001e8a <dwc_ep_setup+0x82>
 8001e24:	f8c2 5900 	str.w	r5, [r2, #2304]	; 0x900
 8001e28:	f8de 102c 	ldr.w	r1, [lr, #44]	; 0x2c
 8001e2c:	b2ba      	uxth	r2, r7
 8001e2e:	f8c1 2910 	str.w	r2, [r1, #2320]	; 0x910
 8001e32:	f8de 402c 	ldr.w	r4, [lr, #44]	; 0x2c
 8001e36:	f8d4 1900 	ldr.w	r1, [r4, #2304]	; 0x900
 8001e3a:	f041 4108 	orr.w	r1, r1, #2281701376	; 0x88000000
 8001e3e:	f8c4 1900 	str.w	r1, [r4, #2304]	; 0x900
 8001e42:	f8de 102c 	ldr.w	r1, [lr, #44]	; 0x2c
 8001e46:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001e4a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8001e4e:	f8c0 20e8 	str.w	r2, [r0, #232]	; 0xe8
 8001e52:	f8c1 2b10 	str.w	r2, [r1, #2832]	; 0xb10
 8001e56:	f8de 102c 	ldr.w	r1, [lr, #44]	; 0x2c
 8001e5a:	f8d1 2b00 	ldr.w	r2, [r1, #2816]	; 0xb00
 8001e5e:	f042 4208 	orr.w	r2, r2, #2281701376	; 0x88000000
 8001e62:	f8c1 2b00 	str.w	r2, [r1, #2816]	; 0xb00
 8001e66:	0899      	lsrs	r1, r3, #2
 8001e68:	f8be 3032 	ldrh.w	r3, [lr, #50]	; 0x32
 8001e6c:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001e70:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8001e74:	6293      	str	r3, [r2, #40]	; 0x28
 8001e76:	f8b0 30e0 	ldrh.w	r3, [r0, #224]	; 0xe0
 8001e7a:	4419      	add	r1, r3
 8001e7c:	b289      	uxth	r1, r1
 8001e7e:	f8a0 10e0 	strh.w	r1, [r0, #224]	; 0xe0
 8001e82:	f8a0 10e2 	strh.w	r1, [r0, #226]	; 0xe2
 8001e86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e8a:	2b1f      	cmp	r3, #31
 8001e8c:	d903      	bls.n	8001e96 <dwc_ep_setup+0x8e>
 8001e8e:	2101      	movs	r1, #1
 8001e90:	f8c2 1900 	str.w	r1, [r2, #2304]	; 0x900
 8001e94:	e7c8      	b.n	8001e28 <dwc_ep_setup+0x20>
 8001e96:	2b0f      	cmp	r3, #15
 8001e98:	bf8c      	ite	hi
 8001e9a:	2102      	movhi	r1, #2
 8001e9c:	2103      	movls	r1, #3
 8001e9e:	e7f7      	b.n	8001e90 <dwc_ep_setup+0x88>
 8001ea0:	f011 0f80 	tst.w	r1, #128	; 0x80
 8001ea4:	b22c      	sxth	r4, r5
 8001ea6:	ea4f 4182 	mov.w	r1, r2, lsl #18
 8001eaa:	d030      	beq.n	8001f0e <dwc_ep_setup+0x106>
 8001eac:	f8b0 90e0 	ldrh.w	r9, [r0, #224]	; 0xe0
 8001eb0:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001eb4:	ea4f 0c93 	mov.w	ip, r3, lsr #2
 8001eb8:	f105 0840 	add.w	r8, r5, #64	; 0x40
 8001ebc:	ea49 4a0c 	orr.w	sl, r9, ip, lsl #16
 8001ec0:	f842 a028 	str.w	sl, [r2, r8, lsl #2]
 8001ec4:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001ec8:	0164      	lsls	r4, r4, #5
 8001eca:	f502 6211 	add.w	r2, r2, #2320	; 0x910
 8001ece:	b2bf      	uxth	r7, r7
 8001ed0:	44cc      	add	ip, r9
 8001ed2:	f8a0 c0e0 	strh.w	ip, [r0, #224]	; 0xe0
 8001ed6:	5117      	str	r7, [r2, r4]
 8001ed8:	f041 4118 	orr.w	r1, r1, #2550136832	; 0x98000000
 8001edc:	f504 6410 	add.w	r4, r4, #2304	; 0x900
 8001ee0:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001ee4:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8001ee8:	58a7      	ldr	r7, [r4, r2]
 8001eea:	4319      	orrs	r1, r3
 8001eec:	ea41 5185 	orr.w	r1, r1, r5, lsl #22
 8001ef0:	4339      	orrs	r1, r7
 8001ef2:	50a1      	str	r1, [r4, r2]
 8001ef4:	b33e      	cbz	r6, 8001f46 <dwc_ep_setup+0x13e>
 8001ef6:	230c      	movs	r3, #12
 8001ef8:	fb03 0005 	mla	r0, r3, r5, r0
 8001efc:	6686      	str	r6, [r0, #104]	; 0x68
 8001efe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f02:	230c      	movs	r3, #12
 8001f04:	fb03 0005 	mla	r0, r3, r5, r0
 8001f08:	66c6      	str	r6, [r0, #108]	; 0x6c
 8001f0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f0e:	f105 023a 	add.w	r2, r5, #58	; 0x3a
 8001f12:	f447 2700 	orr.w	r7, r7, #524288	; 0x80000
 8001f16:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
 8001f1a:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001f1e:	0164      	lsls	r4, r4, #5
 8001f20:	f502 6231 	add.w	r2, r2, #2832	; 0xb10
 8001f24:	5117      	str	r7, [r2, r4]
 8001f26:	f504 6430 	add.w	r4, r4, #2816	; 0xb00
 8001f2a:	f8de 702c 	ldr.w	r7, [lr, #44]	; 0x2c
 8001f2e:	f041 4214 	orr.w	r2, r1, #2483027968	; 0x94000000
 8001f32:	f854 e007 	ldr.w	lr, [r4, r7]
 8001f36:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001f3a:	431a      	orrs	r2, r3
 8001f3c:	ea42 020e 	orr.w	r2, r2, lr
 8001f40:	51e2      	str	r2, [r4, r7]
 8001f42:	2e00      	cmp	r6, #0
 8001f44:	d1dd      	bne.n	8001f02 <dwc_ep_setup+0xfa>
 8001f46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001f4a <dwc_endpoints_reset>:
 8001f4a:	f8b0 30e2 	ldrh.w	r3, [r0, #226]	; 0xe2
 8001f4e:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 8001f52:	b510      	push	{r4, lr}
 8001f54:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
 8001f58:	f44f 6332 	mov.w	r3, #2848	; 0xb20
 8001f5c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8001f5e:	5858      	ldr	r0, [r3, r1]
 8001f60:	2800      	cmp	r0, #0
 8001f62:	bfbe      	ittt	lt
 8001f64:	5858      	ldrlt	r0, [r3, r1]
 8001f66:	f040 4080 	orrlt.w	r0, r0, #1073741824	; 0x40000000
 8001f6a:	5058      	strlt	r0, [r3, r1]
 8001f6c:	f5a3 7000 	sub.w	r0, r3, #512	; 0x200
 8001f70:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8001f72:	5844      	ldr	r4, [r0, r1]
 8001f74:	2c00      	cmp	r4, #0
 8001f76:	bfb8      	it	lt
 8001f78:	5844      	ldrlt	r4, [r0, r1]
 8001f7a:	f103 0320 	add.w	r3, r3, #32
 8001f7e:	bfbc      	itt	lt
 8001f80:	f044 4480 	orrlt.w	r4, r4, #1073741824	; 0x40000000
 8001f84:	5044      	strlt	r4, [r0, r1]
 8001f86:	f5b3 6f38 	cmp.w	r3, #2944	; 0xb80
 8001f8a:	d1e7      	bne.n	8001f5c <dwc_endpoints_reset+0x12>
 8001f8c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8001f8e:	f44f 6286 	mov.w	r2, #1072	; 0x430
 8001f92:	611a      	str	r2, [r3, #16]
 8001f94:	bd10      	pop	{r4, pc}

08001f96 <dwc_ep_stall_set>:
 8001f96:	b510      	push	{r4, lr}
 8001f98:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8001f9c:	b939      	cbnz	r1, 8001fae <dwc_ep_stall_set+0x18>
 8001f9e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8001fa0:	f8d4 0900 	ldr.w	r0, [r4, #2304]	; 0x900
 8001fa4:	b18a      	cbz	r2, 8001fca <dwc_ep_stall_set+0x34>
 8001fa6:	f440 1000 	orr.w	r0, r0, #2097152	; 0x200000
 8001faa:	f8c4 0900 	str.w	r0, [r4, #2304]	; 0x900
 8001fae:	0608      	lsls	r0, r1, #24
 8001fb0:	bf46      	itte	mi
 8001fb2:	f001 017f 	andmi.w	r1, r1, #127	; 0x7f
 8001fb6:	3148      	addmi	r1, #72	; 0x48
 8001fb8:	3158      	addpl	r1, #88	; 0x58
 8001fba:	0149      	lsls	r1, r1, #5
 8001fbc:	b142      	cbz	r2, 8001fd0 <dwc_ep_stall_set+0x3a>
 8001fbe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001fc0:	588b      	ldr	r3, [r1, r2]
 8001fc2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001fc6:	508b      	str	r3, [r1, r2]
 8001fc8:	bd10      	pop	{r4, pc}
 8001fca:	f420 1000 	bic.w	r0, r0, #2097152	; 0x200000
 8001fce:	e7ec      	b.n	8001faa <dwc_ep_stall_set+0x14>
 8001fd0:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001fd2:	580a      	ldr	r2, [r1, r0]
 8001fd4:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8001fd8:	500a      	str	r2, [r1, r0]
 8001fda:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001fdc:	588b      	ldr	r3, [r1, r2]
 8001fde:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001fe2:	e7f0      	b.n	8001fc6 <dwc_ep_stall_set+0x30>

08001fe4 <dwc_ep_stall_get>:
 8001fe4:	f011 0f80 	tst.w	r1, #128	; 0x80
 8001fe8:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8001fec:	bf1a      	itte	ne
 8001fee:	f001 017f 	andne.w	r1, r1, #127	; 0x7f
 8001ff2:	3148      	addne	r1, #72	; 0x48
 8001ff4:	3158      	addeq	r1, #88	; 0x58
 8001ff6:	0149      	lsls	r1, r1, #5
 8001ff8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001ffa:	58c8      	ldr	r0, [r1, r3]
 8001ffc:	f3c0 5040 	ubfx	r0, r0, #21, #1
 8002000:	4770      	bx	lr

08002002 <dwc_ep_nak_set>:
 8002002:	060b      	lsls	r3, r1, #24
 8002004:	d40c      	bmi.n	8002020 <dwc_ep_nak_set+0x1e>
 8002006:	1843      	adds	r3, r0, r1
 8002008:	3158      	adds	r1, #88	; 0x58
 800200a:	f883 20e4 	strb.w	r2, [r3, #228]	; 0xe4
 800200e:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8002012:	0149      	lsls	r1, r1, #5
 8002014:	b12a      	cbz	r2, 8002022 <dwc_ep_nak_set+0x20>
 8002016:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002018:	588b      	ldr	r3, [r1, r2]
 800201a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800201e:	508b      	str	r3, [r1, r2]
 8002020:	4770      	bx	lr
 8002022:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002024:	588b      	ldr	r3, [r1, r2]
 8002026:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800202a:	e7f8      	b.n	800201e <dwc_ep_nak_set+0x1c>

0800202c <dwc_ep_write_packet>:
 800202c:	b570      	push	{r4, r5, r6, lr}
 800202e:	f8d0 50dc 	ldr.w	r5, [r0, #220]	; 0xdc
 8002032:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8002034:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8002038:	014c      	lsls	r4, r1, #5
 800203a:	f500 6011 	add.w	r0, r0, #2320	; 0x910
 800203e:	5906      	ldr	r6, [r0, r4]
 8002040:	0336      	lsls	r6, r6, #12
 8002042:	d417      	bmi.n	8002074 <dwc_ep_write_packet+0x48>
 8002044:	f443 2600 	orr.w	r6, r3, #524288	; 0x80000
 8002048:	5106      	str	r6, [r0, r4]
 800204a:	f504 6410 	add.w	r4, r4, #2304	; 0x900
 800204e:	6aee      	ldr	r6, [r5, #44]	; 0x2c
 8002050:	59a0      	ldr	r0, [r4, r6]
 8002052:	3101      	adds	r1, #1
 8002054:	f040 4004 	orr.w	r0, r0, #2214592512	; 0x84000000
 8002058:	51a0      	str	r0, [r4, r6]
 800205a:	0309      	lsls	r1, r1, #12
 800205c:	4614      	mov	r4, r2
 800205e:	1b18      	subs	r0, r3, r4
 8002060:	4410      	add	r0, r2
 8002062:	2800      	cmp	r0, #0
 8002064:	dc01      	bgt.n	800206a <dwc_ep_write_packet+0x3e>
 8002066:	4618      	mov	r0, r3
 8002068:	bd70      	pop	{r4, r5, r6, pc}
 800206a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800206c:	f854 6b04 	ldr.w	r6, [r4], #4
 8002070:	500e      	str	r6, [r1, r0]
 8002072:	e7f4      	b.n	800205e <dwc_ep_write_packet+0x32>
 8002074:	2300      	movs	r3, #0
 8002076:	e7f6      	b.n	8002066 <dwc_ep_write_packet+0x3a>

08002078 <dwc_ep_read_packet>:
 8002078:	b513      	push	{r0, r1, r4, lr}
 800207a:	f8b0 40f8 	ldrh.w	r4, [r0, #248]	; 0xf8
 800207e:	429c      	cmp	r4, r3
 8002080:	4601      	mov	r1, r0
 8002082:	bf28      	it	cs
 8002084:	461c      	movcs	r4, r3
 8002086:	4610      	mov	r0, r2
 8002088:	1a23      	subs	r3, r4, r0
 800208a:	4413      	add	r3, r2
 800208c:	2b03      	cmp	r3, #3
 800208e:	dc1a      	bgt.n	80020c6 <dwc_ep_read_packet+0x4e>
 8002090:	f024 0003 	bic.w	r0, r4, #3
 8002094:	4410      	add	r0, r2
 8002096:	f014 0203 	ands.w	r2, r4, #3
 800209a:	d011      	beq.n	80020c0 <dwc_ep_read_packet+0x48>
 800209c:	f8d1 30dc 	ldr.w	r3, [r1, #220]	; 0xdc
 80020a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80020a2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	9301      	str	r3, [sp, #4]
 80020aa:	f8b1 30f8 	ldrh.w	r3, [r1, #248]	; 0xf8
 80020ae:	2b03      	cmp	r3, #3
 80020b0:	bf94      	ite	ls
 80020b2:	2300      	movls	r3, #0
 80020b4:	3b04      	subhi	r3, #4
 80020b6:	f8a1 30f8 	strh.w	r3, [r1, #248]	; 0xf8
 80020ba:	a901      	add	r1, sp, #4
 80020bc:	f000 f91a 	bl	80022f4 <memcpy>
 80020c0:	4620      	mov	r0, r4
 80020c2:	b002      	add	sp, #8
 80020c4:	bd10      	pop	{r4, pc}
 80020c6:	f8d1 30dc 	ldr.w	r3, [r1, #220]	; 0xdc
 80020ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80020cc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	f840 3b04 	str.w	r3, [r0], #4
 80020d6:	f8b1 30f8 	ldrh.w	r3, [r1, #248]	; 0xf8
 80020da:	3b04      	subs	r3, #4
 80020dc:	f8a1 30f8 	strh.w	r3, [r1, #248]	; 0xf8
 80020e0:	e7d2      	b.n	8002088 <dwc_ep_read_packet+0x10>

080020e2 <dwc_poll>:
 80020e2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80020e6:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 80020ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80020ec:	6956      	ldr	r6, [r2, #20]
 80020ee:	f416 5500 	ands.w	r5, r6, #8192	; 0x2000
 80020f2:	4604      	mov	r4, r0
 80020f4:	d009      	beq.n	800210a <dwc_poll+0x28>
 80020f6:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 80020f8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80020fc:	6151      	str	r1, [r2, #20]
 80020fe:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
 8002102:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002106:	f7fe bdf9 	b.w	8000cfc <_usbd_reset>
 800210a:	f04f 080c 	mov.w	r8, #12
 800210e:	f04f 0901 	mov.w	r9, #1
 8002112:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8002116:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002118:	016f      	lsls	r7, r5, #5
 800211a:	f603 1308 	addw	r3, r3, #2312	; 0x908
 800211e:	59db      	ldr	r3, [r3, r7]
 8002120:	07d9      	lsls	r1, r3, #31
 8002122:	d50d      	bpl.n	8002140 <dwc_poll+0x5e>
 8002124:	fb08 4305 	mla	r3, r8, r5, r4
 8002128:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800212a:	b113      	cbz	r3, 8002132 <dwc_poll+0x50>
 800212c:	b2e9      	uxtb	r1, r5
 800212e:	4620      	mov	r0, r4
 8002130:	4798      	blx	r3
 8002132:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8002136:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002138:	f603 1308 	addw	r3, r3, #2312	; 0x908
 800213c:	f843 9007 	str.w	r9, [r3, r7]
 8002140:	3501      	adds	r5, #1
 8002142:	2d04      	cmp	r5, #4
 8002144:	d1e5      	bne.n	8002112 <dwc_poll+0x30>
 8002146:	06f2      	lsls	r2, r6, #27
 8002148:	d555      	bpl.n	80021f6 <dwc_poll+0x114>
 800214a:	f8d4 10dc 	ldr.w	r1, [r4, #220]	; 0xdc
 800214e:	6ac8      	ldr	r0, [r1, #44]	; 0x2c
 8002150:	6a02      	ldr	r2, [r0, #32]
 8002152:	f402 13f0 	and.w	r3, r2, #1966080	; 0x1e0000
 8002156:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 800215a:	f002 050f 	and.w	r5, r2, #15
 800215e:	d122      	bne.n	80021a6 <dwc_poll+0xc4>
 8002160:	230c      	movs	r3, #12
 8002162:	fb03 4305 	mla	r3, r3, r5, r4
 8002166:	4629      	mov	r1, r5
 8002168:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800216a:	4620      	mov	r0, r4
 800216c:	4798      	blx	r3
 800216e:	f8d4 10dc 	ldr.w	r1, [r4, #220]	; 0xdc
 8002172:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8002174:	f105 003a 	add.w	r0, r5, #58	; 0x3a
 8002178:	016b      	lsls	r3, r5, #5
 800217a:	f502 6231 	add.w	r2, r2, #2832	; 0xb10
 800217e:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8002182:	50d0      	str	r0, [r2, r3]
 8002184:	442c      	add	r4, r5
 8002186:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800218a:	f894 20e4 	ldrb.w	r2, [r4, #228]	; 0xe4
 800218e:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8002190:	2a00      	cmp	r2, #0
 8002192:	5858      	ldr	r0, [r3, r1]
 8002194:	bf0c      	ite	eq
 8002196:	f04f 4204 	moveq.w	r2, #2214592512	; 0x84000000
 800219a:	f04f 4208 	movne.w	r2, #2281701376	; 0x88000000
 800219e:	4302      	orrs	r2, r0
 80021a0:	505a      	str	r2, [r3, r1]
 80021a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80021a6:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 80021aa:	d0e0      	beq.n	800216e <dwc_poll+0x8c>
 80021ac:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80021b0:	d101      	bne.n	80021b6 <dwc_poll+0xd4>
 80021b2:	2301      	movs	r3, #1
 80021b4:	e00a      	b.n	80021cc <dwc_poll+0xea>
 80021b6:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 80021ba:	f040 808a 	bne.w	80022d2 <dwc_poll+0x1f0>
 80021be:	016f      	lsls	r7, r5, #5
 80021c0:	f500 6311 	add.w	r3, r0, #2320	; 0x910
 80021c4:	59db      	ldr	r3, [r3, r7]
 80021c6:	031b      	lsls	r3, r3, #12
 80021c8:	d441      	bmi.n	800224e <dwc_poll+0x16c>
 80021ca:	2302      	movs	r3, #2
 80021cc:	f3c2 120a 	ubfx	r2, r2, #4, #11
 80021d0:	2b02      	cmp	r3, #2
 80021d2:	f8a4 20f8 	strh.w	r2, [r4, #248]	; 0xf8
 80021d6:	d165      	bne.n	80022a4 <dwc_poll+0x1c2>
 80021d8:	2308      	movs	r3, #8
 80021da:	f104 0230 	add.w	r2, r4, #48	; 0x30
 80021de:	4629      	mov	r1, r5
 80021e0:	4620      	mov	r0, r4
 80021e2:	f7ff ff49 	bl	8002078 <dwc_ep_read_packet>
 80021e6:	f8b4 10f8 	ldrh.w	r1, [r4, #248]	; 0xf8
 80021ea:	2300      	movs	r3, #0
 80021ec:	428b      	cmp	r3, r1
 80021ee:	db63      	blt.n	80022b8 <dwc_poll+0x1d6>
 80021f0:	2300      	movs	r3, #0
 80021f2:	f8a4 30f8 	strh.w	r3, [r4, #248]	; 0xf8
 80021f6:	0532      	lsls	r2, r6, #20
 80021f8:	d508      	bpl.n	800220c <dwc_poll+0x12a>
 80021fa:	6a23      	ldr	r3, [r4, #32]
 80021fc:	b103      	cbz	r3, 8002200 <dwc_poll+0x11e>
 80021fe:	4798      	blx	r3
 8002200:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8002204:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002206:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800220a:	615a      	str	r2, [r3, #20]
 800220c:	2e00      	cmp	r6, #0
 800220e:	da08      	bge.n	8002222 <dwc_poll+0x140>
 8002210:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002212:	b103      	cbz	r3, 8002216 <dwc_poll+0x134>
 8002214:	4798      	blx	r3
 8002216:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800221a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800221c:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8002220:	615a      	str	r2, [r3, #20]
 8002222:	0733      	lsls	r3, r6, #28
 8002224:	d507      	bpl.n	8002236 <dwc_poll+0x154>
 8002226:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8002228:	b103      	cbz	r3, 800222c <dwc_poll+0x14a>
 800222a:	4798      	blx	r3
 800222c:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8002230:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002232:	2208      	movs	r2, #8
 8002234:	615a      	str	r2, [r3, #20]
 8002236:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8002238:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800223c:	2a00      	cmp	r2, #0
 800223e:	d043      	beq.n	80022c8 <dwc_poll+0x1e6>
 8002240:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002242:	6993      	ldr	r3, [r2, #24]
 8002244:	f043 0308 	orr.w	r3, r3, #8
 8002248:	6193      	str	r3, [r2, #24]
 800224a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800224e:	f507 6310 	add.w	r3, r7, #2304	; 0x900
 8002252:	f850 e003 	ldr.w	lr, [r0, r3]
 8002256:	f04e 6e00 	orr.w	lr, lr, #134217728	; 0x8000000
 800225a:	f840 e003 	str.w	lr, [r0, r3]
 800225e:	6ac8      	ldr	r0, [r1, #44]	; 0x2c
 8002260:	f600 1e08 	addw	lr, r0, #2312	; 0x908
 8002264:	44be      	add	lr, r7
 8002266:	f8de c000 	ldr.w	ip, [lr]
 800226a:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800226e:	d0fa      	beq.n	8002266 <dwc_poll+0x184>
 8002270:	581b      	ldr	r3, [r3, r0]
 8002272:	0d9b      	lsrs	r3, r3, #22
 8002274:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8002278:	f1bc 0f00 	cmp.w	ip, #0
 800227c:	f100 0e10 	add.w	lr, r0, #16
 8002280:	daf8      	bge.n	8002274 <dwc_poll+0x192>
 8002282:	019b      	lsls	r3, r3, #6
 8002284:	f403 7370 	and.w	r3, r3, #960	; 0x3c0
 8002288:	f043 0320 	orr.w	r3, r3, #32
 800228c:	6103      	str	r3, [r0, #16]
 800228e:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8002290:	f503 6311 	add.w	r3, r3, #2320	; 0x910
 8002294:	2000      	movs	r0, #0
 8002296:	51d8      	str	r0, [r3, r7]
 8002298:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800229a:	3310      	adds	r3, #16
 800229c:	6819      	ldr	r1, [r3, #0]
 800229e:	0689      	lsls	r1, r1, #26
 80022a0:	d4fc      	bmi.n	800229c <dwc_poll+0x1ba>
 80022a2:	e792      	b.n	80021ca <dwc_poll+0xe8>
 80022a4:	230c      	movs	r3, #12
 80022a6:	fb03 4305 	mla	r3, r3, r5, r4
 80022aa:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80022ac:	2b00      	cmp	r3, #0
 80022ae:	d09a      	beq.n	80021e6 <dwc_poll+0x104>
 80022b0:	4629      	mov	r1, r5
 80022b2:	4620      	mov	r0, r4
 80022b4:	4798      	blx	r3
 80022b6:	e796      	b.n	80021e6 <dwc_poll+0x104>
 80022b8:	f8d4 20dc 	ldr.w	r2, [r4, #220]	; 0xdc
 80022bc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80022be:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80022c2:	3304      	adds	r3, #4
 80022c4:	6812      	ldr	r2, [r2, #0]
 80022c6:	e791      	b.n	80021ec <dwc_poll+0x10a>
 80022c8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80022ca:	6993      	ldr	r3, [r2, #24]
 80022cc:	f023 0308 	bic.w	r3, r3, #8
 80022d0:	e7ba      	b.n	8002248 <dwc_poll+0x166>
 80022d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080022d6 <dwc_disconnect>:
 80022d6:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 80022da:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80022dc:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 80022e0:	b121      	cbz	r1, 80022ec <dwc_disconnect+0x16>
 80022e2:	f043 0302 	orr.w	r3, r3, #2
 80022e6:	f8c2 3804 	str.w	r3, [r2, #2052]	; 0x804
 80022ea:	4770      	bx	lr
 80022ec:	f023 0302 	bic.w	r3, r3, #2
 80022f0:	e7f9      	b.n	80022e6 <dwc_disconnect+0x10>
	...

080022f4 <memcpy>:
 80022f4:	4684      	mov	ip, r0
 80022f6:	ea41 0300 	orr.w	r3, r1, r0
 80022fa:	f013 0303 	ands.w	r3, r3, #3
 80022fe:	d16d      	bne.n	80023dc <memcpy+0xe8>
 8002300:	3a40      	subs	r2, #64	; 0x40
 8002302:	d341      	bcc.n	8002388 <memcpy+0x94>
 8002304:	f851 3b04 	ldr.w	r3, [r1], #4
 8002308:	f840 3b04 	str.w	r3, [r0], #4
 800230c:	f851 3b04 	ldr.w	r3, [r1], #4
 8002310:	f840 3b04 	str.w	r3, [r0], #4
 8002314:	f851 3b04 	ldr.w	r3, [r1], #4
 8002318:	f840 3b04 	str.w	r3, [r0], #4
 800231c:	f851 3b04 	ldr.w	r3, [r1], #4
 8002320:	f840 3b04 	str.w	r3, [r0], #4
 8002324:	f851 3b04 	ldr.w	r3, [r1], #4
 8002328:	f840 3b04 	str.w	r3, [r0], #4
 800232c:	f851 3b04 	ldr.w	r3, [r1], #4
 8002330:	f840 3b04 	str.w	r3, [r0], #4
 8002334:	f851 3b04 	ldr.w	r3, [r1], #4
 8002338:	f840 3b04 	str.w	r3, [r0], #4
 800233c:	f851 3b04 	ldr.w	r3, [r1], #4
 8002340:	f840 3b04 	str.w	r3, [r0], #4
 8002344:	f851 3b04 	ldr.w	r3, [r1], #4
 8002348:	f840 3b04 	str.w	r3, [r0], #4
 800234c:	f851 3b04 	ldr.w	r3, [r1], #4
 8002350:	f840 3b04 	str.w	r3, [r0], #4
 8002354:	f851 3b04 	ldr.w	r3, [r1], #4
 8002358:	f840 3b04 	str.w	r3, [r0], #4
 800235c:	f851 3b04 	ldr.w	r3, [r1], #4
 8002360:	f840 3b04 	str.w	r3, [r0], #4
 8002364:	f851 3b04 	ldr.w	r3, [r1], #4
 8002368:	f840 3b04 	str.w	r3, [r0], #4
 800236c:	f851 3b04 	ldr.w	r3, [r1], #4
 8002370:	f840 3b04 	str.w	r3, [r0], #4
 8002374:	f851 3b04 	ldr.w	r3, [r1], #4
 8002378:	f840 3b04 	str.w	r3, [r0], #4
 800237c:	f851 3b04 	ldr.w	r3, [r1], #4
 8002380:	f840 3b04 	str.w	r3, [r0], #4
 8002384:	3a40      	subs	r2, #64	; 0x40
 8002386:	d2bd      	bcs.n	8002304 <memcpy+0x10>
 8002388:	3230      	adds	r2, #48	; 0x30
 800238a:	d311      	bcc.n	80023b0 <memcpy+0xbc>
 800238c:	f851 3b04 	ldr.w	r3, [r1], #4
 8002390:	f840 3b04 	str.w	r3, [r0], #4
 8002394:	f851 3b04 	ldr.w	r3, [r1], #4
 8002398:	f840 3b04 	str.w	r3, [r0], #4
 800239c:	f851 3b04 	ldr.w	r3, [r1], #4
 80023a0:	f840 3b04 	str.w	r3, [r0], #4
 80023a4:	f851 3b04 	ldr.w	r3, [r1], #4
 80023a8:	f840 3b04 	str.w	r3, [r0], #4
 80023ac:	3a10      	subs	r2, #16
 80023ae:	d2ed      	bcs.n	800238c <memcpy+0x98>
 80023b0:	320c      	adds	r2, #12
 80023b2:	d305      	bcc.n	80023c0 <memcpy+0xcc>
 80023b4:	f851 3b04 	ldr.w	r3, [r1], #4
 80023b8:	f840 3b04 	str.w	r3, [r0], #4
 80023bc:	3a04      	subs	r2, #4
 80023be:	d2f9      	bcs.n	80023b4 <memcpy+0xc0>
 80023c0:	3204      	adds	r2, #4
 80023c2:	d008      	beq.n	80023d6 <memcpy+0xe2>
 80023c4:	07d2      	lsls	r2, r2, #31
 80023c6:	bf1c      	itt	ne
 80023c8:	f811 3b01 	ldrbne.w	r3, [r1], #1
 80023cc:	f800 3b01 	strbne.w	r3, [r0], #1
 80023d0:	d301      	bcc.n	80023d6 <memcpy+0xe2>
 80023d2:	880b      	ldrh	r3, [r1, #0]
 80023d4:	8003      	strh	r3, [r0, #0]
 80023d6:	4660      	mov	r0, ip
 80023d8:	4770      	bx	lr
 80023da:	bf00      	nop
 80023dc:	2a08      	cmp	r2, #8
 80023de:	d313      	bcc.n	8002408 <memcpy+0x114>
 80023e0:	078b      	lsls	r3, r1, #30
 80023e2:	d08d      	beq.n	8002300 <memcpy+0xc>
 80023e4:	f010 0303 	ands.w	r3, r0, #3
 80023e8:	d08a      	beq.n	8002300 <memcpy+0xc>
 80023ea:	f1c3 0304 	rsb	r3, r3, #4
 80023ee:	1ad2      	subs	r2, r2, r3
 80023f0:	07db      	lsls	r3, r3, #31
 80023f2:	bf1c      	itt	ne
 80023f4:	f811 3b01 	ldrbne.w	r3, [r1], #1
 80023f8:	f800 3b01 	strbne.w	r3, [r0], #1
 80023fc:	d380      	bcc.n	8002300 <memcpy+0xc>
 80023fe:	f831 3b02 	ldrh.w	r3, [r1], #2
 8002402:	f820 3b02 	strh.w	r3, [r0], #2
 8002406:	e77b      	b.n	8002300 <memcpy+0xc>
 8002408:	3a04      	subs	r2, #4
 800240a:	d3d9      	bcc.n	80023c0 <memcpy+0xcc>
 800240c:	3a01      	subs	r2, #1
 800240e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002412:	f800 3b01 	strb.w	r3, [r0], #1
 8002416:	d2f9      	bcs.n	800240c <memcpy+0x118>
 8002418:	780b      	ldrb	r3, [r1, #0]
 800241a:	7003      	strb	r3, [r0, #0]
 800241c:	784b      	ldrb	r3, [r1, #1]
 800241e:	7043      	strb	r3, [r0, #1]
 8002420:	788b      	ldrb	r3, [r1, #2]
 8002422:	7083      	strb	r3, [r0, #2]
 8002424:	4660      	mov	r0, ip
 8002426:	4770      	bx	lr

08002428 <memset>:
 8002428:	b470      	push	{r4, r5, r6}
 800242a:	0786      	lsls	r6, r0, #30
 800242c:	d046      	beq.n	80024bc <memset+0x94>
 800242e:	1e54      	subs	r4, r2, #1
 8002430:	2a00      	cmp	r2, #0
 8002432:	d041      	beq.n	80024b8 <memset+0x90>
 8002434:	b2ca      	uxtb	r2, r1
 8002436:	4603      	mov	r3, r0
 8002438:	e002      	b.n	8002440 <memset+0x18>
 800243a:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
 800243e:	d33b      	bcc.n	80024b8 <memset+0x90>
 8002440:	f803 2b01 	strb.w	r2, [r3], #1
 8002444:	079d      	lsls	r5, r3, #30
 8002446:	d1f8      	bne.n	800243a <memset+0x12>
 8002448:	2c03      	cmp	r4, #3
 800244a:	d92e      	bls.n	80024aa <memset+0x82>
 800244c:	b2cd      	uxtb	r5, r1
 800244e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 8002452:	2c0f      	cmp	r4, #15
 8002454:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 8002458:	d919      	bls.n	800248e <memset+0x66>
 800245a:	f103 0210 	add.w	r2, r3, #16
 800245e:	4626      	mov	r6, r4
 8002460:	3e10      	subs	r6, #16
 8002462:	2e0f      	cmp	r6, #15
 8002464:	f842 5c10 	str.w	r5, [r2, #-16]
 8002468:	f842 5c0c 	str.w	r5, [r2, #-12]
 800246c:	f842 5c08 	str.w	r5, [r2, #-8]
 8002470:	f842 5c04 	str.w	r5, [r2, #-4]
 8002474:	f102 0210 	add.w	r2, r2, #16
 8002478:	d8f2      	bhi.n	8002460 <memset+0x38>
 800247a:	f1a4 0210 	sub.w	r2, r4, #16
 800247e:	f022 020f 	bic.w	r2, r2, #15
 8002482:	f004 040f 	and.w	r4, r4, #15
 8002486:	3210      	adds	r2, #16
 8002488:	2c03      	cmp	r4, #3
 800248a:	4413      	add	r3, r2
 800248c:	d90d      	bls.n	80024aa <memset+0x82>
 800248e:	461e      	mov	r6, r3
 8002490:	4622      	mov	r2, r4
 8002492:	3a04      	subs	r2, #4
 8002494:	2a03      	cmp	r2, #3
 8002496:	f846 5b04 	str.w	r5, [r6], #4
 800249a:	d8fa      	bhi.n	8002492 <memset+0x6a>
 800249c:	1f22      	subs	r2, r4, #4
 800249e:	f022 0203 	bic.w	r2, r2, #3
 80024a2:	3204      	adds	r2, #4
 80024a4:	4413      	add	r3, r2
 80024a6:	f004 0403 	and.w	r4, r4, #3
 80024aa:	b12c      	cbz	r4, 80024b8 <memset+0x90>
 80024ac:	b2c9      	uxtb	r1, r1
 80024ae:	441c      	add	r4, r3
 80024b0:	f803 1b01 	strb.w	r1, [r3], #1
 80024b4:	429c      	cmp	r4, r3
 80024b6:	d1fb      	bne.n	80024b0 <memset+0x88>
 80024b8:	bc70      	pop	{r4, r5, r6}
 80024ba:	4770      	bx	lr
 80024bc:	4614      	mov	r4, r2
 80024be:	4603      	mov	r3, r0
 80024c0:	e7c2      	b.n	8002448 <memset+0x20>
 80024c2:	bf00      	nop
	...

08002500 <strlen>:
 8002500:	f890 f000 	pld	[r0]
 8002504:	e96d 4502 	strd	r4, r5, [sp, #-8]!
 8002508:	f020 0107 	bic.w	r1, r0, #7
 800250c:	f06f 0c00 	mvn.w	ip, #0
 8002510:	f010 0407 	ands.w	r4, r0, #7
 8002514:	f891 f020 	pld	[r1, #32]
 8002518:	f040 8049 	bne.w	80025ae <strlen+0xae>
 800251c:	f04f 0400 	mov.w	r4, #0
 8002520:	f06f 0007 	mvn.w	r0, #7
 8002524:	e9d1 2300 	ldrd	r2, r3, [r1]
 8002528:	f891 f040 	pld	[r1, #64]	; 0x40
 800252c:	f100 0008 	add.w	r0, r0, #8
 8002530:	fa82 f24c 	uadd8	r2, r2, ip
 8002534:	faa4 f28c 	sel	r2, r4, ip
 8002538:	fa83 f34c 	uadd8	r3, r3, ip
 800253c:	faa2 f38c 	sel	r3, r2, ip
 8002540:	bb4b      	cbnz	r3, 8002596 <strlen+0x96>
 8002542:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 8002546:	fa82 f24c 	uadd8	r2, r2, ip
 800254a:	f100 0008 	add.w	r0, r0, #8
 800254e:	faa4 f28c 	sel	r2, r4, ip
 8002552:	fa83 f34c 	uadd8	r3, r3, ip
 8002556:	faa2 f38c 	sel	r3, r2, ip
 800255a:	b9e3      	cbnz	r3, 8002596 <strlen+0x96>
 800255c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
 8002560:	fa82 f24c 	uadd8	r2, r2, ip
 8002564:	f100 0008 	add.w	r0, r0, #8
 8002568:	faa4 f28c 	sel	r2, r4, ip
 800256c:	fa83 f34c 	uadd8	r3, r3, ip
 8002570:	faa2 f38c 	sel	r3, r2, ip
 8002574:	b97b      	cbnz	r3, 8002596 <strlen+0x96>
 8002576:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
 800257a:	f101 0120 	add.w	r1, r1, #32
 800257e:	fa82 f24c 	uadd8	r2, r2, ip
 8002582:	f100 0008 	add.w	r0, r0, #8
 8002586:	faa4 f28c 	sel	r2, r4, ip
 800258a:	fa83 f34c 	uadd8	r3, r3, ip
 800258e:	faa2 f38c 	sel	r3, r2, ip
 8002592:	2b00      	cmp	r3, #0
 8002594:	d0c6      	beq.n	8002524 <strlen+0x24>
 8002596:	2a00      	cmp	r2, #0
 8002598:	bf04      	itt	eq
 800259a:	3004      	addeq	r0, #4
 800259c:	461a      	moveq	r2, r3
 800259e:	ba12      	rev	r2, r2
 80025a0:	fab2 f282 	clz	r2, r2
 80025a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
 80025a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
 80025ac:	4770      	bx	lr
 80025ae:	e9d1 2300 	ldrd	r2, r3, [r1]
 80025b2:	f004 0503 	and.w	r5, r4, #3
 80025b6:	f1c4 0000 	rsb	r0, r4, #0
 80025ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
 80025be:	f014 0f04 	tst.w	r4, #4
 80025c2:	f891 f040 	pld	[r1, #64]	; 0x40
 80025c6:	fa0c f505 	lsl.w	r5, ip, r5
 80025ca:	ea62 0205 	orn	r2, r2, r5
 80025ce:	bf1c      	itt	ne
 80025d0:	ea63 0305 	ornne	r3, r3, r5
 80025d4:	4662      	movne	r2, ip
 80025d6:	f04f 0400 	mov.w	r4, #0
 80025da:	e7a9      	b.n	8002530 <strlen+0x30>
 80025dc:	30302e31 	.word	0x30302e31
 80025e0:	0030302e 	.word	0x0030302e
 80025e4:	726b7349 	.word	0x726b7349
 80025e8:	00534a61 	.word	0x00534a61
 80025ec:	65706d41 	.word	0x65706d41
 80025f0:	00616b72 	.word	0x00616b72

080025f4 <BootSector>:
 80025f4:	4d903ceb 534f4453 00302e35 00040402     .<.MSDOS5.0.....
 8002604:	00020002 0002f808 00ff003f 00000800     ........?.......
 8002614:	00000000 0b290180 49009c8d 41524b53     ......)....ISKRA
 8002624:	2020534a 41462020 20323154 c9332020     JS    FAT12   3.
 8002634:	f0bcd18e b8d98e7b c08e2000 7c00bdfc     ....{.... .....|
 8002644:	7d244e38 99c18b24 72013ce8 3aeb831c     8N$}$....<.r...:
 8002654:	7c1ca166 073b6626 fc578a26 ca800675     f..|&f;.&.W.u...
 8002664:	02568802 7310c380 8ac933eb f7981046     ..V....s.3..F...
 8002674:	46031666 1e56131c 130e4603 11768bd1     f..F..V..F....v.
 8002684:	fc468960 b8fe5689 e6f70020 030b5e8b     `.F..V.. ....^..
 8002694:	f3f748c3 11fc4601 bf61fe4e e6e80000     .H...F..N.a.....
 80026a4:	26397200 17742d38 be0bb160 a6f37da1     .r9&8-t.`....}..
 80026b4:	4e327461 c7830974 72fb3b20 a0dcebe6     at2Nt... ;.r....
 80026c4:	7db47dfb 98acf08b 480c7440 0eb41374     .}.}....@t.Ht...
 80026d4:	cd0007bb a0efeb10 e6eb7dfd eb7dfca0     .........}....}.
 80026e4:	cd16cde1 558b2619 01b0521a e80000bb     .....&.U.R......
 80026f4:	e872003b 24568a5b 8b7c0bbe f046c7fc     ;.r.[.V$..|...F.
 8002704:	46c77d3d 8c7d29f4 f24e89d9 c6f64e89     =}.F.)}...N..N..
 8002714:	cb7d9606 000003ea c8b60f20 f8468b66     ..}..... ...f.F.
 8002724:	1c460366 66d08b66 eb10eac1 c8b60f5e     f.F.f..f....^...
 8002734:	468a4a4a f7e4320d fc4603e2 ebfe5613     JJ.F.2....F..V..
 8002744:	0650524a 6a016a53 468b9110 33929618     JRP.Sj.j...F...3
 8002754:	91f6f7d2 8742f6f7 1a76f7ca e88af28a     ......B...v.....
 8002764:	0a02ccc0 0201b8cc 0e027e80 42b40475     .........~..u..B
 8002774:	568af48b 6113cd24 400b7261 03420175     ...V$..aar.@u.B.
 8002784:	75490b5e 41c3f806 600000bb eb006a66     ^.Iu...A...`fj..
 8002794:	4f4f42b0 52474d54 20202020 65520a0d     .BOOTMGR    ..Re
 80027a4:	65766f6d 73696420 6f20736b 746f2072     move disks or ot
 80027b4:	20726568 6964656d 0dff2e61 7369440a     her media....Dis
 80027c4:	7265206b ff726f72 72500a0d 20737365     k error...Press 
 80027d4:	20796e61 2079656b 72206f74 61747365     any key to resta
 80027e4:	0a0d7472 00000000 ac000000 aa55d8cb     rt............U.

080027f4 <Dir>:
 80027f4:	2020202e 20202020 10202020 4d4ec100     .          ...NM
 8002804:	50335033 4d4f0000 00025033 00000000     3P3P..OM3P......
 8002814:	2020202e 20202020 10202020 4d4ec100     .          ...NM
 8002824:	50335033 4d4f0000 00005033 00000000     3P3P..OM3P......
 8002834:	75004742 64006900 0f000000 ffffff00     BG.u.i.d........
 8002844:	ffffffff ffffffff 0000ffff ffffffff     ................
 8002854:	6e004901 65006400 0f007800 0065ff00     .I.n.d.e.x....e.
 8002864:	00560072 006c006f 00000075 0065006d     r.V.o.l.u...m.e.
 8002874:	45444e49 317e4558 20202020 4d4ec400     INDEXE~1    ..NM
 8002884:	50335033 4d4f0000 00035033 0000004c     3P3P..OM3P..L...

08002894 <Fat>:
 8002894:	fffffff8 ffffffff 34007bff                       .........

0800289d <Guid>:
 800289d:	0034007b 00330037 00320038 00440036     {.4.7.3.8.2.6.D.
 80028ad:	002d0035 00420036 00320033 0034002d     5.-.6.B.3.2.-.4.
 80028bd:	00350030 002d0044 00440039 00450032     0.5.D.-.9.D.2.E.
 80028cd:	0032002d 00430035 00350041 00410034     -.2.5.C.A.5.4.A.
 80028dd:	00440039 00340035 007d0046              9.D.5.4.F.}.

080028e9 <Root>:
 80028e9:	524b5349 20534a41 08202020 00000000     ISKRAJS    .....
 80028f9:	00000000 4d4e0000 00005033 00000000     ......NM3P......
 8002909:	49002042 66006e00 0f006f00 00727200     B .I.n.f.o...rr.
 8002919:	0061006d 00690074 0000006f 0000006e     m.a.t.i.o...n...
 8002929:	79005301 74007300 0f006500 006d7200     .S.y.s.t.e...rm.
 8002939:	00560020 006c006f 00000075 0065006d      .V.o.l.u...m.e.
 8002949:	54535953 317e4d45 16202020 4d4ec100     SYSTEM~1   ...NM
 8002959:	50335033 4d4f0000 00025033 00000000     3P3P..OM3P......
 8002969:	44414552 2020454d 20545854 4d6b9b18     README  TXT ..kM
 8002979:	50335033 4d6c0000 00045033 00000174     3P3P..lM3P..t...
 8002989:	73006941 72006b00 0f006100 006a7500     Ai.s.k.r.a...uj.
 8002999:	002e0073 00000068 0000ffff ffffffff     s...h...........
 80029a9:	524b5349 20534a41 20202048 7bc24d00     ISKRAJS H   .M.{
 80029b9:	50335033 7bc20000 00055033 00000079     3P3P...{3P..y...
 80029c9:	6e666923 20666564 53495f5f 4a41524b     #ifndef __ISKRAJ
 80029d9:	5f485f53 64230a5f 6e696665 5f5f2065     S_H__.#define __
 80029e9:	524b5349 5f534a41 0a5f5f48 6564230a     ISKRAJS_H__..#de
 80029f9:	656e6966 4f4f4220 414f4c54 5f524544     fine BOOTLOADER_
 8002a09:	53524556 204e4f49 30303031 64230a30     VERSION 10000.#d
 8002a19:	6e696665 53552065 53465f42 4e41485f     efine USB_FS_HAN
 8002a29:	52454c44 30783020 30303038 0a646131     DLER 0x080001ad.
 8002a39:	6e65230a 0a666964 6552000a 656d6461     .#endif...Readme
 8002a49:	68540a0a 69207369 73492073 4a61726b     ..This is IskraJ
 8002a59:	6f622053 6f6c746f 72656461 44534d20     S bootloader MSD
 8002a69:	76656420 2e656369 73754a0a 6f632074      device..Just co
 8002a79:	79207970 4920756f 61726b73 6620534a     py you IskraJS f
 8002a89:	776d7269 20657261 2e206e69 206e6962     irmware in .bin 
 8002a99:	6d726f66 74207461 6874206f 64207369     format to this d
 8002aa9:	2e6b7369 6f590a0a 69662075 61776d72     isk...You firmwa
 8002ab9:	6d206572 20747375 63206562 69706d6f     re must be compi
 8002ac9:	2064656c 20726f66 204d4f52 72617473     led for ROM star
 8002ad9:	78302074 30303830 30303034 646e6120     t 0x08004000 and
 8002ae9:	4d415220 61747320 30207472 30303278      RAM start 0x200
 8002af9:	30383030 4d0a2e30 63696761 64646120     00800..Magic add
 8002b09:	73736572 66207365 7420726f 20736968     resses for this 
 8002b19:	746f6f62 64616f6c 0a3a7265 6966202d     bootloader:.- fi
 8002b29:	61776d72 55206572 46204253 6e692053     rmware USB FS in
 8002b39:	72726574 20747075 74636576 6d20726f     terrupt vector m
 8002b49:	20747375 73206562 74207465 7830206f     ust be set to 0x
 8002b59:	30303830 64613130 66490a3b 6d6f7320     080001ad;.If som
 8002b69:	6e696874 73692067 6f727720 203a676e     thing is wrong: 
 8002b79:	79706f63 7065722f 6563616c 73696020     copy/replace `is
 8002b89:	6a61726b 60682e73 6f726620 6568206d     krajs.h` from he
 8002b99:	74206572 6f79206f 72412075 6e697564     re to you Arduin
 8002ba9:	6964206f 74636572 2e79726f 07000a0a              o directory....

08002bb8 <msc_endp>:
 8002bb8:	02010507 00000040 00000000 07000000     ....@...........
 8002bc8:	40028105 00000000 00000000 04090000              ...@..........

08002bd6 <msc_iface>:
 8002bd6:	00000409 50060802 002bb800 00000008     .......P..+.....
 8002be6:	00000000 00240500                                .....

08002beb <cdcacm_functional_descriptors>:
 8002beb:	10002405 01240501 24040100 24050002     .$....$....$...$
 8002bfb:	07010206                                         ...

08002bfe <comm_endp>:
 8002bfe:	03840507 00ff0010 00000000 09000000              ...............

08002c0d <comm_iface>:
 8002c0d:	00010409 01020201 002bfe00 002beb08     ..........+...+.
 8002c1d:	00001308 03050700                                .....

08002c22 <data_endp>:
 8002c22:	02030507 00010040 00000000 07000000     ....@...........
 8002c32:	40028305 00000100 00000000 04090000              ...@..........

08002c40 <data_iface>:
 8002c40:	00020409 00000a02 002c2200 00000008     .........",.....
 8002c50:	00000000 010b0800                                .....

08002c55 <iadcdc_descr>:
 8002c55:	02010b08 00010202                       ........

08002c5d <config_descr>:
 8002c5d:	00000209 c0000103 002c7c32 10011208              ........2|,..

08002c6a <dev_descr>:
 8002c6a:	01100112 400102ef 57410483 02010110     .......@..AW....
 8002c7a:	00000103                                         ..

08002c7c <ifaces>:
 8002c7c:	00000000 00000001 00000000 08002bd6     .............+..
 8002c8c:	00000000 00000001 08002c55 08002c0d     ........U,...,..
 8002c9c:	00000000 00000001 00000000 08002c40     ............@,..
 8002cac:	64616f4c 00007265                       Loader..

08002cb4 <rcc_hse_8mhz_3v3>:
 8002cb4:	01500008 01000704 00000602 03000400     ..P.............
 8002cc4:	0501bd00 0280de80 0501bd00 01500008     ..............P.
 8002cd4:	01000702 00000605 03040500 0a037a00     .............z..
 8002ce4:	0280de80 0501bd00 01680008 01000802     ..........h.....
 8002cf4:	00000605 03040500 0aba9500 02aea540     ............@...
 8002d04:	055d4a80                                .J].

08002d08 <CSWTCH.31>:
 8002d08:	0800118d 00000000 00000000 00000000     ................
 8002d18:	00000000 08000ebb 08000f31 00000000     ........1.......
 8002d28:	08000dff 08000d69                       ....i...

08002d30 <CSWTCH.33>:
 8002d30:	08000e59 00000000 00000000 00000000     Y...............
	...
 8002d58:	08000e21 08000ee3                       !.......

08002d60 <stm32f107_usb_driver>:
 8002d60:	08001565 08001df1 08001e09 08001f4b     e...........K...
 8002d70:	08001f97 08002003 08001fe5 0800202d     ..... ......- ..
 8002d80:	08002079 080020e3 080022d7 50000000     y ... ...".....P
 8002d90:	00800001                                ....

08002d94 <_spc3_inquiry_response>:
 8002d94:	02048000 00000020 20202020 20202020     .... ...        
 8002da4:	20202020 20202020 20202020 20202020                     
 8002db4:	20202020                                    

08002db8 <_spc3_inquiry_sn_response>:
 8002db8:	10008000 726b7349 20534a61 302e3130     ....IskraJS 01.0
 8002dc8:	30302e30                                0.00

08002dcc <_spc3_request_sense>:
 8002dcc:	00000070 0a000000 00000000 00000000     p...............
 8002ddc:	00000000                                ....
