
iskramsd.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002d20  08000000  08000000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .preinit_array 00000000  08002d20  08002d20  00020018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .init_array   00000000  08002d20  08002d20  00020018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .fini_array   00000000  08002d20  08002d20  00020018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .data         00000018  20000000  08002d20  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000604  20000018  08002d38  00020018  2**2
                  ALLOC
  6 .ccm          00000000  10000000  10000000  00020018  2**0
                  CONTENTS
  7 .debug_info   00012a02  00000000  00000000  00020018  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003285  00000000  00000000  00032a1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000820  00000000  00000000  00035ca0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000820  00000000  00000000  000364c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000074c6  00000000  00000000  00036ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00005291  00000000  00000000  0003e1a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000177d4  00000000  00000000  00043437  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      00000031  00000000  00000000  0005ac0b  2**0
                  CONTENTS, READONLY
 15 .ARM.attributes 00000037  00000000  00000000  0005ac3c  2**0
                  CONTENTS, READONLY
 16 .debug_frame  00001090  00000000  00000000  0005ac74  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    0000459d  00000000  00000000  0005bd04  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000000 <vector_table>:
 8000000:	00 00 02 20 d9 1b 00 08 d7 1b 00 08 d5 1b 00 08     ... ............
 8000010:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 00 00 00 00     ................
	...
 800002c:	d7 1b 00 08 d7 1b 00 08 00 00 00 00 d7 1b 00 08     ................
 800003c:	d7 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800004c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800005c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800006c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800007c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800008c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800009c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 80000ac:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 80000bc:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 80000cc:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 80000dc:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 80000ec:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 80000fc:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800010c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800011c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800012c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800013c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800014c:	ad 01 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800015c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800016c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800017c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800018c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................
 800019c:	d5 1b 00 08 d5 1b 00 08 d5 1b 00 08 d5 1b 00 08     ................

080001ac <otg_fs_isr>:
extern uint32_t magic_point;

#include "usb.h"

// on usb-fs interrupt
void otg_fs_isr(void) { usbd_poll(usbdDevice); }
 80001ac:	4b01      	ldr	r3, [pc, #4]	; (80001b4 <otg_fs_isr+0x8>)
 80001ae:	6818      	ldr	r0, [r3, #0]
 80001b0:	f000 bd54 	b.w	8000c5c <usbd_poll>
 80001b4:	200002a8 	.word	0x200002a8

080001b8 <main>:

static uint8_t usbd_control_buffer[128];

int main(void) {
 80001b8:	b570      	push	{r4, r5, r6, lr}
    // clock initialisation 168MHz on 8MHz quarz (405/407)
    rcc_clock_setup_pll(&rcc_hse_8mhz_3v3[RCC_CLOCK_3V3_168MHZ]);
 80001ba:	4833      	ldr	r0, [pc, #204]	; (8000288 <main+0xd0>)

    // FAT12 file system on pceudo drive init
    romdisk_init();

    // usb-fs initialisation
    usbdDevice = usbd_init(&otgfs_usb_driver, &dev_descr, &config_descr, usb_strings, 3,
 80001bc:	4d33      	ldr	r5, [pc, #204]	; (800028c <main+0xd4>)
int main(void) {
 80001be:	b088      	sub	sp, #32
    rcc_clock_setup_pll(&rcc_hse_8mhz_3v3[RCC_CLOCK_3V3_168MHZ]);
 80001c0:	f000 fca4 	bl	8000b0c <rcc_clock_setup_pll>
    rcc_periph_clock_enable(RCC_GPIOD); // leds
 80001c4:	f240 6003 	movw	r0, #1539	; 0x603
 80001c8:	f000 fb98 	bl	80008fc <rcc_periph_clock_enable>
    rcc_periph_clock_enable(RCC_GPIOA); // button A0 and usb PA11 PA12
 80001cc:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80001d0:	f000 fb94 	bl	80008fc <rcc_periph_clock_enable>
    rcc_periph_clock_enable(RCC_OTGFS);
 80001d4:	f240 6087 	movw	r0, #1671	; 0x687
 80001d8:	f000 fb90 	bl	80008fc <rcc_periph_clock_enable>
    gpio_mode_setup(GPIOA, GPIO_MODE_INPUT, GPIO_PUPD_PULLDOWN, GPIO0);
 80001dc:	2301      	movs	r3, #1
 80001de:	2202      	movs	r2, #2
 80001e0:	2100      	movs	r1, #0
 80001e2:	482b      	ldr	r0, [pc, #172]	; (8000290 <main+0xd8>)
 80001e4:	f000 fb38 	bl	8000858 <gpio_mode_setup>
    gpio_mode_setup(GPIOA, GPIO_MODE_AF, GPIO_PUPD_NONE, GPIO11 | GPIO12);
 80001e8:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 80001ec:	2200      	movs	r2, #0
 80001ee:	2102      	movs	r1, #2
 80001f0:	4827      	ldr	r0, [pc, #156]	; (8000290 <main+0xd8>)
 80001f2:	f000 fb31 	bl	8000858 <gpio_mode_setup>
    gpio_set_af(GPIOA, GPIO_AF10, GPIO11 | GPIO12);
 80001f6:	f44f 52c0 	mov.w	r2, #6144	; 0x1800
 80001fa:	210a      	movs	r1, #10
 80001fc:	4824      	ldr	r0, [pc, #144]	; (8000290 <main+0xd8>)
 80001fe:	f000 fb4d 	bl	800089c <gpio_set_af>
    cdcacm_init();
 8000202:	f000 fa17 	bl	8000634 <cdcacm_init>
    romdisk_init();
 8000206:	f000 f85d 	bl	80002c4 <romdisk_init>
    usbdDevice = usbd_init(&otgfs_usb_driver, &dev_descr, &config_descr, usb_strings, 3,
 800020a:	4b22      	ldr	r3, [pc, #136]	; (8000294 <main+0xdc>)
 800020c:	9301      	str	r3, [sp, #4]
 800020e:	2480      	movs	r4, #128	; 0x80
 8000210:	2303      	movs	r3, #3
 8000212:	4a21      	ldr	r2, [pc, #132]	; (8000298 <main+0xe0>)
 8000214:	4921      	ldr	r1, [pc, #132]	; (800029c <main+0xe4>)
 8000216:	9402      	str	r4, [sp, #8]
 8000218:	9300      	str	r3, [sp, #0]
 800021a:	4821      	ldr	r0, [pc, #132]	; (80002a0 <main+0xe8>)
 800021c:	4b21      	ldr	r3, [pc, #132]	; (80002a4 <main+0xec>)
 800021e:	f000 fcf1 	bl	8000c04 <usbd_init>
 8000222:	4606      	mov	r6, r0
 8000224:	6028      	str	r0, [r5, #0]
        usbd_control_buffer, sizeof(usbd_control_buffer));

    // msc initialisation
    usb_msc_init(usbdDevice, 0x81, 64, 0x01, 64, "Amperka", "IskraJS", "1.00.00",
        romdisk_blocks(), romdisk_read, romdisk_write);
 8000226:	f000 f937 	bl	8000498 <romdisk_blocks>
    usb_msc_init(usbdDevice, 0x81, 64, 0x01, 64, "Amperka", "IskraJS", "1.00.00",
 800022a:	4b1f      	ldr	r3, [pc, #124]	; (80002a8 <main+0xf0>)
 800022c:	9306      	str	r3, [sp, #24]
 800022e:	4b1f      	ldr	r3, [pc, #124]	; (80002ac <main+0xf4>)
 8000230:	9305      	str	r3, [sp, #20]
 8000232:	4b1f      	ldr	r3, [pc, #124]	; (80002b0 <main+0xf8>)
 8000234:	9303      	str	r3, [sp, #12]
 8000236:	4b1f      	ldr	r3, [pc, #124]	; (80002b4 <main+0xfc>)
 8000238:	9302      	str	r3, [sp, #8]
 800023a:	2240      	movs	r2, #64	; 0x40
 800023c:	4b1e      	ldr	r3, [pc, #120]	; (80002b8 <main+0x100>)
 800023e:	9200      	str	r2, [sp, #0]
 8000240:	9004      	str	r0, [sp, #16]
 8000242:	9301      	str	r3, [sp, #4]
 8000244:	2181      	movs	r1, #129	; 0x81
 8000246:	2301      	movs	r3, #1
 8000248:	4630      	mov	r0, r6
 800024a:	f001 fc8d 	bl	8001b68 <usb_msc_init>
    // cdc handler connection
    usbd_register_set_config_callback(usbdDevice, cdcacm_set_config);
 800024e:	491b      	ldr	r1, [pc, #108]	; (80002bc <main+0x104>)
 8000250:	6828      	ldr	r0, [r5, #0]
 8000252:	f000 ff69 	bl	8001128 <usbd_register_set_config_callback>

    // usb-fs interrupt enabling
    nvic_set_priority(NVIC_OTG_FS_IRQ, 2 << 4);
 8000256:	2120      	movs	r1, #32
 8000258:	2043      	movs	r0, #67	; 0x43
 800025a:	f001 fd21 	bl	8001ca0 <nvic_set_priority>
    nvic_enable_irq(NVIC_OTG_FS_IRQ);
 800025e:	2043      	movs	r0, #67	; 0x43
 8000260:	f001 fd10 	bl	8001c84 <nvic_enable_irq>
    rcc_peripheral_enable_clock(&RCC_AHB2ENR, 1 << 7);
 8000264:	4621      	mov	r1, r4
 8000266:	4816      	ldr	r0, [pc, #88]	; (80002c0 <main+0x108>)
 8000268:	f000 fb44 	bl	80008f4 <rcc_peripheral_enable_clock>

    // if button pressed - do not start application, only bootloader (emergency mode)
    // otherwise - run application after bootloader init (normal mode)
#ifdef STM32F407VGT6
    if (!(gpio_port_read(GPIOA) & GPIO0)) {
 800026c:	4808      	ldr	r0, [pc, #32]	; (8000290 <main+0xd8>)
 800026e:	f000 faf0 	bl	8000852 <gpio_port_read>
 8000272:	f010 0401 	ands.w	r4, r0, #1
 8000276:	d001      	beq.n	800027c <main+0xc4>
#endif
   // if (buttonReleased()) {
        appJumper();
    } else {
        while (1)
            __asm__("nop");
 8000278:	bf00      	nop
 800027a:	e7fd      	b.n	8000278 <main+0xc0>
        appJumper();
 800027c:	f000 f94c 	bl	8000518 <appJumper>
    }
}
 8000280:	4620      	mov	r0, r4
 8000282:	b008      	add	sp, #32
 8000284:	bd70      	pop	{r4, r5, r6, pc}
 8000286:	bf00      	nop
 8000288:	08002c10 	.word	0x08002c10
 800028c:	200002a8 	.word	0x200002a8
 8000290:	40020000 	.word	0x40020000
 8000294:	20000018 	.word	0x20000018
 8000298:	08002b9d 	.word	0x08002b9d
 800029c:	08002baa 	.word	0x08002baa
 80002a0:	08002ca0 	.word	0x08002ca0
 80002a4:	20000000 	.word	0x20000000
 80002a8:	0800035d 	.word	0x0800035d
 80002ac:	080002c9 	.word	0x080002c9
 80002b0:	0800251c 	.word	0x0800251c
 80002b4:	08002524 	.word	0x08002524
 80002b8:	0800252c 	.word	0x0800252c
 80002bc:	0800070d 	.word	0x0800070d
 80002c0:	40023834 	.word	0x40023834

080002c4 <romdisk_init>:

static uint8_t *romdata = (uint8_t *)APP_START; // 1 sector of flash, in 0 sector we has bootloader

int romdisk_init(void) {
    return 0;
}
 80002c4:	2000      	movs	r0, #0
 80002c6:	4770      	bx	lr

080002c8 <romdisk_read>:

int romdisk_read(uint32_t lba, uint8_t *copy_to) {
 80002c8:	b538      	push	{r3, r4, r5, lr}
 80002ca:	460c      	mov	r4, r1
 80002cc:	4605      	mov	r5, r0
    memset(copy_to, 0, SECTOR_SIZE);
 80002ce:	f44f 7200 	mov.w	r2, #512	; 0x200
 80002d2:	2100      	movs	r1, #0
 80002d4:	4620      	mov	r0, r4
 80002d6:	f002 f84d 	bl	8002374 <memset>
    switch (lba) {
 80002da:	2d08      	cmp	r5, #8
 80002dc:	d025      	beq.n	800032a <romdisk_read+0x62>
 80002de:	d806      	bhi.n	80002ee <romdisk_read+0x26>
 80002e0:	2d04      	cmp	r5, #4
 80002e2:	d01a      	beq.n	800031a <romdisk_read+0x52>
 80002e4:	2d06      	cmp	r5, #6
 80002e6:	d018      	beq.n	800031a <romdisk_read+0x52>
 80002e8:	b185      	cbz	r5, 800030c <romdisk_read+0x44>
        break;    
    default:
        break;
    }
    return 0;
}
 80002ea:	2000      	movs	r0, #0
 80002ec:	bd38      	pop	{r3, r4, r5, pc}
    switch (lba) {
 80002ee:	2d2c      	cmp	r5, #44	; 0x2c
 80002f0:	d01e      	beq.n	8000330 <romdisk_read+0x68>
 80002f2:	d804      	bhi.n	80002fe <romdisk_read+0x36>
 80002f4:	2d28      	cmp	r5, #40	; 0x28
 80002f6:	d1f8      	bne.n	80002ea <romdisk_read+0x22>
        memcpy(copy_to, Dir, sizeof(Dir));
 80002f8:	22a0      	movs	r2, #160	; 0xa0
 80002fa:	4911      	ldr	r1, [pc, #68]	; (8000340 <romdisk_read+0x78>)
 80002fc:	e009      	b.n	8000312 <romdisk_read+0x4a>
    switch (lba) {
 80002fe:	2d30      	cmp	r5, #48	; 0x30
 8000300:	d019      	beq.n	8000336 <romdisk_read+0x6e>
 8000302:	2d34      	cmp	r5, #52	; 0x34
 8000304:	d1f1      	bne.n	80002ea <romdisk_read+0x22>
        memcpy(copy_to, Iskrajs_h, sizeof(Iskrajs_h));
 8000306:	227a      	movs	r2, #122	; 0x7a
 8000308:	490e      	ldr	r1, [pc, #56]	; (8000344 <romdisk_read+0x7c>)
 800030a:	e002      	b.n	8000312 <romdisk_read+0x4a>
        memcpy(copy_to, BootSector, sizeof(BootSector));
 800030c:	490e      	ldr	r1, [pc, #56]	; (8000348 <romdisk_read+0x80>)
 800030e:	f44f 7200 	mov.w	r2, #512	; 0x200
        memcpy(copy_to, Iskrajs_h, sizeof(Iskrajs_h));
 8000312:	4620      	mov	r0, r4
 8000314:	f001 ff94 	bl	8002240 <memcpy>
        break;    
 8000318:	e7e7      	b.n	80002ea <romdisk_read+0x22>
        memcpy(copy_to, Fat, sizeof(Fat));
 800031a:	4b0c      	ldr	r3, [pc, #48]	; (800034c <romdisk_read+0x84>)
 800031c:	681a      	ldr	r2, [r3, #0]
 800031e:	6022      	str	r2, [r4, #0]
 8000320:	685a      	ldr	r2, [r3, #4]
 8000322:	7a1b      	ldrb	r3, [r3, #8]
 8000324:	6062      	str	r2, [r4, #4]
 8000326:	7223      	strb	r3, [r4, #8]
        break;
 8000328:	e7df      	b.n	80002ea <romdisk_read+0x22>
        memcpy(copy_to, Root, sizeof(Root));
 800032a:	22e0      	movs	r2, #224	; 0xe0
 800032c:	4908      	ldr	r1, [pc, #32]	; (8000350 <romdisk_read+0x88>)
 800032e:	e7f0      	b.n	8000312 <romdisk_read+0x4a>
        memcpy(copy_to, Guid, sizeof(Guid));
 8000330:	224c      	movs	r2, #76	; 0x4c
 8000332:	4908      	ldr	r1, [pc, #32]	; (8000354 <romdisk_read+0x8c>)
 8000334:	e7ed      	b.n	8000312 <romdisk_read+0x4a>
        memcpy(copy_to, Readme, sizeof(Readme));
 8000336:	f240 1275 	movw	r2, #373	; 0x175
 800033a:	4907      	ldr	r1, [pc, #28]	; (8000358 <romdisk_read+0x90>)
 800033c:	e7e9      	b.n	8000312 <romdisk_read+0x4a>
 800033e:	bf00      	nop
 8000340:	08002734 	.word	0x08002734
 8000344:	08002909 	.word	0x08002909
 8000348:	08002534 	.word	0x08002534
 800034c:	080027d4 	.word	0x080027d4
 8000350:	08002829 	.word	0x08002829
 8000354:	080027dd 	.word	0x080027dd
 8000358:	08002983 	.word	0x08002983

0800035c <romdisk_write>:
static uint8_t shift = 0;
static bool firmwareIsRight = false;

int romdisk_write(uint32_t lba, const uint8_t *copy_from) {
    // testing firmware structure
    if(lba == START_DATA_SECTOR) {
 800035c:	2838      	cmp	r0, #56	; 0x38
int romdisk_write(uint32_t lba, const uint8_t *copy_from) {
 800035e:	b538      	push	{r3, r4, r5, lr}
 8000360:	4604      	mov	r4, r0
 8000362:	460d      	mov	r5, r1
    if(lba == START_DATA_SECTOR) {
 8000364:	d127      	bne.n	80003b6 <romdisk_write+0x5a>
        if(((uint32_t*)(copy_from))[0] == 0x20020000 && 
 8000366:	4b48      	ldr	r3, [pc, #288]	; (8000488 <romdisk_write+0x12c>)
 8000368:	680a      	ldr	r2, [r1, #0]
 800036a:	429a      	cmp	r2, r3
 800036c:	4b47      	ldr	r3, [pc, #284]	; (800048c <romdisk_write+0x130>)
 800036e:	d11d      	bne.n	80003ac <romdisk_write+0x50>
 8000370:	f8d1 114c 	ldr.w	r1, [r1, #332]	; 0x14c
 8000374:	4a46      	ldr	r2, [pc, #280]	; (8000490 <romdisk_write+0x134>)
 8000376:	4291      	cmp	r1, r2
 8000378:	d118      	bne.n	80003ac <romdisk_write+0x50>
           ((uint32_t*)(copy_from))[83] == 0x080001ad) { // TODO here will be USB FS handler address
            firmwareIsRight = true;
 800037a:	2201      	movs	r2, #1
 800037c:	701a      	strb	r2, [r3, #0]
            firmwareIsRight = false;
            relaxJumper(); // for reboot after bad firmware downloading 
        }
    }
    if (lba >= START_DATA_SECTOR) {
        if(firmwareIsRight) { // if firmware structure is ok
 800037e:	4b43      	ldr	r3, [pc, #268]	; (800048c <romdisk_write+0x130>)
 8000380:	781b      	ldrb	r3, [r3, #0]
 8000382:	b1d3      	cbz	r3, 80003ba <romdisk_write+0x5e>

            flash_unlock();
 8000384:	f000 f9e8 	bl	8000758 <flash_unlock>

            switch (lba - START_DATA_SECTOR) {
 8000388:	f1a4 0138 	sub.w	r1, r4, #56	; 0x38
 800038c:	f5b1 7ff0 	cmp.w	r1, #480	; 0x1e0
 8000390:	d061      	beq.n	8000456 <romdisk_write+0xfa>
 8000392:	d81e      	bhi.n	80003d2 <romdisk_write+0x76>
 8000394:	2940      	cmp	r1, #64	; 0x40
 8000396:	d052      	beq.n	800043e <romdisk_write+0xe2>
 8000398:	d811      	bhi.n	80003be <romdisk_write+0x62>
 800039a:	b3b1      	cbz	r1, 800040a <romdisk_write+0xae>
 800039c:	2920      	cmp	r1, #32
 800039e:	d046      	beq.n	800042e <romdisk_write+0xd2>
#endif // STM32F411RG 
            default:
                break;
            }

            if (lba >= START_DATA_SECTOR && lba < SECTOR_COUNT) {
 80003a0:	f5b1 6ff5 	cmp.w	r1, #1960	; 0x7a8
 80003a4:	d338      	bcc.n	8000418 <romdisk_write+0xbc>
                flash_program((uint32_t)romdata + (lba - START_DATA_SECTOR) * SECTOR_SIZE, copy_from, SECTOR_SIZE);
            }

            flash_lock();
 80003a6:	f000 f9e3 	bl	8000770 <flash_lock>
 80003aa:	e006      	b.n	80003ba <romdisk_write+0x5e>
            firmwareIsRight = false;
 80003ac:	2200      	movs	r2, #0
 80003ae:	701a      	strb	r2, [r3, #0]
            relaxJumper(); // for reboot after bad firmware downloading 
 80003b0:	f000 f924 	bl	80005fc <relaxJumper>
 80003b4:	e7e3      	b.n	800037e <romdisk_write+0x22>
    if (lba >= START_DATA_SECTOR) {
 80003b6:	2837      	cmp	r0, #55	; 0x37
 80003b8:	d8e1      	bhi.n	800037e <romdisk_write+0x22>
        }
        // else do not write bad firmware
    }
    return 0;
}
 80003ba:	2000      	movs	r0, #0
 80003bc:	bd38      	pop	{r3, r4, r5, pc}
            switch (lba - START_DATA_SECTOR) {
 80003be:	2960      	cmp	r1, #96	; 0x60
 80003c0:	d043      	beq.n	800044a <romdisk_write+0xee>
 80003c2:	29e0      	cmp	r1, #224	; 0xe0
 80003c4:	d1ec      	bne.n	80003a0 <romdisk_write+0x44>
                otherBlock = true;
 80003c6:	4b33      	ldr	r3, [pc, #204]	; (8000494 <romdisk_write+0x138>)
 80003c8:	2201      	movs	r2, #1
 80003ca:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(5, 0);
 80003cc:	2100      	movs	r1, #0
 80003ce:	2005      	movs	r0, #5
 80003d0:	e032      	b.n	8000438 <romdisk_write+0xdc>
            switch (lba - START_DATA_SECTOR) {
 80003d2:	f5b1 6f9c 	cmp.w	r1, #1248	; 0x4e0
 80003d6:	d04a      	beq.n	800046e <romdisk_write+0x112>
 80003d8:	d80b      	bhi.n	80003f2 <romdisk_write+0x96>
 80003da:	f5b1 7f38 	cmp.w	r1, #736	; 0x2e0
 80003de:	d040      	beq.n	8000462 <romdisk_write+0x106>
 80003e0:	f5b1 7f78 	cmp.w	r1, #992	; 0x3e0
 80003e4:	d1dc      	bne.n	80003a0 <romdisk_write+0x44>
                otherBlock = true;
 80003e6:	4b2b      	ldr	r3, [pc, #172]	; (8000494 <romdisk_write+0x138>)
 80003e8:	2201      	movs	r2, #1
 80003ea:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(8, 0);
 80003ec:	2100      	movs	r1, #0
 80003ee:	2008      	movs	r0, #8
 80003f0:	e022      	b.n	8000438 <romdisk_write+0xdc>
            switch (lba - START_DATA_SECTOR) {
 80003f2:	f5b1 6fbc 	cmp.w	r1, #1504	; 0x5e0
 80003f6:	d040      	beq.n	800047a <romdisk_write+0x11e>
 80003f8:	f5b1 6fdc 	cmp.w	r1, #1760	; 0x6e0
 80003fc:	d1d0      	bne.n	80003a0 <romdisk_write+0x44>
                otherBlock = true;
 80003fe:	4b25      	ldr	r3, [pc, #148]	; (8000494 <romdisk_write+0x138>)
 8000400:	2201      	movs	r2, #1
 8000402:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(11, 0);
 8000404:	2100      	movs	r1, #0
 8000406:	200b      	movs	r0, #11
 8000408:	e016      	b.n	8000438 <romdisk_write+0xdc>
                otherBlock = true;
 800040a:	4b22      	ldr	r3, [pc, #136]	; (8000494 <romdisk_write+0x138>)
 800040c:	2001      	movs	r0, #1
 800040e:	7018      	strb	r0, [r3, #0]
                flash_erase_sector(1, 0);
 8000410:	f000 f9e8 	bl	80007e4 <flash_erase_sector>
                relaxJumper();
 8000414:	f000 f8f2 	bl	80005fc <relaxJumper>
                flash_program((uint32_t)romdata + (lba - START_DATA_SECTOR) * SECTOR_SIZE, copy_from, SECTOR_SIZE);
 8000418:	0260      	lsls	r0, r4, #9
 800041a:	f100 60ff 	add.w	r0, r0, #133693440	; 0x7f80000
 800041e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000422:	4629      	mov	r1, r5
 8000424:	f500 20fa 	add.w	r0, r0, #512000	; 0x7d000
 8000428:	f000 f9ce 	bl	80007c8 <flash_program>
 800042c:	e7bb      	b.n	80003a6 <romdisk_write+0x4a>
                otherBlock = true;
 800042e:	4b19      	ldr	r3, [pc, #100]	; (8000494 <romdisk_write+0x138>)
 8000430:	2201      	movs	r2, #1
 8000432:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(2, 0);
 8000434:	2100      	movs	r1, #0
 8000436:	2002      	movs	r0, #2
                flash_erase_sector(10, 0);
 8000438:	f000 f9d4 	bl	80007e4 <flash_erase_sector>
                break;
 800043c:	e7ec      	b.n	8000418 <romdisk_write+0xbc>
                otherBlock = true;
 800043e:	4b15      	ldr	r3, [pc, #84]	; (8000494 <romdisk_write+0x138>)
 8000440:	2201      	movs	r2, #1
 8000442:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(3, 0);
 8000444:	2100      	movs	r1, #0
 8000446:	2003      	movs	r0, #3
 8000448:	e7f6      	b.n	8000438 <romdisk_write+0xdc>
                otherBlock = true;
 800044a:	4b12      	ldr	r3, [pc, #72]	; (8000494 <romdisk_write+0x138>)
 800044c:	2201      	movs	r2, #1
 800044e:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(4, 0);
 8000450:	2100      	movs	r1, #0
 8000452:	2004      	movs	r0, #4
 8000454:	e7f0      	b.n	8000438 <romdisk_write+0xdc>
                otherBlock = true;
 8000456:	4b0f      	ldr	r3, [pc, #60]	; (8000494 <romdisk_write+0x138>)
 8000458:	2201      	movs	r2, #1
 800045a:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(6, 0);
 800045c:	2100      	movs	r1, #0
 800045e:	2006      	movs	r0, #6
 8000460:	e7ea      	b.n	8000438 <romdisk_write+0xdc>
                otherBlock = true;
 8000462:	4b0c      	ldr	r3, [pc, #48]	; (8000494 <romdisk_write+0x138>)
 8000464:	2201      	movs	r2, #1
 8000466:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(7, 0);
 8000468:	2100      	movs	r1, #0
 800046a:	2007      	movs	r0, #7
 800046c:	e7e4      	b.n	8000438 <romdisk_write+0xdc>
                otherBlock = true;
 800046e:	4b09      	ldr	r3, [pc, #36]	; (8000494 <romdisk_write+0x138>)
 8000470:	2201      	movs	r2, #1
 8000472:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(9, 0);
 8000474:	2100      	movs	r1, #0
 8000476:	2009      	movs	r0, #9
 8000478:	e7de      	b.n	8000438 <romdisk_write+0xdc>
                otherBlock = true;
 800047a:	4b06      	ldr	r3, [pc, #24]	; (8000494 <romdisk_write+0x138>)
 800047c:	2201      	movs	r2, #1
 800047e:	701a      	strb	r2, [r3, #0]
                flash_erase_sector(10, 0);
 8000480:	2100      	movs	r1, #0
 8000482:	200a      	movs	r0, #10
 8000484:	e7d8      	b.n	8000438 <romdisk_write+0xdc>
 8000486:	bf00      	nop
 8000488:	20020000 	.word	0x20020000
 800048c:	20000098 	.word	0x20000098
 8000490:	080001ad 	.word	0x080001ad
 8000494:	20000099 	.word	0x20000099

08000498 <romdisk_blocks>:

int romdisk_blocks(void) { return SECTOR_COUNT; }
 8000498:	f44f 60fc 	mov.w	r0, #2016	; 0x7e0
 800049c:	4770      	bx	lr

0800049e <initBufSerial>:
 */

#include "serialbuf.h"

void initBufSerial(bufSerial* buf) {
    buf->len = buf->first = buf->last = 0;
 800049e:	2300      	movs	r3, #0
 80004a0:	8043      	strh	r3, [r0, #2]
 80004a2:	8003      	strh	r3, [r0, #0]
 80004a4:	8083      	strh	r3, [r0, #4]
 80004a6:	4770      	bx	lr

080004a8 <canWrite>:
}

bool canWrite(bufSerial* buf) { return (buf->len < SERIALBUFLEN); }
 80004a8:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 80004ac:	28ff      	cmp	r0, #255	; 0xff
 80004ae:	bfcc      	ite	gt
 80004b0:	2000      	movgt	r0, #0
 80004b2:	2001      	movle	r0, #1
 80004b4:	4770      	bx	lr

080004b6 <canRead>:

bool canRead(bufSerial* buf) { return (buf->len > 0); }
 80004b6:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 80004ba:	2800      	cmp	r0, #0
 80004bc:	bfd4      	ite	le
 80004be:	2000      	movle	r0, #0
 80004c0:	2001      	movgt	r0, #1
 80004c2:	4770      	bx	lr

080004c4 <getBufSerial>:
 80004c4:	f9b0 1004 	ldrsh.w	r1, [r0, #4]

int16_t getBufSerial(bufSerial* buf) {
    int16_t c = -1;
    if (canRead(buf)) {
 80004c8:	2900      	cmp	r1, #0
int16_t getBufSerial(bufSerial* buf) {
 80004ca:	4602      	mov	r2, r0
    if (canRead(buf)) {
 80004cc:	dd0d      	ble.n	80004ea <getBufSerial+0x26>
        c = buf->buf[buf->last];
 80004ce:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80004d2:	4418      	add	r0, r3
        buf->last++;
 80004d4:	3301      	adds	r3, #1
 80004d6:	b21b      	sxth	r3, r3
        if (buf->last == SERIALBUFLEN)
 80004d8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
            buf->last = 0;
 80004dc:	bf08      	it	eq
 80004de:	2300      	moveq	r3, #0
        buf->len--;
 80004e0:	3901      	subs	r1, #1
        c = buf->buf[buf->last];
 80004e2:	7980      	ldrb	r0, [r0, #6]
            buf->last = 0;
 80004e4:	8053      	strh	r3, [r2, #2]
        buf->len--;
 80004e6:	8091      	strh	r1, [r2, #4]
 80004e8:	4770      	bx	lr
    int16_t c = -1;
 80004ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    }
    return c;
}
 80004ee:	4770      	bx	lr

080004f0 <putBufSerial>:
bool canWrite(bufSerial* buf) { return (buf->len < SERIALBUFLEN); }
 80004f0:	f9b0 2004 	ldrsh.w	r2, [r0, #4]

void putBufSerial(bufSerial* buf, uint8_t c) {
    if (canWrite(buf)) {
 80004f4:	2aff      	cmp	r2, #255	; 0xff
void putBufSerial(bufSerial* buf, uint8_t c) {
 80004f6:	b510      	push	{r4, lr}
    if (canWrite(buf)) {
 80004f8:	dc0c      	bgt.n	8000514 <putBufSerial+0x24>
        buf->buf[buf->first] = c;
 80004fa:	f9b0 3000 	ldrsh.w	r3, [r0]
 80004fe:	18c4      	adds	r4, r0, r3
        buf->first++;
 8000500:	3301      	adds	r3, #1
 8000502:	b21b      	sxth	r3, r3
        if (buf->first == SERIALBUFLEN)
 8000504:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
            buf->first = 0;
 8000508:	bf08      	it	eq
 800050a:	2300      	moveq	r3, #0
        buf->len++;
 800050c:	3201      	adds	r2, #1
        buf->buf[buf->first] = c;
 800050e:	71a1      	strb	r1, [r4, #6]
            buf->first = 0;
 8000510:	8003      	strh	r3, [r0, #0]
        buf->len++;
 8000512:	8082      	strh	r2, [r0, #4]
 8000514:	bd10      	pop	{r4, pc}
	...

08000518 <appJumper>:
    // safe interface addresses for using in application ?

    // write to RAM address of USB FS handler
    //*((volatile uint32_t*)(RAM_START-4)) = (uint32_t)otg_fs_isr;
    // write to RAM address of USB_SERIAL_RX
    *((volatile uint32_t*)(RAM_START - 8)) = (uint32_t)cdcacm_getc;
 8000518:	4b17      	ldr	r3, [pc, #92]	; (8000578 <appJumper+0x60>)
 800051a:	4a18      	ldr	r2, [pc, #96]	; (800057c <appJumper+0x64>)
 800051c:	601a      	str	r2, [r3, #0]
    // write to RAM address of USB_SERIAL_TX
    *((volatile uint32_t*)(RAM_START - 12)) = (uint32_t)cdcacm_putc;
 800051e:	4a18      	ldr	r2, [pc, #96]	; (8000580 <appJumper+0x68>)
 8000520:	f843 2c04 	str.w	r2, [r3, #-4]
    // write to RAM address of USB_SERIAL_AVAILABLE
    *((volatile uint32_t*)(RAM_START - 16)) = (uint32_t)cdcacm_in_ready;
 8000524:	4a17      	ldr	r2, [pc, #92]	; (8000584 <appJumper+0x6c>)
 8000526:	f843 2c08 	str.w	r2, [r3, #-8]
    // write to RAM address of USB_SERIAL_READY
    *((volatile uint32_t*)(RAM_START - 20)) = (uint32_t)cdcacm_out_ready;
 800052a:	4a17      	ldr	r2, [pc, #92]	; (8000588 <appJumper+0x70>)
 800052c:	f843 2c0c 	str.w	r2, [r3, #-12]
void appJumper(void) {
 8000530:	b082      	sub	sp, #8
 *
 * Mask all interrupts globally
 */
static inline void cm_disable_interrupts(void)
{
	__asm__ volatile ("CPSID I\n");
 8000532:	b672      	cpsid	i

    cm_disable_interrupts();

    volatile uint32_t stackPtr = *(volatile uint32_t*)(APP_START);
 8000534:	4b15      	ldr	r3, [pc, #84]	; (800058c <appJumper+0x74>)
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	9300      	str	r3, [sp, #0]
    volatile uint32_t jumpAddress = *(volatile uint32_t*)(APP_START + 4);
 800053a:	4b15      	ldr	r3, [pc, #84]	; (8000590 <appJumper+0x78>)
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	9301      	str	r3, [sp, #4]
    // reset all core registers
    __asm volatile("eor r0, r0\n"
 8000540:	9b01      	ldr	r3, [sp, #4]
 8000542:	9a00      	ldr	r2, [sp, #0]
 8000544:	ea80 0000 	eor.w	r0, r0, r0
 8000548:	4619      	mov	r1, r3
 800054a:	4612      	mov	r2, r2
 800054c:	f380 8809 	msr	PSP, r0
 8000550:	f382 8808 	msr	MSP, r2
 8000554:	f380 8805 	msr	IPSR, r0
 8000558:	f380 8810 	msr	PRIMASK, r0
 800055c:	f380 8813 	msr	FAULTMASK, r0
 8000560:	f380 8811 	msr	BASEPRI, r0
 8000564:	f380 8814 	msr	CONTROL, r0
 8000568:	ea8e 0e0e 	eor.w	lr, lr, lr
 800056c:	f1ae 0e01 	sub.w	lr, lr, #1
 8000570:	468f      	mov	pc, r1
                   "eor lr, lr\n"
                   "sub lr, #1\n"
                   "mov pc, r1\n"
                   :
                   : "r"(jumpAddress), "r"(stackPtr));
}
 8000572:	b002      	add	sp, #8
 8000574:	4770      	bx	lr
 8000576:	bf00      	nop
 8000578:	200007f8 	.word	0x200007f8
 800057c:	080006b5 	.word	0x080006b5
 8000580:	0800065d 	.word	0x0800065d
 8000584:	080006a9 	.word	0x080006a9
 8000588:	08000651 	.word	0x08000651
 800058c:	08004000 	.word	0x08004000
 8000590:	08004004 	.word	0x08004004

08000594 <resetJumper>:

void resetJumper(void) {
 8000594:	b508      	push	{r3, lr}
    usbd_disconnect(usbdDevice, true);
 8000596:	4b03      	ldr	r3, [pc, #12]	; (80005a4 <resetJumper+0x10>)
 8000598:	2101      	movs	r1, #1
 800059a:	6818      	ldr	r0, [r3, #0]
 800059c:	f000 fb62 	bl	8000c64 <usbd_disconnect>
    scb_reset_system();
 80005a0:	f001 fb68 	bl	8001c74 <scb_reset_system>
 80005a4:	200002a8 	.word	0x200002a8

080005a8 <relaxLoop>:
}

static void relaxLoop(void) {
 80005a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // do some blinking when downloading firmware
#ifdef STM32F407VGT6
    gpio_mode_setup(GPIOD, GPIO_MODE_OUTPUT,
 80005aa:	2200      	movs	r2, #0
 80005ac:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 80005b0:	2101      	movs	r1, #1
 80005b2:	480f      	ldr	r0, [pc, #60]	; (80005f0 <relaxLoop+0x48>)
        GPIO_PUPD_NONE, GPIO12 | GPIO13 | GPIO14 | GPIO15);
    gpio_set(GPIOD, GPIO12 | GPIO14);
    for (int j = 0; j < 15; j++) {
        if (otherBlock) {
 80005b4:	4d0f      	ldr	r5, [pc, #60]	; (80005f4 <relaxLoop+0x4c>)
            otherBlock = false;
            j = 0;
        }
        gpio_toggle(GPIOD, GPIO12 | GPIO13 | GPIO14 | GPIO15);
 80005b6:	4f0e      	ldr	r7, [pc, #56]	; (80005f0 <relaxLoop+0x48>)
    gpio_mode_setup(GPIOD, GPIO_MODE_OUTPUT,
 80005b8:	f000 f94e 	bl	8000858 <gpio_mode_setup>
    gpio_set(GPIOD, GPIO12 | GPIO14);
 80005bc:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
 80005c0:	480b      	ldr	r0, [pc, #44]	; (80005f0 <relaxLoop+0x48>)
 80005c2:	f000 f93b 	bl	800083c <gpio_set>
    for (int j = 0; j < 15; j++) {
 80005c6:	2400      	movs	r4, #0
            otherBlock = false;
 80005c8:	4626      	mov	r6, r4
        if (otherBlock) {
 80005ca:	782b      	ldrb	r3, [r5, #0]
 80005cc:	b10b      	cbz	r3, 80005d2 <relaxLoop+0x2a>
            otherBlock = false;
 80005ce:	702e      	strb	r6, [r5, #0]
            j = 0;
 80005d0:	2400      	movs	r4, #0
        gpio_toggle(GPIOD, GPIO12 | GPIO13 | GPIO14 | GPIO15);
 80005d2:	f44f 4170 	mov.w	r1, #61440	; 0xf000
 80005d6:	4638      	mov	r0, r7
 80005d8:	f000 f932 	bl	8000840 <gpio_toggle>
 80005dc:	4b06      	ldr	r3, [pc, #24]	; (80005f8 <relaxLoop+0x50>)
        for (int i = 0; i < 3000000; i++) {
            __asm__("nop");
 80005de:	bf00      	nop
        for (int i = 0; i < 3000000; i++) {
 80005e0:	3b01      	subs	r3, #1
 80005e2:	d1fc      	bne.n	80005de <relaxLoop+0x36>
    for (int j = 0; j < 15; j++) {
 80005e4:	3401      	adds	r4, #1
 80005e6:	2c0e      	cmp	r4, #14
 80005e8:	ddef      	ble.n	80005ca <relaxLoop+0x22>
            __asm__("nop");
        }
    }
#endif
    // after blink - reboot
    resetJumper();
 80005ea:	f7ff ffd3 	bl	8000594 <resetJumper>
 80005ee:	bf00      	nop
 80005f0:	40020c00 	.word	0x40020c00
 80005f4:	20000099 	.word	0x20000099
 80005f8:	002dc6c0 	.word	0x002dc6c0

080005fc <relaxJumper>:
 80005fc:	b672      	cpsid	i
}

void relaxJumper(void) {
    cm_disable_interrupts();
    // relocate interrupt vectors
    SCB_VTOR = 0x08000000;
 80005fe:	4b04      	ldr	r3, [pc, #16]	; (8000610 <relaxJumper+0x14>)
 8000600:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000604:	601a      	str	r2, [r3, #0]
    // replace return address of usb-fs interrupt to relaxLoop
    __asm volatile("mov r1, %0\n"
 8000606:	4b03      	ldr	r3, [pc, #12]	; (8000614 <relaxJumper+0x18>)
 8000608:	4619      	mov	r1, r3
 800060a:	9118      	str	r1, [sp, #96]	; 0x60
	__asm__ volatile ("CPSIE I\n");
 800060c:	b662      	cpsie	i
 800060e:	4770      	bx	lr
 8000610:	e000ed08 	.word	0xe000ed08
 8000614:	080005a9 	.word	0x080005a9

08000618 <cdcacm_control_request>:

    (void)complete;
    (void)buf;
    (void)usbd_dev;

    switch (req->bRequest) {
 8000618:	7848      	ldrb	r0, [r1, #1]
 800061a:	2820      	cmp	r0, #32
 800061c:	d004      	beq.n	8000628 <cdcacm_control_request+0x10>
            return USBD_REQ_NOTSUPP;
        }

        return USBD_REQ_HANDLED;
    }
    return USBD_REQ_NOTSUPP;
 800061e:	f1a0 0322 	sub.w	r3, r0, #34	; 0x22
 8000622:	4258      	negs	r0, r3
 8000624:	4158      	adcs	r0, r3
 8000626:	4770      	bx	lr
        if (*len < sizeof(struct usb_cdc_line_coding)) {
 8000628:	8818      	ldrh	r0, [r3, #0]
        return USBD_REQ_HANDLED;
 800062a:	2806      	cmp	r0, #6
 800062c:	bf94      	ite	ls
 800062e:	2000      	movls	r0, #0
 8000630:	2001      	movhi	r0, #1
}
 8000632:	4770      	bx	lr

08000634 <cdcacm_init>:
	int len = ( serialOut.len > 64)? 64 : serialOut.len;
	for (int i = 0; i < len; i++) buf[i] = (char)getBufSerial(&serialOut);
	usbd_ep_write_packet(usbd_dev, 0x83, buf, len);
}

void cdcacm_init(void) { initBufSerial(&serialIn); initBufSerial(&serialOut); }
 8000634:	b508      	push	{r3, lr}
 8000636:	4804      	ldr	r0, [pc, #16]	; (8000648 <cdcacm_init+0x14>)
 8000638:	f7ff ff31 	bl	800049e <initBufSerial>
 800063c:	4803      	ldr	r0, [pc, #12]	; (800064c <cdcacm_init+0x18>)
 800063e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000642:	f7ff bf2c 	b.w	800049e <initBufSerial>
 8000646:	bf00      	nop
 8000648:	2000009a 	.word	0x2000009a
 800064c:	200001a0 	.word	0x200001a0

08000650 <cdcacm_out_ready>:

bool cdcacm_out_ready(void) { return canWrite(&serialOut); }
 8000650:	4801      	ldr	r0, [pc, #4]	; (8000658 <cdcacm_out_ready+0x8>)
 8000652:	f7ff bf29 	b.w	80004a8 <canWrite>
 8000656:	bf00      	nop
 8000658:	200001a0 	.word	0x200001a0

0800065c <cdcacm_putc>:

void cdcacm_putc(uint8_t c) {
 800065c:	b5f0      	push	{r4, r5, r6, r7, lr}
    putBufSerial(&serialOut, c);
 800065e:	4d10      	ldr	r5, [pc, #64]	; (80006a0 <cdcacm_putc+0x44>)
 8000660:	4601      	mov	r1, r0
void cdcacm_putc(uint8_t c) {
 8000662:	b091      	sub	sp, #68	; 0x44
    putBufSerial(&serialOut, c);
 8000664:	4628      	mov	r0, r5
 8000666:	f7ff ff43 	bl	80004f0 <putBufSerial>
    if(serialOut.len > 60) {
 800066a:	f9b5 4004 	ldrsh.w	r4, [r5, #4]
 800066e:	2c3c      	cmp	r4, #60	; 0x3c
 8000670:	dd13      	ble.n	800069a <cdcacm_putc+0x3e>
        cdcacm_data_tx_all( usbdDevice);
 8000672:	4b0c      	ldr	r3, [pc, #48]	; (80006a4 <cdcacm_putc+0x48>)
	int len = ( serialOut.len > 64)? 64 : serialOut.len;
 8000674:	2c40      	cmp	r4, #64	; 0x40
        cdcacm_data_tx_all( usbdDevice);
 8000676:	681f      	ldr	r7, [r3, #0]
	int len = ( serialOut.len > 64)? 64 : serialOut.len;
 8000678:	bfa8      	it	ge
 800067a:	2440      	movge	r4, #64	; 0x40
	for (int i = 0; i < len; i++) buf[i] = (char)getBufSerial(&serialOut);
 800067c:	2600      	movs	r6, #0
 800067e:	4628      	mov	r0, r5
 8000680:	f7ff ff20 	bl	80004c4 <getBufSerial>
 8000684:	f80d 0006 	strb.w	r0, [sp, r6]
 8000688:	3601      	adds	r6, #1
 800068a:	42b4      	cmp	r4, r6
 800068c:	dcf7      	bgt.n	800067e <cdcacm_putc+0x22>
	usbd_ep_write_packet(usbd_dev, 0x83, buf, len);
 800068e:	b2a3      	uxth	r3, r4
 8000690:	466a      	mov	r2, sp
 8000692:	2183      	movs	r1, #131	; 0x83
 8000694:	4638      	mov	r0, r7
 8000696:	f000 fb0d 	bl	8000cb4 <usbd_ep_write_packet>
    }
}
 800069a:	b011      	add	sp, #68	; 0x44
 800069c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800069e:	bf00      	nop
 80006a0:	200001a0 	.word	0x200001a0
 80006a4:	200002a8 	.word	0x200002a8

080006a8 <cdcacm_in_ready>:

bool cdcacm_in_ready(void) { return canRead(&serialIn); }
 80006a8:	4801      	ldr	r0, [pc, #4]	; (80006b0 <cdcacm_in_ready+0x8>)
 80006aa:	f7ff bf04 	b.w	80004b6 <canRead>
 80006ae:	bf00      	nop
 80006b0:	2000009a 	.word	0x2000009a

080006b4 <cdcacm_getc>:

int cdcacm_getc(void) { return getBufSerial(&serialIn); }
 80006b4:	b508      	push	{r3, lr}
 80006b6:	4802      	ldr	r0, [pc, #8]	; (80006c0 <cdcacm_getc+0xc>)
 80006b8:	f7ff ff04 	bl	80004c4 <getBufSerial>
 80006bc:	bd08      	pop	{r3, pc}
 80006be:	bf00      	nop
 80006c0:	2000009a 	.word	0x2000009a

080006c4 <cdcacm_data_rx_cb>:

static void cdcacm_data_rx_cb(usbd_device* usbd_dev, uint8_t ep) {
 80006c4:	b570      	push	{r4, r5, r6, lr}
 80006c6:	b090      	sub	sp, #64	; 0x40
    (void)ep;

    char buf[64];
    int len = usbd_ep_read_packet(usbd_dev, 0x03, buf, 64);
 80006c8:	2340      	movs	r3, #64	; 0x40
 80006ca:	466a      	mov	r2, sp
 80006cc:	2103      	movs	r1, #3
 80006ce:	f000 faf9 	bl	8000cc4 <usbd_ep_read_packet>

    for (int i = 0; i < len; i++) {
        putBufSerial(&serialIn, buf[i] + 1);
 80006d2:	4e0d      	ldr	r6, [pc, #52]	; (8000708 <cdcacm_data_rx_cb+0x44>)
    int len = usbd_ep_read_packet(usbd_dev, 0x03, buf, 64);
 80006d4:	4605      	mov	r5, r0
    for (int i = 0; i < len; i++) {
 80006d6:	2400      	movs	r4, #0
 80006d8:	42ac      	cmp	r4, r5
 80006da:	db04      	blt.n	80006e6 <cdcacm_data_rx_cb+0x22>
 80006dc:	2400      	movs	r4, #0
    }

	for (int i = 0; i < len; i++) {
 80006de:	42ac      	cmp	r4, r5
 80006e0:	db0a      	blt.n	80006f8 <cdcacm_data_rx_cb+0x34>
        cdcacm_putc( cdcacm_getc()+1);
    }
}
 80006e2:	b010      	add	sp, #64	; 0x40
 80006e4:	bd70      	pop	{r4, r5, r6, pc}
        putBufSerial(&serialIn, buf[i] + 1);
 80006e6:	f81d 1004 	ldrb.w	r1, [sp, r4]
 80006ea:	3101      	adds	r1, #1
 80006ec:	b2c9      	uxtb	r1, r1
 80006ee:	4630      	mov	r0, r6
 80006f0:	f7ff fefe 	bl	80004f0 <putBufSerial>
    for (int i = 0; i < len; i++) {
 80006f4:	3401      	adds	r4, #1
 80006f6:	e7ef      	b.n	80006d8 <cdcacm_data_rx_cb+0x14>
        cdcacm_putc( cdcacm_getc()+1);
 80006f8:	f7ff ffdc 	bl	80006b4 <cdcacm_getc>
 80006fc:	3001      	adds	r0, #1
 80006fe:	b2c0      	uxtb	r0, r0
 8000700:	f7ff ffac 	bl	800065c <cdcacm_putc>
	for (int i = 0; i < len; i++) {
 8000704:	3401      	adds	r4, #1
 8000706:	e7ea      	b.n	80006de <cdcacm_data_rx_cb+0x1a>
 8000708:	2000009a 	.word	0x2000009a

0800070c <cdcacm_set_config>:

void cdcacm_set_config(usbd_device* usbd_dev, uint16_t wValue) {
 800070c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    (void)wValue;

    usbd_ep_setup(usbd_dev, 0x03, USB_ENDPOINT_ATTR_BULK, 64, cdcacm_data_rx_cb);
 800070e:	4b10      	ldr	r3, [pc, #64]	; (8000750 <cdcacm_set_config+0x44>)
 8000710:	9300      	str	r3, [sp, #0]
void cdcacm_set_config(usbd_device* usbd_dev, uint16_t wValue) {
 8000712:	4604      	mov	r4, r0
    usbd_ep_setup(usbd_dev, 0x83, USB_ENDPOINT_ATTR_BULK, 64, NULL);
 8000714:	2500      	movs	r5, #0
    usbd_ep_setup(usbd_dev, 0x03, USB_ENDPOINT_ATTR_BULK, 64, cdcacm_data_rx_cb);
 8000716:	2340      	movs	r3, #64	; 0x40
 8000718:	2202      	movs	r2, #2
 800071a:	2103      	movs	r1, #3
 800071c:	f000 faa8 	bl	8000c70 <usbd_ep_setup>
    usbd_ep_setup(usbd_dev, 0x83, USB_ENDPOINT_ATTR_BULK, 64, NULL);
 8000720:	4620      	mov	r0, r4
 8000722:	9500      	str	r5, [sp, #0]
 8000724:	2340      	movs	r3, #64	; 0x40
 8000726:	2202      	movs	r2, #2
 8000728:	2183      	movs	r1, #131	; 0x83
 800072a:	f000 faa1 	bl	8000c70 <usbd_ep_setup>
    usbd_ep_setup(usbd_dev, 0x84, USB_ENDPOINT_ATTR_INTERRUPT, 16, NULL);
 800072e:	4620      	mov	r0, r4
 8000730:	9500      	str	r5, [sp, #0]
 8000732:	2310      	movs	r3, #16
 8000734:	2203      	movs	r2, #3
 8000736:	2184      	movs	r1, #132	; 0x84
 8000738:	f000 fa9a 	bl	8000c70 <usbd_ep_setup>

    usbd_register_control_callback(
 800073c:	4b05      	ldr	r3, [pc, #20]	; (8000754 <cdcacm_set_config+0x48>)
 800073e:	227f      	movs	r2, #127	; 0x7f
 8000740:	2121      	movs	r1, #33	; 0x21
 8000742:	4620      	mov	r0, r4
        usbd_dev, USB_REQ_TYPE_CLASS | USB_REQ_TYPE_INTERFACE,
        USB_REQ_TYPE_TYPE | USB_REQ_TYPE_RECIPIENT, cdcacm_control_request);
}
 8000744:	b003      	add	sp, #12
 8000746:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    usbd_register_control_callback(
 800074a:	f000 be15 	b.w	8001378 <usbd_register_control_callback>
 800074e:	bf00      	nop
 8000750:	080006c5 	.word	0x080006c5
 8000754:	08000619 	.word	0x08000619

08000758 <flash_unlock>:
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <flash_unlock+0x10>)
 800075a:	4a04      	ldr	r2, [pc, #16]	; (800076c <flash_unlock+0x14>)
 800075c:	601a      	str	r2, [r3, #0]
 800075e:	f102 3288 	add.w	r2, r2, #2290649224	; 0x88888888
 8000762:	601a      	str	r2, [r3, #0]
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	40023c04 	.word	0x40023c04
 800076c:	45670123 	.word	0x45670123

08000770 <flash_lock>:
 8000770:	4a02      	ldr	r2, [pc, #8]	; (800077c <flash_lock+0xc>)
 8000772:	6813      	ldr	r3, [r2, #0]
 8000774:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000778:	6013      	str	r3, [r2, #0]
 800077a:	4770      	bx	lr
 800077c:	40023c10 	.word	0x40023c10

08000780 <flash_set_program_size>:
 8000780:	4b04      	ldr	r3, [pc, #16]	; (8000794 <flash_set_program_size+0x14>)
 8000782:	681a      	ldr	r2, [r3, #0]
 8000784:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8000788:	601a      	str	r2, [r3, #0]
 800078a:	681a      	ldr	r2, [r3, #0]
 800078c:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 8000790:	6018      	str	r0, [r3, #0]
 8000792:	4770      	bx	lr
 8000794:	40023c10 	.word	0x40023c10

08000798 <flash_program_byte>:
 8000798:	b570      	push	{r4, r5, r6, lr}
 800079a:	4c0a      	ldr	r4, [pc, #40]	; (80007c4 <flash_program_byte+0x2c>)
 800079c:	460e      	mov	r6, r1
 800079e:	4605      	mov	r5, r0
 80007a0:	f001 fa8e 	bl	8001cc0 <flash_wait_for_last_operation>
 80007a4:	2000      	movs	r0, #0
 80007a6:	f7ff ffeb 	bl	8000780 <flash_set_program_size>
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	f043 0301 	orr.w	r3, r3, #1
 80007b0:	6023      	str	r3, [r4, #0]
 80007b2:	702e      	strb	r6, [r5, #0]
 80007b4:	f001 fa84 	bl	8001cc0 <flash_wait_for_last_operation>
 80007b8:	6823      	ldr	r3, [r4, #0]
 80007ba:	f023 0301 	bic.w	r3, r3, #1
 80007be:	6023      	str	r3, [r4, #0]
 80007c0:	bd70      	pop	{r4, r5, r6, pc}
 80007c2:	bf00      	nop
 80007c4:	40023c10 	.word	0x40023c10

080007c8 <flash_program>:
 80007c8:	b570      	push	{r4, r5, r6, lr}
 80007ca:	188d      	adds	r5, r1, r2
 80007cc:	460c      	mov	r4, r1
 80007ce:	1a46      	subs	r6, r0, r1
 80007d0:	42ac      	cmp	r4, r5
 80007d2:	d100      	bne.n	80007d6 <flash_program+0xe>
 80007d4:	bd70      	pop	{r4, r5, r6, pc}
 80007d6:	1930      	adds	r0, r6, r4
 80007d8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80007dc:	f7ff ffdc 	bl	8000798 <flash_program_byte>
 80007e0:	e7f6      	b.n	80007d0 <flash_program+0x8>
	...

080007e4 <flash_erase_sector>:
 80007e4:	b538      	push	{r3, r4, r5, lr}
 80007e6:	460c      	mov	r4, r1
 80007e8:	4605      	mov	r5, r0
 80007ea:	f001 fa69 	bl	8001cc0 <flash_wait_for_last_operation>
 80007ee:	4620      	mov	r0, r4
 80007f0:	4c11      	ldr	r4, [pc, #68]	; (8000838 <flash_erase_sector+0x54>)
 80007f2:	f7ff ffc5 	bl	8000780 <flash_set_program_size>
 80007f6:	6823      	ldr	r3, [r4, #0]
 80007f8:	2d0b      	cmp	r5, #11
 80007fa:	bf88      	it	hi
 80007fc:	3504      	addhi	r5, #4
 80007fe:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8000802:	6023      	str	r3, [r4, #0]
 8000804:	bf88      	it	hi
 8000806:	b2ed      	uxtbhi	r5, r5
 8000808:	6823      	ldr	r3, [r4, #0]
 800080a:	00ed      	lsls	r5, r5, #3
 800080c:	b2ed      	uxtb	r5, r5
 800080e:	431d      	orrs	r5, r3
 8000810:	6025      	str	r5, [r4, #0]
 8000812:	6823      	ldr	r3, [r4, #0]
 8000814:	f043 0302 	orr.w	r3, r3, #2
 8000818:	6023      	str	r3, [r4, #0]
 800081a:	6823      	ldr	r3, [r4, #0]
 800081c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000820:	6023      	str	r3, [r4, #0]
 8000822:	f001 fa4d 	bl	8001cc0 <flash_wait_for_last_operation>
 8000826:	6823      	ldr	r3, [r4, #0]
 8000828:	f023 0302 	bic.w	r3, r3, #2
 800082c:	6023      	str	r3, [r4, #0]
 800082e:	6823      	ldr	r3, [r4, #0]
 8000830:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8000834:	6023      	str	r3, [r4, #0]
 8000836:	bd38      	pop	{r3, r4, r5, pc}
 8000838:	40023c10 	.word	0x40023c10

0800083c <gpio_set>:
 800083c:	6181      	str	r1, [r0, #24]
 800083e:	4770      	bx	lr

08000840 <gpio_toggle>:
 8000840:	6943      	ldr	r3, [r0, #20]
 8000842:	ea03 0201 	and.w	r2, r3, r1
 8000846:	ea21 0103 	bic.w	r1, r1, r3
 800084a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800084e:	6181      	str	r1, [r0, #24]
 8000850:	4770      	bx	lr

08000852 <gpio_port_read>:
 8000852:	6900      	ldr	r0, [r0, #16]
 8000854:	b280      	uxth	r0, r0
 8000856:	4770      	bx	lr

08000858 <gpio_mode_setup>:
 8000858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800085c:	6805      	ldr	r5, [r0, #0]
 800085e:	68c4      	ldr	r4, [r0, #12]
 8000860:	2600      	movs	r6, #0
 8000862:	f04f 0c03 	mov.w	ip, #3
 8000866:	fa43 f706 	asr.w	r7, r3, r6
 800086a:	07ff      	lsls	r7, r7, #31
 800086c:	d50f      	bpl.n	800088e <gpio_mode_setup+0x36>
 800086e:	0077      	lsls	r7, r6, #1
 8000870:	fa0c fe07 	lsl.w	lr, ip, r7
 8000874:	ea6f 0e0e 	mvn.w	lr, lr
 8000878:	fa01 f807 	lsl.w	r8, r1, r7
 800087c:	ea0e 0505 	and.w	r5, lr, r5
 8000880:	ea0e 0404 	and.w	r4, lr, r4
 8000884:	fa02 f707 	lsl.w	r7, r2, r7
 8000888:	ea48 0505 	orr.w	r5, r8, r5
 800088c:	433c      	orrs	r4, r7
 800088e:	3601      	adds	r6, #1
 8000890:	2e10      	cmp	r6, #16
 8000892:	d1e8      	bne.n	8000866 <gpio_mode_setup+0xe>
 8000894:	6005      	str	r5, [r0, #0]
 8000896:	60c4      	str	r4, [r0, #12]
 8000898:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800089c <gpio_set_af>:
 800089c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800089e:	6a07      	ldr	r7, [r0, #32]
 80008a0:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80008a2:	2300      	movs	r3, #0
 80008a4:	f04f 0e0f 	mov.w	lr, #15
 80008a8:	fa42 f403 	asr.w	r4, r2, r3
 80008ac:	07e5      	lsls	r5, r4, #31
 80008ae:	d507      	bpl.n	80008c0 <gpio_set_af+0x24>
 80008b0:	009d      	lsls	r5, r3, #2
 80008b2:	fa0e f405 	lsl.w	r4, lr, r5
 80008b6:	ea27 0704 	bic.w	r7, r7, r4
 80008ba:	fa01 f505 	lsl.w	r5, r1, r5
 80008be:	432f      	orrs	r7, r5
 80008c0:	3301      	adds	r3, #1
 80008c2:	2b08      	cmp	r3, #8
 80008c4:	d1f0      	bne.n	80008a8 <gpio_set_af+0xc>
 80008c6:	2300      	movs	r3, #0
 80008c8:	f04f 0e0f 	mov.w	lr, #15
 80008cc:	f103 0408 	add.w	r4, r3, #8
 80008d0:	fa42 f404 	asr.w	r4, r2, r4
 80008d4:	07e4      	lsls	r4, r4, #31
 80008d6:	d507      	bpl.n	80008e8 <gpio_set_af+0x4c>
 80008d8:	009c      	lsls	r4, r3, #2
 80008da:	fa0e f504 	lsl.w	r5, lr, r4
 80008de:	ea26 0605 	bic.w	r6, r6, r5
 80008e2:	fa01 f404 	lsl.w	r4, r1, r4
 80008e6:	4326      	orrs	r6, r4
 80008e8:	3301      	adds	r3, #1
 80008ea:	2b08      	cmp	r3, #8
 80008ec:	d1ee      	bne.n	80008cc <gpio_set_af+0x30>
 80008ee:	6207      	str	r7, [r0, #32]
 80008f0:	6246      	str	r6, [r0, #36]	; 0x24
 80008f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080008f4 <rcc_peripheral_enable_clock>:
 80008f4:	6803      	ldr	r3, [r0, #0]
 80008f6:	4319      	orrs	r1, r3
 80008f8:	6001      	str	r1, [r0, #0]
 80008fa:	4770      	bx	lr

080008fc <rcc_periph_clock_enable>:
 80008fc:	0943      	lsrs	r3, r0, #5
 80008fe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000902:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8000906:	f000 021f 	and.w	r2, r0, #31
 800090a:	6819      	ldr	r1, [r3, #0]
 800090c:	2001      	movs	r0, #1
 800090e:	4090      	lsls	r0, r2
 8000910:	4308      	orrs	r0, r1
 8000912:	6018      	str	r0, [r3, #0]
 8000914:	4770      	bx	lr
	...

08000918 <rcc_is_osc_ready>:
 8000918:	2806      	cmp	r0, #6
 800091a:	d822      	bhi.n	8000962 <rcc_is_osc_ready+0x4a>
 800091c:	e8df f000 	tbb	[pc, r0]
 8000920:	091c1704 	.word	0x091c1704
 8000924:	130e      	.short	0x130e
 8000926:	15          	.byte	0x15
 8000927:	00          	.byte	0x00
 8000928:	4b0f      	ldr	r3, [pc, #60]	; (8000968 <rcc_is_osc_ready+0x50>)
 800092a:	6818      	ldr	r0, [r3, #0]
 800092c:	f3c0 6040 	ubfx	r0, r0, #25, #1
 8000930:	4770      	bx	lr
 8000932:	4b0d      	ldr	r3, [pc, #52]	; (8000968 <rcc_is_osc_ready+0x50>)
 8000934:	6818      	ldr	r0, [r3, #0]
 8000936:	f3c0 4040 	ubfx	r0, r0, #17, #1
 800093a:	4770      	bx	lr
 800093c:	4b0a      	ldr	r3, [pc, #40]	; (8000968 <rcc_is_osc_ready+0x50>)
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8000944:	4770      	bx	lr
 8000946:	4b09      	ldr	r3, [pc, #36]	; (800096c <rcc_is_osc_ready+0x54>)
 8000948:	e7f9      	b.n	800093e <rcc_is_osc_ready+0x26>
 800094a:	4b09      	ldr	r3, [pc, #36]	; (8000970 <rcc_is_osc_ready+0x58>)
 800094c:	e7f7      	b.n	800093e <rcc_is_osc_ready+0x26>
 800094e:	4b06      	ldr	r3, [pc, #24]	; (8000968 <rcc_is_osc_ready+0x50>)
 8000950:	6818      	ldr	r0, [r3, #0]
 8000952:	f3c0 7040 	ubfx	r0, r0, #29, #1
 8000956:	4770      	bx	lr
 8000958:	4b03      	ldr	r3, [pc, #12]	; (8000968 <rcc_is_osc_ready+0x50>)
 800095a:	6818      	ldr	r0, [r3, #0]
 800095c:	f3c0 60c0 	ubfx	r0, r0, #27, #1
 8000960:	4770      	bx	lr
 8000962:	2000      	movs	r0, #0
 8000964:	4770      	bx	lr
 8000966:	bf00      	nop
 8000968:	40023800 	.word	0x40023800
 800096c:	40023870 	.word	0x40023870
 8000970:	40023874 	.word	0x40023874

08000974 <rcc_wait_for_osc_ready>:
 8000974:	b508      	push	{r3, lr}
 8000976:	4602      	mov	r2, r0
 8000978:	4610      	mov	r0, r2
 800097a:	f7ff ffcd 	bl	8000918 <rcc_is_osc_ready>
 800097e:	2800      	cmp	r0, #0
 8000980:	d0fa      	beq.n	8000978 <rcc_wait_for_osc_ready+0x4>
 8000982:	bd08      	pop	{r3, pc}

08000984 <rcc_osc_on>:
 8000984:	2806      	cmp	r0, #6
 8000986:	d80a      	bhi.n	800099e <rcc_osc_on+0x1a>
 8000988:	e8df f000 	tbb	[pc, r0]
 800098c:	0a1d1804 	.word	0x0a1d1804
 8000990:	140f      	.short	0x140f
 8000992:	16          	.byte	0x16
 8000993:	00          	.byte	0x00
 8000994:	4a0e      	ldr	r2, [pc, #56]	; (80009d0 <rcc_osc_on+0x4c>)
 8000996:	6813      	ldr	r3, [r2, #0]
 8000998:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800099c:	6013      	str	r3, [r2, #0]
 800099e:	4770      	bx	lr
 80009a0:	4a0b      	ldr	r2, [pc, #44]	; (80009d0 <rcc_osc_on+0x4c>)
 80009a2:	6813      	ldr	r3, [r2, #0]
 80009a4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80009a8:	e7f8      	b.n	800099c <rcc_osc_on+0x18>
 80009aa:	4a09      	ldr	r2, [pc, #36]	; (80009d0 <rcc_osc_on+0x4c>)
 80009ac:	6813      	ldr	r3, [r2, #0]
 80009ae:	f043 0301 	orr.w	r3, r3, #1
 80009b2:	e7f3      	b.n	800099c <rcc_osc_on+0x18>
 80009b4:	4a07      	ldr	r2, [pc, #28]	; (80009d4 <rcc_osc_on+0x50>)
 80009b6:	e7f9      	b.n	80009ac <rcc_osc_on+0x28>
 80009b8:	4a07      	ldr	r2, [pc, #28]	; (80009d8 <rcc_osc_on+0x54>)
 80009ba:	e7f7      	b.n	80009ac <rcc_osc_on+0x28>
 80009bc:	4a04      	ldr	r2, [pc, #16]	; (80009d0 <rcc_osc_on+0x4c>)
 80009be:	6813      	ldr	r3, [r2, #0]
 80009c0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80009c4:	e7ea      	b.n	800099c <rcc_osc_on+0x18>
 80009c6:	4a02      	ldr	r2, [pc, #8]	; (80009d0 <rcc_osc_on+0x4c>)
 80009c8:	6813      	ldr	r3, [r2, #0]
 80009ca:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80009ce:	e7e5      	b.n	800099c <rcc_osc_on+0x18>
 80009d0:	40023800 	.word	0x40023800
 80009d4:	40023870 	.word	0x40023870
 80009d8:	40023874 	.word	0x40023874

080009dc <rcc_osc_off>:
 80009dc:	2806      	cmp	r0, #6
 80009de:	d80a      	bhi.n	80009f6 <rcc_osc_off+0x1a>
 80009e0:	e8df f000 	tbb	[pc, r0]
 80009e4:	0a1d1804 	.word	0x0a1d1804
 80009e8:	140f      	.short	0x140f
 80009ea:	16          	.byte	0x16
 80009eb:	00          	.byte	0x00
 80009ec:	4a0e      	ldr	r2, [pc, #56]	; (8000a28 <rcc_osc_off+0x4c>)
 80009ee:	6813      	ldr	r3, [r2, #0]
 80009f0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80009f4:	6013      	str	r3, [r2, #0]
 80009f6:	4770      	bx	lr
 80009f8:	4a0b      	ldr	r2, [pc, #44]	; (8000a28 <rcc_osc_off+0x4c>)
 80009fa:	6813      	ldr	r3, [r2, #0]
 80009fc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000a00:	e7f8      	b.n	80009f4 <rcc_osc_off+0x18>
 8000a02:	4a09      	ldr	r2, [pc, #36]	; (8000a28 <rcc_osc_off+0x4c>)
 8000a04:	6813      	ldr	r3, [r2, #0]
 8000a06:	f023 0301 	bic.w	r3, r3, #1
 8000a0a:	e7f3      	b.n	80009f4 <rcc_osc_off+0x18>
 8000a0c:	4a07      	ldr	r2, [pc, #28]	; (8000a2c <rcc_osc_off+0x50>)
 8000a0e:	e7f9      	b.n	8000a04 <rcc_osc_off+0x28>
 8000a10:	4a07      	ldr	r2, [pc, #28]	; (8000a30 <rcc_osc_off+0x54>)
 8000a12:	e7f7      	b.n	8000a04 <rcc_osc_off+0x28>
 8000a14:	4a04      	ldr	r2, [pc, #16]	; (8000a28 <rcc_osc_off+0x4c>)
 8000a16:	6813      	ldr	r3, [r2, #0]
 8000a18:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8000a1c:	e7ea      	b.n	80009f4 <rcc_osc_off+0x18>
 8000a1e:	4a02      	ldr	r2, [pc, #8]	; (8000a28 <rcc_osc_off+0x4c>)
 8000a20:	6813      	ldr	r3, [r2, #0]
 8000a22:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8000a26:	e7e5      	b.n	80009f4 <rcc_osc_off+0x18>
 8000a28:	40023800 	.word	0x40023800
 8000a2c:	40023870 	.word	0x40023870
 8000a30:	40023874 	.word	0x40023874

08000a34 <rcc_set_sysclk_source>:
 8000a34:	4a03      	ldr	r2, [pc, #12]	; (8000a44 <rcc_set_sysclk_source+0x10>)
 8000a36:	6813      	ldr	r3, [r2, #0]
 8000a38:	f023 0303 	bic.w	r3, r3, #3
 8000a3c:	4318      	orrs	r0, r3
 8000a3e:	6010      	str	r0, [r2, #0]
 8000a40:	4770      	bx	lr
 8000a42:	bf00      	nop
 8000a44:	40023808 	.word	0x40023808

08000a48 <rcc_set_ppre2>:
 8000a48:	4a03      	ldr	r2, [pc, #12]	; (8000a58 <rcc_set_ppre2+0x10>)
 8000a4a:	6813      	ldr	r3, [r2, #0]
 8000a4c:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8000a50:	ea43 3040 	orr.w	r0, r3, r0, lsl #13
 8000a54:	6010      	str	r0, [r2, #0]
 8000a56:	4770      	bx	lr
 8000a58:	40023808 	.word	0x40023808

08000a5c <rcc_set_ppre1>:
 8000a5c:	4a03      	ldr	r2, [pc, #12]	; (8000a6c <rcc_set_ppre1+0x10>)
 8000a5e:	6813      	ldr	r3, [r2, #0]
 8000a60:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000a64:	ea43 2080 	orr.w	r0, r3, r0, lsl #10
 8000a68:	6010      	str	r0, [r2, #0]
 8000a6a:	4770      	bx	lr
 8000a6c:	40023808 	.word	0x40023808

08000a70 <rcc_set_hpre>:
 8000a70:	4a03      	ldr	r2, [pc, #12]	; (8000a80 <rcc_set_hpre+0x10>)
 8000a72:	6813      	ldr	r3, [r2, #0]
 8000a74:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000a78:	ea43 1000 	orr.w	r0, r3, r0, lsl #4
 8000a7c:	6010      	str	r0, [r2, #0]
 8000a7e:	4770      	bx	lr
 8000a80:	40023808 	.word	0x40023808

08000a84 <rcc_set_main_pll_hsi>:
 8000a84:	b510      	push	{r4, lr}
 8000a86:	f647 74c0 	movw	r4, #32704	; 0x7fc0
 8000a8a:	ea04 1181 	and.w	r1, r4, r1, lsl #6
 8000a8e:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8000a92:	061b      	lsls	r3, r3, #24
 8000a94:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8000a98:	4301      	orrs	r1, r0
 8000a9a:	4319      	orrs	r1, r3
 8000a9c:	9b02      	ldr	r3, [sp, #8]
 8000a9e:	0854      	lsrs	r4, r2, #1
 8000aa0:	2b02      	cmp	r3, #2
 8000aa2:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 8000aa6:	ea4f 4404 	mov.w	r4, r4, lsl #16
 8000aaa:	bf38      	it	cc
 8000aac:	2302      	movcc	r3, #2
 8000aae:	f404 3440 	and.w	r4, r4, #196608	; 0x30000
 8000ab2:	071b      	lsls	r3, r3, #28
 8000ab4:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8000ab8:	4321      	orrs	r1, r4
 8000aba:	4319      	orrs	r1, r3
 8000abc:	4b01      	ldr	r3, [pc, #4]	; (8000ac4 <rcc_set_main_pll_hsi+0x40>)
 8000abe:	6019      	str	r1, [r3, #0]
 8000ac0:	bd10      	pop	{r4, pc}
 8000ac2:	bf00      	nop
 8000ac4:	40023804 	.word	0x40023804

08000ac8 <rcc_set_main_pll_hse>:
 8000ac8:	061b      	lsls	r3, r3, #24
 8000aca:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8000ace:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8000ad2:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000ad6:	4303      	orrs	r3, r0
 8000ad8:	f647 70c0 	movw	r0, #32704	; 0x7fc0
 8000adc:	ea00 1181 	and.w	r1, r0, r1, lsl #6
 8000ae0:	430b      	orrs	r3, r1
 8000ae2:	0851      	lsrs	r1, r2, #1
 8000ae4:	9a00      	ldr	r2, [sp, #0]
 8000ae6:	3901      	subs	r1, #1
 8000ae8:	2a02      	cmp	r2, #2
 8000aea:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8000aee:	bf38      	it	cc
 8000af0:	2202      	movcc	r2, #2
 8000af2:	f401 3140 	and.w	r1, r1, #196608	; 0x30000
 8000af6:	0712      	lsls	r2, r2, #28
 8000af8:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8000afc:	430b      	orrs	r3, r1
 8000afe:	4313      	orrs	r3, r2
 8000b00:	4a01      	ldr	r2, [pc, #4]	; (8000b08 <rcc_set_main_pll_hse+0x40>)
 8000b02:	6013      	str	r3, [r2, #0]
 8000b04:	4770      	bx	lr
 8000b06:	bf00      	nop
 8000b08:	40023804 	.word	0x40023804

08000b0c <rcc_clock_setup_pll>:
 8000b0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000b0e:	4604      	mov	r4, r0
 8000b10:	2004      	movs	r0, #4
 8000b12:	f7ff ff37 	bl	8000984 <rcc_osc_on>
 8000b16:	2004      	movs	r0, #4
 8000b18:	f7ff ff2c 	bl	8000974 <rcc_wait_for_osc_ready>
 8000b1c:	2000      	movs	r0, #0
 8000b1e:	f7ff ff89 	bl	8000a34 <rcc_set_sysclk_source>
 8000b22:	79e3      	ldrb	r3, [r4, #7]
 8000b24:	2b01      	cmp	r3, #1
 8000b26:	d105      	bne.n	8000b34 <rcc_clock_setup_pll+0x28>
 8000b28:	2003      	movs	r0, #3
 8000b2a:	f7ff ff2b 	bl	8000984 <rcc_osc_on>
 8000b2e:	2003      	movs	r0, #3
 8000b30:	f7ff ff20 	bl	8000974 <rcc_wait_for_osc_ready>
 8000b34:	f640 011c 	movw	r1, #2076	; 0x81c
 8000b38:	482c      	ldr	r0, [pc, #176]	; (8000bec <rcc_clock_setup_pll+0xe0>)
 8000b3a:	f7ff fedb 	bl	80008f4 <rcc_peripheral_enable_clock>
 8000b3e:	7be0      	ldrb	r0, [r4, #15]
 8000b40:	f001 f8f0 	bl	8001d24 <pwr_set_vos_scale>
 8000b44:	7b20      	ldrb	r0, [r4, #12]
 8000b46:	f7ff ff93 	bl	8000a70 <rcc_set_hpre>
 8000b4a:	7b60      	ldrb	r0, [r4, #13]
 8000b4c:	f7ff ff86 	bl	8000a5c <rcc_set_ppre1>
 8000b50:	7ba0      	ldrb	r0, [r4, #14]
 8000b52:	f7ff ff79 	bl	8000a48 <rcc_set_ppre2>
 8000b56:	4a26      	ldr	r2, [pc, #152]	; (8000bf0 <rcc_clock_setup_pll+0xe4>)
 8000b58:	8861      	ldrh	r1, [r4, #2]
 8000b5a:	6813      	ldr	r3, [r2, #0]
 8000b5c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000b60:	6013      	str	r3, [r2, #0]
 8000b62:	79e3      	ldrb	r3, [r4, #7]
 8000b64:	79a5      	ldrb	r5, [r4, #6]
 8000b66:	7922      	ldrb	r2, [r4, #4]
 8000b68:	7820      	ldrb	r0, [r4, #0]
 8000b6a:	9500      	str	r5, [sp, #0]
 8000b6c:	2b01      	cmp	r3, #1
 8000b6e:	7963      	ldrb	r3, [r4, #5]
 8000b70:	d131      	bne.n	8000bd6 <rcc_clock_setup_pll+0xca>
 8000b72:	f7ff ffa9 	bl	8000ac8 <rcc_set_main_pll_hse>
 8000b76:	4a1e      	ldr	r2, [pc, #120]	; (8000bf0 <rcc_clock_setup_pll+0xe4>)
 8000b78:	6813      	ldr	r3, [r2, #0]
 8000b7a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000b7e:	6013      	str	r3, [r2, #0]
 8000b80:	2000      	movs	r0, #0
 8000b82:	f7ff fef7 	bl	8000974 <rcc_wait_for_osc_ready>
 8000b86:	68a3      	ldr	r3, [r4, #8]
 8000b88:	055a      	lsls	r2, r3, #21
 8000b8a:	d527      	bpl.n	8000bdc <rcc_clock_setup_pll+0xd0>
 8000b8c:	f001 f8aa 	bl	8001ce4 <flash_dcache_enable>
 8000b90:	68a3      	ldr	r3, [r4, #8]
 8000b92:	059b      	lsls	r3, r3, #22
 8000b94:	d525      	bpl.n	8000be2 <rcc_clock_setup_pll+0xd6>
 8000b96:	f001 f8b5 	bl	8001d04 <flash_icache_enable>
 8000b9a:	68a0      	ldr	r0, [r4, #8]
 8000b9c:	f001 f898 	bl	8001cd0 <flash_set_ws>
 8000ba0:	2002      	movs	r0, #2
 8000ba2:	f7ff ff47 	bl	8000a34 <rcc_set_sysclk_source>
 8000ba6:	4a13      	ldr	r2, [pc, #76]	; (8000bf4 <rcc_clock_setup_pll+0xe8>)
 8000ba8:	6813      	ldr	r3, [r2, #0]
 8000baa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8000bae:	2b02      	cmp	r3, #2
 8000bb0:	d1fa      	bne.n	8000ba8 <rcc_clock_setup_pll+0x9c>
 8000bb2:	4b11      	ldr	r3, [pc, #68]	; (8000bf8 <rcc_clock_setup_pll+0xec>)
 8000bb4:	6922      	ldr	r2, [r4, #16]
 8000bb6:	601a      	str	r2, [r3, #0]
 8000bb8:	4b10      	ldr	r3, [pc, #64]	; (8000bfc <rcc_clock_setup_pll+0xf0>)
 8000bba:	6962      	ldr	r2, [r4, #20]
 8000bbc:	601a      	str	r2, [r3, #0]
 8000bbe:	4b10      	ldr	r3, [pc, #64]	; (8000c00 <rcc_clock_setup_pll+0xf4>)
 8000bc0:	69a2      	ldr	r2, [r4, #24]
 8000bc2:	601a      	str	r2, [r3, #0]
 8000bc4:	79e3      	ldrb	r3, [r4, #7]
 8000bc6:	2b01      	cmp	r3, #1
 8000bc8:	d10e      	bne.n	8000be8 <rcc_clock_setup_pll+0xdc>
 8000bca:	2004      	movs	r0, #4
 8000bcc:	b003      	add	sp, #12
 8000bce:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000bd2:	f7ff bf03 	b.w	80009dc <rcc_osc_off>
 8000bd6:	f7ff ff55 	bl	8000a84 <rcc_set_main_pll_hsi>
 8000bda:	e7cc      	b.n	8000b76 <rcc_clock_setup_pll+0x6a>
 8000bdc:	f001 f88a 	bl	8001cf4 <flash_dcache_disable>
 8000be0:	e7d6      	b.n	8000b90 <rcc_clock_setup_pll+0x84>
 8000be2:	f001 f897 	bl	8001d14 <flash_icache_disable>
 8000be6:	e7d8      	b.n	8000b9a <rcc_clock_setup_pll+0x8e>
 8000be8:	b003      	add	sp, #12
 8000bea:	bd30      	pop	{r4, r5, pc}
 8000bec:	40023840 	.word	0x40023840
 8000bf0:	40023800 	.word	0x40023800
 8000bf4:	40023808 	.word	0x40023808
 8000bf8:	2000000c 	.word	0x2000000c
 8000bfc:	20000010 	.word	0x20000010
 8000c00:	20000014 	.word	0x20000014

08000c04 <usbd_init>:
 8000c04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c08:	461e      	mov	r6, r3
 8000c0a:	6803      	ldr	r3, [r0, #0]
 8000c0c:	4605      	mov	r5, r0
 8000c0e:	4688      	mov	r8, r1
 8000c10:	4617      	mov	r7, r2
 8000c12:	4798      	blx	r3
 8000c14:	9b06      	ldr	r3, [sp, #24]
 8000c16:	60c3      	str	r3, [r0, #12]
 8000c18:	9b07      	ldr	r3, [sp, #28]
 8000c1a:	6103      	str	r3, [r0, #16]
 8000c1c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8000c20:	8283      	strh	r3, [r0, #20]
 8000c22:	4b0b      	ldr	r3, [pc, #44]	; (8000c50 <usbd_init+0x4c>)
 8000c24:	6703      	str	r3, [r0, #112]	; 0x70
 8000c26:	4b0b      	ldr	r3, [pc, #44]	; (8000c54 <usbd_init+0x50>)
 8000c28:	66c3      	str	r3, [r0, #108]	; 0x6c
 8000c2a:	4b0b      	ldr	r3, [pc, #44]	; (8000c58 <usbd_init+0x54>)
 8000c2c:	6683      	str	r3, [r0, #104]	; 0x68
 8000c2e:	2300      	movs	r3, #0
 8000c30:	f8c0 50dc 	str.w	r5, [r0, #220]	; 0xdc
 8000c34:	f8c0 8000 	str.w	r8, [r0]
 8000c38:	6047      	str	r7, [r0, #4]
 8000c3a:	6086      	str	r6, [r0, #8]
 8000c3c:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 8000c40:	f8c0 30cc 	str.w	r3, [r0, #204]	; 0xcc
 8000c44:	f8c0 30d0 	str.w	r3, [r0, #208]	; 0xd0
 8000c48:	f8c0 30d4 	str.w	r3, [r0, #212]	; 0xd4
 8000c4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c50:	0800139f 	.word	0x0800139f
 8000c54:	080013ff 	.word	0x080013ff
 8000c58:	08001483 	.word	0x08001483

08000c5c <usbd_poll>:
 8000c5c:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000c60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000c62:	4718      	bx	r3

08000c64 <usbd_disconnect>:
 8000c64:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000c68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000c6a:	b103      	cbz	r3, 8000c6e <usbd_disconnect+0xa>
 8000c6c:	4718      	bx	r3
 8000c6e:	4770      	bx	lr

08000c70 <usbd_ep_setup>:
 8000c70:	b410      	push	{r4}
 8000c72:	f8d0 40dc 	ldr.w	r4, [r0, #220]	; 0xdc
 8000c76:	68a4      	ldr	r4, [r4, #8]
 8000c78:	46a4      	mov	ip, r4
 8000c7a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c7e:	4760      	bx	ip

08000c80 <_usbd_reset>:
 8000c80:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000c82:	6803      	ldr	r3, [r0, #0]
 8000c84:	2500      	movs	r5, #0
 8000c86:	4604      	mov	r4, r0
 8000c88:	7585      	strb	r5, [r0, #22]
 8000c8a:	75c5      	strb	r5, [r0, #23]
 8000c8c:	79db      	ldrb	r3, [r3, #7]
 8000c8e:	9500      	str	r5, [sp, #0]
 8000c90:	462a      	mov	r2, r5
 8000c92:	4629      	mov	r1, r5
 8000c94:	f7ff ffec 	bl	8000c70 <usbd_ep_setup>
 8000c98:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8000c9c:	4629      	mov	r1, r5
 8000c9e:	685b      	ldr	r3, [r3, #4]
 8000ca0:	4620      	mov	r0, r4
 8000ca2:	4798      	blx	r3
 8000ca4:	69e3      	ldr	r3, [r4, #28]
 8000ca6:	b11b      	cbz	r3, 8000cb0 <_usbd_reset+0x30>
 8000ca8:	b003      	add	sp, #12
 8000caa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000cae:	4718      	bx	r3
 8000cb0:	b003      	add	sp, #12
 8000cb2:	bd30      	pop	{r4, r5, pc}

08000cb4 <usbd_ep_write_packet>:
 8000cb4:	b410      	push	{r4}
 8000cb6:	f8d0 40dc 	ldr.w	r4, [r0, #220]	; 0xdc
 8000cba:	69e4      	ldr	r4, [r4, #28]
 8000cbc:	46a4      	mov	ip, r4
 8000cbe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cc2:	4760      	bx	ip

08000cc4 <usbd_ep_read_packet>:
 8000cc4:	b410      	push	{r4}
 8000cc6:	f8d0 40dc 	ldr.w	r4, [r0, #220]	; 0xdc
 8000cca:	6a24      	ldr	r4, [r4, #32]
 8000ccc:	46a4      	mov	ip, r4
 8000cce:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cd2:	4760      	bx	ip

08000cd4 <usbd_ep_stall_set>:
 8000cd4:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000cd8:	691b      	ldr	r3, [r3, #16]
 8000cda:	4718      	bx	r3

08000cdc <usbd_ep_stall_get>:
 8000cdc:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000ce0:	699b      	ldr	r3, [r3, #24]
 8000ce2:	4718      	bx	r3

08000ce4 <usbd_ep_nak_set>:
 8000ce4:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000ce8:	695b      	ldr	r3, [r3, #20]
 8000cea:	4718      	bx	r3

08000cec <usb_standard_set_configuration>:
 8000cec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cee:	460d      	mov	r5, r1
 8000cf0:	8849      	ldrh	r1, [r1, #2]
 8000cf2:	4604      	mov	r4, r0
 8000cf4:	b179      	cbz	r1, 8000d16 <usb_standard_set_configuration+0x2a>
 8000cf6:	6803      	ldr	r3, [r0, #0]
 8000cf8:	260d      	movs	r6, #13
 8000cfa:	7c58      	ldrb	r0, [r3, #17]
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4283      	cmp	r3, r0
 8000d00:	d301      	bcc.n	8000d06 <usb_standard_set_configuration+0x1a>
 8000d02:	2000      	movs	r0, #0
 8000d04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d06:	6862      	ldr	r2, [r4, #4]
 8000d08:	fb06 2203 	mla	r2, r6, r3, r2
 8000d0c:	7952      	ldrb	r2, [r2, #5]
 8000d0e:	428a      	cmp	r2, r1
 8000d10:	d003      	beq.n	8000d1a <usb_standard_set_configuration+0x2e>
 8000d12:	3301      	adds	r3, #1
 8000d14:	e7f3      	b.n	8000cfe <usb_standard_set_configuration+0x12>
 8000d16:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000d1a:	3301      	adds	r3, #1
 8000d1c:	b2db      	uxtb	r3, r3
 8000d1e:	75e3      	strb	r3, [r4, #23]
 8000d20:	b94b      	cbnz	r3, 8000d36 <usb_standard_set_configuration+0x4a>
 8000d22:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8000d26:	4620      	mov	r0, r4
 8000d28:	68db      	ldr	r3, [r3, #12]
 8000d2a:	4798      	blx	r3
 8000d2c:	f8d4 30c8 	ldr.w	r3, [r4, #200]	; 0xc8
 8000d30:	b9ab      	cbnz	r3, 8000d5e <usb_standard_set_configuration+0x72>
 8000d32:	2001      	movs	r0, #1
 8000d34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d36:	f06f 010c 	mvn.w	r1, #12
 8000d3a:	220d      	movs	r2, #13
 8000d3c:	fb12 1203 	smlabb	r2, r2, r3, r1
 8000d40:	6863      	ldr	r3, [r4, #4]
 8000d42:	4413      	add	r3, r2
 8000d44:	2200      	movs	r2, #0
 8000d46:	4610      	mov	r0, r2
 8000d48:	7919      	ldrb	r1, [r3, #4]
 8000d4a:	428a      	cmp	r2, r1
 8000d4c:	d2e9      	bcs.n	8000d22 <usb_standard_set_configuration+0x36>
 8000d4e:	f8d3 1009 	ldr.w	r1, [r3, #9]
 8000d52:	0116      	lsls	r6, r2, #4
 8000d54:	5871      	ldr	r1, [r6, r1]
 8000d56:	b101      	cbz	r1, 8000d5a <usb_standard_set_configuration+0x6e>
 8000d58:	7008      	strb	r0, [r1, #0]
 8000d5a:	3201      	adds	r2, #1
 8000d5c:	e7f4      	b.n	8000d48 <usb_standard_set_configuration+0x5c>
 8000d5e:	2300      	movs	r3, #0
 8000d60:	64a3      	str	r3, [r4, #72]	; 0x48
 8000d62:	6523      	str	r3, [r4, #80]	; 0x50
 8000d64:	65a3      	str	r3, [r4, #88]	; 0x58
 8000d66:	6623      	str	r3, [r4, #96]	; 0x60
 8000d68:	f104 06c8 	add.w	r6, r4, #200	; 0xc8
 8000d6c:	f104 07d8 	add.w	r7, r4, #216	; 0xd8
 8000d70:	f856 3b04 	ldr.w	r3, [r6], #4
 8000d74:	b113      	cbz	r3, 8000d7c <usb_standard_set_configuration+0x90>
 8000d76:	8869      	ldrh	r1, [r5, #2]
 8000d78:	4620      	mov	r0, r4
 8000d7a:	4798      	blx	r3
 8000d7c:	42be      	cmp	r6, r7
 8000d7e:	d1f7      	bne.n	8000d70 <usb_standard_set_configuration+0x84>
 8000d80:	e7d7      	b.n	8000d32 <usb_standard_set_configuration+0x46>

08000d82 <usb_standard_get_configuration>:
 8000d82:	8819      	ldrh	r1, [r3, #0]
 8000d84:	6812      	ldr	r2, [r2, #0]
 8000d86:	2901      	cmp	r1, #1
 8000d88:	bf84      	itt	hi
 8000d8a:	2101      	movhi	r1, #1
 8000d8c:	8019      	strhhi	r1, [r3, #0]
 8000d8e:	7dc3      	ldrb	r3, [r0, #23]
 8000d90:	b12b      	cbz	r3, 8000d9e <usb_standard_get_configuration+0x1c>
 8000d92:	6841      	ldr	r1, [r0, #4]
 8000d94:	200d      	movs	r0, #13
 8000d96:	fb00 1303 	mla	r3, r0, r3, r1
 8000d9a:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 8000d9e:	7013      	strb	r3, [r2, #0]
 8000da0:	2001      	movs	r0, #1
 8000da2:	4770      	bx	lr

08000da4 <usb_standard_get_interface>:
 8000da4:	b570      	push	{r4, r5, r6, lr}
 8000da6:	7dc6      	ldrb	r6, [r0, #23]
 8000da8:	6840      	ldr	r0, [r0, #4]
 8000daa:	f06f 050c 	mvn.w	r5, #12
 8000dae:	240d      	movs	r4, #13
 8000db0:	fb14 5406 	smlabb	r4, r4, r6, r5
 8000db4:	4420      	add	r0, r4
 8000db6:	888d      	ldrh	r5, [r1, #4]
 8000db8:	7904      	ldrb	r4, [r0, #4]
 8000dba:	42a5      	cmp	r5, r4
 8000dbc:	d20c      	bcs.n	8000dd8 <usb_standard_get_interface+0x34>
 8000dbe:	2401      	movs	r4, #1
 8000dc0:	801c      	strh	r4, [r3, #0]
 8000dc2:	888b      	ldrh	r3, [r1, #4]
 8000dc4:	f8d0 0009 	ldr.w	r0, [r0, #9]
 8000dc8:	6812      	ldr	r2, [r2, #0]
 8000dca:	011b      	lsls	r3, r3, #4
 8000dcc:	581b      	ldr	r3, [r3, r0]
 8000dce:	b103      	cbz	r3, 8000dd2 <usb_standard_get_interface+0x2e>
 8000dd0:	781b      	ldrb	r3, [r3, #0]
 8000dd2:	7013      	strb	r3, [r2, #0]
 8000dd4:	2001      	movs	r0, #1
 8000dd6:	bd70      	pop	{r4, r5, r6, pc}
 8000dd8:	2000      	movs	r0, #0
 8000dda:	bd70      	pop	{r4, r5, r6, pc}

08000ddc <usb_standard_interface_get_status>:
 8000ddc:	8819      	ldrh	r1, [r3, #0]
 8000dde:	2902      	cmp	r1, #2
 8000de0:	bf84      	itt	hi
 8000de2:	2102      	movhi	r1, #2
 8000de4:	8019      	strhhi	r1, [r3, #0]
 8000de6:	6811      	ldr	r1, [r2, #0]
 8000de8:	2300      	movs	r3, #0
 8000dea:	700b      	strb	r3, [r1, #0]
 8000dec:	6812      	ldr	r2, [r2, #0]
 8000dee:	2001      	movs	r0, #1
 8000df0:	7053      	strb	r3, [r2, #1]
 8000df2:	4770      	bx	lr

08000df4 <usb_standard_endpoint_get_status>:
 8000df4:	b538      	push	{r3, r4, r5, lr}
 8000df6:	4614      	mov	r4, r2
 8000df8:	881a      	ldrh	r2, [r3, #0]
 8000dfa:	6825      	ldr	r5, [r4, #0]
 8000dfc:	2a02      	cmp	r2, #2
 8000dfe:	bf84      	itt	hi
 8000e00:	2202      	movhi	r2, #2
 8000e02:	801a      	strhhi	r2, [r3, #0]
 8000e04:	8889      	ldrh	r1, [r1, #4]
 8000e06:	b2c9      	uxtb	r1, r1
 8000e08:	f7ff ff68 	bl	8000cdc <usbd_ep_stall_get>
 8000e0c:	3000      	adds	r0, #0
 8000e0e:	bf18      	it	ne
 8000e10:	2001      	movne	r0, #1
 8000e12:	7028      	strb	r0, [r5, #0]
 8000e14:	6823      	ldr	r3, [r4, #0]
 8000e16:	2200      	movs	r2, #0
 8000e18:	705a      	strb	r2, [r3, #1]
 8000e1a:	2001      	movs	r0, #1
 8000e1c:	bd38      	pop	{r3, r4, r5, pc}

08000e1e <usb_standard_endpoint_stall>:
 8000e1e:	b508      	push	{r3, lr}
 8000e20:	8889      	ldrh	r1, [r1, #4]
 8000e22:	2201      	movs	r2, #1
 8000e24:	b2c9      	uxtb	r1, r1
 8000e26:	f7ff ff55 	bl	8000cd4 <usbd_ep_stall_set>
 8000e2a:	2001      	movs	r0, #1
 8000e2c:	bd08      	pop	{r3, pc}

08000e2e <usb_standard_endpoint_unstall>:
 8000e2e:	b508      	push	{r3, lr}
 8000e30:	8889      	ldrh	r1, [r1, #4]
 8000e32:	2200      	movs	r2, #0
 8000e34:	b2c9      	uxtb	r1, r1
 8000e36:	f7ff ff4d 	bl	8000cd4 <usbd_ep_stall_set>
 8000e3a:	2001      	movs	r0, #1
 8000e3c:	bd08      	pop	{r3, pc}

08000e3e <usb_standard_set_address>:
 8000e3e:	b510      	push	{r4, lr}
 8000e40:	780b      	ldrb	r3, [r1, #0]
 8000e42:	b973      	cbnz	r3, 8000e62 <usb_standard_set_address+0x24>
 8000e44:	884c      	ldrh	r4, [r1, #2]
 8000e46:	2c7f      	cmp	r4, #127	; 0x7f
 8000e48:	d80b      	bhi.n	8000e62 <usb_standard_set_address+0x24>
 8000e4a:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8000e4e:	7584      	strb	r4, [r0, #22]
 8000e50:	f893 2030 	ldrb.w	r2, [r3, #48]	; 0x30
 8000e54:	b11a      	cbz	r2, 8000e5e <usb_standard_set_address+0x20>
 8000e56:	8849      	ldrh	r1, [r1, #2]
 8000e58:	685b      	ldr	r3, [r3, #4]
 8000e5a:	b2c9      	uxtb	r1, r1
 8000e5c:	4798      	blx	r3
 8000e5e:	2001      	movs	r0, #1
 8000e60:	bd10      	pop	{r4, pc}
 8000e62:	2000      	movs	r0, #0
 8000e64:	bd10      	pop	{r4, pc}

08000e66 <usb_standard_set_interface>:
 8000e66:	b570      	push	{r4, r5, r6, lr}
 8000e68:	7dc2      	ldrb	r2, [r0, #23]
 8000e6a:	240d      	movs	r4, #13
 8000e6c:	461d      	mov	r5, r3
 8000e6e:	f06f 030c 	mvn.w	r3, #12
 8000e72:	fb14 3302 	smlabb	r3, r4, r2, r3
 8000e76:	6844      	ldr	r4, [r0, #4]
 8000e78:	888a      	ldrh	r2, [r1, #4]
 8000e7a:	441c      	add	r4, r3
 8000e7c:	7923      	ldrb	r3, [r4, #4]
 8000e7e:	4293      	cmp	r3, r2
 8000e80:	d916      	bls.n	8000eb0 <usb_standard_set_interface+0x4a>
 8000e82:	f8d4 3009 	ldr.w	r3, [r4, #9]
 8000e86:	884c      	ldrh	r4, [r1, #2]
 8000e88:	0112      	lsls	r2, r2, #4
 8000e8a:	189e      	adds	r6, r3, r2
 8000e8c:	7936      	ldrb	r6, [r6, #4]
 8000e8e:	42a6      	cmp	r6, r4
 8000e90:	d90e      	bls.n	8000eb0 <usb_standard_set_interface+0x4a>
 8000e92:	589a      	ldr	r2, [r3, r2]
 8000e94:	b152      	cbz	r2, 8000eac <usb_standard_set_interface+0x46>
 8000e96:	7014      	strb	r4, [r2, #0]
 8000e98:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
 8000e9c:	b113      	cbz	r3, 8000ea4 <usb_standard_set_interface+0x3e>
 8000e9e:	884a      	ldrh	r2, [r1, #2]
 8000ea0:	8889      	ldrh	r1, [r1, #4]
 8000ea2:	4798      	blx	r3
 8000ea4:	2300      	movs	r3, #0
 8000ea6:	802b      	strh	r3, [r5, #0]
 8000ea8:	2001      	movs	r0, #1
 8000eaa:	bd70      	pop	{r4, r5, r6, pc}
 8000eac:	2c00      	cmp	r4, #0
 8000eae:	d0f3      	beq.n	8000e98 <usb_standard_set_interface+0x32>
 8000eb0:	2000      	movs	r0, #0
 8000eb2:	bd70      	pop	{r4, r5, r6, pc}

08000eb4 <usb_standard_get_descriptor>:
 8000eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000eb8:	884d      	ldrh	r5, [r1, #2]
 8000eba:	461f      	mov	r7, r3
 8000ebc:	0a2b      	lsrs	r3, r5, #8
 8000ebe:	2b02      	cmp	r3, #2
 8000ec0:	b089      	sub	sp, #36	; 0x24
 8000ec2:	4616      	mov	r6, r2
 8000ec4:	d011      	beq.n	8000eea <usb_standard_get_descriptor+0x36>
 8000ec6:	2b03      	cmp	r3, #3
 8000ec8:	f000 80e8 	beq.w	800109c <usb_standard_get_descriptor+0x1e8>
 8000ecc:	2b01      	cmp	r3, #1
 8000ece:	f040 811d 	bne.w	800110c <usb_standard_get_descriptor+0x258>
 8000ed2:	6802      	ldr	r2, [r0, #0]
 8000ed4:	6032      	str	r2, [r6, #0]
 8000ed6:	7812      	ldrb	r2, [r2, #0]
 8000ed8:	8839      	ldrh	r1, [r7, #0]
 8000eda:	428a      	cmp	r2, r1
 8000edc:	bf28      	it	cs
 8000ede:	460a      	movcs	r2, r1
 8000ee0:	803a      	strh	r2, [r7, #0]
 8000ee2:	2001      	movs	r0, #1
 8000ee4:	b009      	add	sp, #36	; 0x24
 8000ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000eea:	b2ed      	uxtb	r5, r5
 8000eec:	eb05 0645 	add.w	r6, r5, r5, lsl #1
 8000ef0:	6903      	ldr	r3, [r0, #16]
 8000ef2:	f8d0 8004 	ldr.w	r8, [r0, #4]
 8000ef6:	6013      	str	r3, [r2, #0]
 8000ef8:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 8000efc:	883c      	ldrh	r4, [r7, #0]
 8000efe:	f818 5006 	ldrb.w	r5, [r8, r6]
 8000f02:	9301      	str	r3, [sp, #4]
 8000f04:	42a5      	cmp	r5, r4
 8000f06:	eb08 0306 	add.w	r3, r8, r6
 8000f0a:	bf28      	it	cs
 8000f0c:	4625      	movcs	r5, r4
 8000f0e:	462a      	mov	r2, r5
 8000f10:	4619      	mov	r1, r3
 8000f12:	9801      	ldr	r0, [sp, #4]
 8000f14:	9302      	str	r3, [sp, #8]
 8000f16:	f001 f993 	bl	8002240 <memcpy>
 8000f1a:	9b01      	ldr	r3, [sp, #4]
 8000f1c:	f818 6006 	ldrb.w	r6, [r8, r6]
 8000f20:	1b64      	subs	r4, r4, r5
 8000f22:	442b      	add	r3, r5
 8000f24:	b2a4      	uxth	r4, r4
 8000f26:	2200      	movs	r2, #0
 8000f28:	9203      	str	r2, [sp, #12]
 8000f2a:	9a02      	ldr	r2, [sp, #8]
 8000f2c:	7911      	ldrb	r1, [r2, #4]
 8000f2e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8000f32:	4291      	cmp	r1, r2
 8000f34:	d803      	bhi.n	8000f3e <usb_standard_get_descriptor+0x8a>
 8000f36:	9b01      	ldr	r3, [sp, #4]
 8000f38:	805e      	strh	r6, [r3, #2]
 8000f3a:	803d      	strh	r5, [r7, #0]
 8000f3c:	e7d1      	b.n	8000ee2 <usb_standard_get_descriptor+0x2e>
 8000f3e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8000f42:	0112      	lsls	r2, r2, #4
 8000f44:	9207      	str	r2, [sp, #28]
 8000f46:	9a02      	ldr	r2, [sp, #8]
 8000f48:	9907      	ldr	r1, [sp, #28]
 8000f4a:	f8d2 2009 	ldr.w	r2, [r2, #9]
 8000f4e:	440a      	add	r2, r1
 8000f50:	f8d2 9008 	ldr.w	r9, [r2, #8]
 8000f54:	f1b9 0f00 	cmp.w	r9, #0
 8000f58:	d014      	beq.n	8000f84 <usb_standard_get_descriptor+0xd0>
 8000f5a:	f899 8000 	ldrb.w	r8, [r9]
 8000f5e:	45a0      	cmp	r8, r4
 8000f60:	bf28      	it	cs
 8000f62:	46a0      	movcs	r8, r4
 8000f64:	4642      	mov	r2, r8
 8000f66:	4618      	mov	r0, r3
 8000f68:	4649      	mov	r1, r9
 8000f6a:	f001 f969 	bl	8002240 <memcpy>
 8000f6e:	f899 2000 	ldrb.w	r2, [r9]
 8000f72:	4603      	mov	r3, r0
 8000f74:	eba4 0408 	sub.w	r4, r4, r8
 8000f78:	4445      	add	r5, r8
 8000f7a:	4416      	add	r6, r2
 8000f7c:	4443      	add	r3, r8
 8000f7e:	b2a4      	uxth	r4, r4
 8000f80:	b2ad      	uxth	r5, r5
 8000f82:	b2b6      	uxth	r6, r6
 8000f84:	2200      	movs	r2, #0
 8000f86:	9204      	str	r2, [sp, #16]
 8000f88:	9a02      	ldr	r2, [sp, #8]
 8000f8a:	9907      	ldr	r1, [sp, #28]
 8000f8c:	f8d2 2009 	ldr.w	r2, [r2, #9]
 8000f90:	440a      	add	r2, r1
 8000f92:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8000f96:	7910      	ldrb	r0, [r2, #4]
 8000f98:	4288      	cmp	r0, r1
 8000f9a:	d802      	bhi.n	8000fa2 <usb_standard_get_descriptor+0xee>
 8000f9c:	9a03      	ldr	r2, [sp, #12]
 8000f9e:	3201      	adds	r2, #1
 8000fa0:	e7c2      	b.n	8000f28 <usb_standard_get_descriptor+0x74>
 8000fa2:	f8bd 9010 	ldrh.w	r9, [sp, #16]
 8000fa6:	f8d2 a00c 	ldr.w	sl, [r2, #12]
 8000faa:	2115      	movs	r1, #21
 8000fac:	fb01 f909 	mul.w	r9, r1, r9
 8000fb0:	eb0a 0b09 	add.w	fp, sl, r9
 8000fb4:	f81a 8009 	ldrb.w	r8, [sl, r9]
 8000fb8:	45a0      	cmp	r8, r4
 8000fba:	bf28      	it	cs
 8000fbc:	46a0      	movcs	r8, r4
 8000fbe:	4642      	mov	r2, r8
 8000fc0:	4659      	mov	r1, fp
 8000fc2:	4618      	mov	r0, r3
 8000fc4:	f001 f93c 	bl	8002240 <memcpy>
 8000fc8:	f81a 2009 	ldrb.w	r2, [sl, r9]
 8000fcc:	f8db 100d 	ldr.w	r1, [fp, #13]
 8000fd0:	4603      	mov	r3, r0
 8000fd2:	eba4 0408 	sub.w	r4, r4, r8
 8000fd6:	4445      	add	r5, r8
 8000fd8:	4416      	add	r6, r2
 8000fda:	4443      	add	r3, r8
 8000fdc:	b2a4      	uxth	r4, r4
 8000fde:	b2ad      	uxth	r5, r5
 8000fe0:	b2b6      	uxth	r6, r6
 8000fe2:	b1a9      	cbz	r1, 8001010 <usb_standard_get_descriptor+0x15c>
 8000fe4:	f8db 8011 	ldr.w	r8, [fp, #17]
 8000fe8:	45a0      	cmp	r8, r4
 8000fea:	bfa8      	it	ge
 8000fec:	46a0      	movge	r8, r4
 8000fee:	fa1f f988 	uxth.w	r9, r8
 8000ff2:	464a      	mov	r2, r9
 8000ff4:	4618      	mov	r0, r3
 8000ff6:	f001 f923 	bl	8002240 <memcpy>
 8000ffa:	f8db 2011 	ldr.w	r2, [fp, #17]
 8000ffe:	4603      	mov	r3, r0
 8001000:	eba4 0409 	sub.w	r4, r4, r9
 8001004:	444d      	add	r5, r9
 8001006:	4416      	add	r6, r2
 8001008:	444b      	add	r3, r9
 800100a:	b2a4      	uxth	r4, r4
 800100c:	b2ad      	uxth	r5, r5
 800100e:	b2b6      	uxth	r6, r6
 8001010:	2200      	movs	r2, #0
 8001012:	9205      	str	r2, [sp, #20]
 8001014:	f89b 1004 	ldrb.w	r1, [fp, #4]
 8001018:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800101c:	4291      	cmp	r1, r2
 800101e:	d802      	bhi.n	8001026 <usb_standard_get_descriptor+0x172>
 8001020:	9a04      	ldr	r2, [sp, #16]
 8001022:	3201      	adds	r2, #1
 8001024:	e7af      	b.n	8000f86 <usb_standard_get_descriptor+0xd2>
 8001026:	f8bd 9014 	ldrh.w	r9, [sp, #20]
 800102a:	f8db 2009 	ldr.w	r2, [fp, #9]
 800102e:	9206      	str	r2, [sp, #24]
 8001030:	ebc9 1909 	rsb	r9, r9, r9, lsl #4
 8001034:	eb02 0a09 	add.w	sl, r2, r9
 8001038:	f812 8009 	ldrb.w	r8, [r2, r9]
 800103c:	45a0      	cmp	r8, r4
 800103e:	bf28      	it	cs
 8001040:	46a0      	movcs	r8, r4
 8001042:	4642      	mov	r2, r8
 8001044:	4651      	mov	r1, sl
 8001046:	4618      	mov	r0, r3
 8001048:	f001 f8fa 	bl	8002240 <memcpy>
 800104c:	9a06      	ldr	r2, [sp, #24]
 800104e:	f8da 1007 	ldr.w	r1, [sl, #7]
 8001052:	f812 2009 	ldrb.w	r2, [r2, r9]
 8001056:	4603      	mov	r3, r0
 8001058:	eba4 0408 	sub.w	r4, r4, r8
 800105c:	4445      	add	r5, r8
 800105e:	4416      	add	r6, r2
 8001060:	4443      	add	r3, r8
 8001062:	b2a4      	uxth	r4, r4
 8001064:	b2ad      	uxth	r5, r5
 8001066:	b2b6      	uxth	r6, r6
 8001068:	b1a9      	cbz	r1, 8001096 <usb_standard_get_descriptor+0x1e2>
 800106a:	f8da 800b 	ldr.w	r8, [sl, #11]
 800106e:	45a0      	cmp	r8, r4
 8001070:	bfa8      	it	ge
 8001072:	46a0      	movge	r8, r4
 8001074:	fa1f f988 	uxth.w	r9, r8
 8001078:	464a      	mov	r2, r9
 800107a:	4618      	mov	r0, r3
 800107c:	f001 f8e0 	bl	8002240 <memcpy>
 8001080:	f8da 200b 	ldr.w	r2, [sl, #11]
 8001084:	4603      	mov	r3, r0
 8001086:	eba4 0409 	sub.w	r4, r4, r9
 800108a:	444d      	add	r5, r9
 800108c:	4416      	add	r6, r2
 800108e:	444b      	add	r3, r9
 8001090:	b2a4      	uxth	r4, r4
 8001092:	b2ad      	uxth	r5, r5
 8001094:	b2b6      	uxth	r6, r6
 8001096:	9a05      	ldr	r2, [sp, #20]
 8001098:	3201      	adds	r2, #1
 800109a:	e7ba      	b.n	8001012 <usb_standard_get_descriptor+0x15e>
 800109c:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
 80010a0:	6904      	ldr	r4, [r0, #16]
 80010a2:	d10d      	bne.n	80010c0 <usb_standard_get_descriptor+0x20c>
 80010a4:	2309      	movs	r3, #9
 80010a6:	70a3      	strb	r3, [r4, #2]
 80010a8:	2304      	movs	r3, #4
 80010aa:	70e3      	strb	r3, [r4, #3]
 80010ac:	7023      	strb	r3, [r4, #0]
 80010ae:	883b      	ldrh	r3, [r7, #0]
 80010b0:	2b04      	cmp	r3, #4
 80010b2:	bf28      	it	cs
 80010b4:	2304      	movcs	r3, #4
 80010b6:	803b      	strh	r3, [r7, #0]
 80010b8:	2303      	movs	r3, #3
 80010ba:	7063      	strb	r3, [r4, #1]
 80010bc:	6034      	str	r4, [r6, #0]
 80010be:	e710      	b.n	8000ee2 <usb_standard_get_descriptor+0x2e>
 80010c0:	6883      	ldr	r3, [r0, #8]
 80010c2:	3d01      	subs	r5, #1
 80010c4:	b313      	cbz	r3, 800110c <usb_standard_get_descriptor+0x258>
 80010c6:	68c2      	ldr	r2, [r0, #12]
 80010c8:	4295      	cmp	r5, r2
 80010ca:	da1f      	bge.n	800110c <usb_standard_get_descriptor+0x258>
 80010cc:	8889      	ldrh	r1, [r1, #4]
 80010ce:	f240 4209 	movw	r2, #1033	; 0x409
 80010d2:	4291      	cmp	r1, r2
 80010d4:	d11a      	bne.n	800110c <usb_standard_get_descriptor+0x258>
 80010d6:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
 80010da:	4628      	mov	r0, r5
 80010dc:	f001 f9b0 	bl	8002440 <strlen>
 80010e0:	3001      	adds	r0, #1
 80010e2:	0040      	lsls	r0, r0, #1
 80010e4:	b2c0      	uxtb	r0, r0
 80010e6:	7020      	strb	r0, [r4, #0]
 80010e8:	883b      	ldrh	r3, [r7, #0]
 80010ea:	4298      	cmp	r0, r3
 80010ec:	bf28      	it	cs
 80010ee:	4618      	movcs	r0, r3
 80010f0:	8038      	strh	r0, [r7, #0]
 80010f2:	4629      	mov	r1, r5
 80010f4:	883b      	ldrh	r3, [r7, #0]
 80010f6:	085b      	lsrs	r3, r3, #1
 80010f8:	1b4a      	subs	r2, r1, r5
 80010fa:	3b01      	subs	r3, #1
 80010fc:	4293      	cmp	r3, r2
 80010fe:	dddb      	ble.n	80010b8 <usb_standard_get_descriptor+0x204>
 8001100:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8001104:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001108:	8053      	strh	r3, [r2, #2]
 800110a:	e7f3      	b.n	80010f4 <usb_standard_get_descriptor+0x240>
 800110c:	2000      	movs	r0, #0
 800110e:	e6e9      	b.n	8000ee4 <usb_standard_get_descriptor+0x30>

08001110 <usb_standard_device_get_status>:
 8001110:	8819      	ldrh	r1, [r3, #0]
 8001112:	2902      	cmp	r1, #2
 8001114:	bf84      	itt	hi
 8001116:	2102      	movhi	r1, #2
 8001118:	8019      	strhhi	r1, [r3, #0]
 800111a:	6811      	ldr	r1, [r2, #0]
 800111c:	2300      	movs	r3, #0
 800111e:	700b      	strb	r3, [r1, #0]
 8001120:	6812      	ldr	r2, [r2, #0]
 8001122:	2001      	movs	r0, #1
 8001124:	7053      	strb	r3, [r2, #1]
 8001126:	4770      	bx	lr

08001128 <usbd_register_set_config_callback>:
 8001128:	b510      	push	{r4, lr}
 800112a:	2200      	movs	r2, #0
 800112c:	f100 04c8 	add.w	r4, r0, #200	; 0xc8
 8001130:	f854 3b04 	ldr.w	r3, [r4], #4
 8001134:	b13b      	cbz	r3, 8001146 <usbd_register_set_config_callback+0x1e>
 8001136:	428b      	cmp	r3, r1
 8001138:	d008      	beq.n	800114c <usbd_register_set_config_callback+0x24>
 800113a:	3201      	adds	r2, #1
 800113c:	2a04      	cmp	r2, #4
 800113e:	d1f7      	bne.n	8001130 <usbd_register_set_config_callback+0x8>
 8001140:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001144:	bd10      	pop	{r4, pc}
 8001146:	3232      	adds	r2, #50	; 0x32
 8001148:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 800114c:	2000      	movs	r0, #0
 800114e:	bd10      	pop	{r4, pc}

08001150 <_usbd_standard_request_device>:
 8001150:	b430      	push	{r4, r5}
 8001152:	784c      	ldrb	r4, [r1, #1]
 8001154:	2c09      	cmp	r4, #9
 8001156:	d806      	bhi.n	8001166 <_usbd_standard_request_device+0x16>
 8001158:	4d04      	ldr	r5, [pc, #16]	; (800116c <_usbd_standard_request_device+0x1c>)
 800115a:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800115e:	b114      	cbz	r4, 8001166 <_usbd_standard_request_device+0x16>
 8001160:	46a4      	mov	ip, r4
 8001162:	bc30      	pop	{r4, r5}
 8001164:	4760      	bx	ip
 8001166:	2000      	movs	r0, #0
 8001168:	bc30      	pop	{r4, r5}
 800116a:	4770      	bx	lr
 800116c:	08002c48 	.word	0x08002c48

08001170 <_usbd_standard_request_interface>:
 8001170:	b430      	push	{r4, r5}
 8001172:	784c      	ldrb	r4, [r1, #1]
 8001174:	2c0b      	cmp	r4, #11
 8001176:	d806      	bhi.n	8001186 <_usbd_standard_request_interface+0x16>
 8001178:	4d04      	ldr	r5, [pc, #16]	; (800118c <_usbd_standard_request_interface+0x1c>)
 800117a:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800117e:	b114      	cbz	r4, 8001186 <_usbd_standard_request_interface+0x16>
 8001180:	46a4      	mov	ip, r4
 8001182:	bc30      	pop	{r4, r5}
 8001184:	4760      	bx	ip
 8001186:	2000      	movs	r0, #0
 8001188:	bc30      	pop	{r4, r5}
 800118a:	4770      	bx	lr
 800118c:	08002c70 	.word	0x08002c70

08001190 <_usbd_standard_request_endpoint>:
 8001190:	b410      	push	{r4}
 8001192:	784c      	ldrb	r4, [r1, #1]
 8001194:	2c01      	cmp	r4, #1
 8001196:	d006      	beq.n	80011a6 <_usbd_standard_request_endpoint+0x16>
 8001198:	d30f      	bcc.n	80011ba <_usbd_standard_request_endpoint+0x2a>
 800119a:	2c03      	cmp	r4, #3
 800119c:	d008      	beq.n	80011b0 <_usbd_standard_request_endpoint+0x20>
 800119e:	2000      	movs	r0, #0
 80011a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80011a4:	4770      	bx	lr
 80011a6:	884c      	ldrh	r4, [r1, #2]
 80011a8:	2c00      	cmp	r4, #0
 80011aa:	d1f8      	bne.n	800119e <_usbd_standard_request_endpoint+0xe>
 80011ac:	4c05      	ldr	r4, [pc, #20]	; (80011c4 <_usbd_standard_request_endpoint+0x34>)
 80011ae:	e005      	b.n	80011bc <_usbd_standard_request_endpoint+0x2c>
 80011b0:	884c      	ldrh	r4, [r1, #2]
 80011b2:	2c00      	cmp	r4, #0
 80011b4:	d1f3      	bne.n	800119e <_usbd_standard_request_endpoint+0xe>
 80011b6:	4c04      	ldr	r4, [pc, #16]	; (80011c8 <_usbd_standard_request_endpoint+0x38>)
 80011b8:	e000      	b.n	80011bc <_usbd_standard_request_endpoint+0x2c>
 80011ba:	4c04      	ldr	r4, [pc, #16]	; (80011cc <_usbd_standard_request_endpoint+0x3c>)
 80011bc:	46a4      	mov	ip, r4
 80011be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80011c2:	4760      	bx	ip
 80011c4:	08000e2f 	.word	0x08000e2f
 80011c8:	08000e1f 	.word	0x08000e1f
 80011cc:	08000df5 	.word	0x08000df5

080011d0 <_usbd_standard_request>:
 80011d0:	b410      	push	{r4}
 80011d2:	780c      	ldrb	r4, [r1, #0]
 80011d4:	f014 0f60 	tst.w	r4, #96	; 0x60
 80011d8:	d106      	bne.n	80011e8 <_usbd_standard_request+0x18>
 80011da:	f004 041f 	and.w	r4, r4, #31
 80011de:	2c01      	cmp	r4, #1
 80011e0:	d00a      	beq.n	80011f8 <_usbd_standard_request+0x28>
 80011e2:	d305      	bcc.n	80011f0 <_usbd_standard_request+0x20>
 80011e4:	2c02      	cmp	r4, #2
 80011e6:	d00b      	beq.n	8001200 <_usbd_standard_request+0x30>
 80011e8:	2000      	movs	r0, #0
 80011ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80011ee:	4770      	bx	lr
 80011f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80011f4:	f7ff bfac 	b.w	8001150 <_usbd_standard_request_device>
 80011f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80011fc:	f7ff bfb8 	b.w	8001170 <_usbd_standard_request_interface>
 8001200:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001204:	f7ff bfc4 	b.w	8001190 <_usbd_standard_request_endpoint>

08001208 <usb_control_send_chunk>:
 8001208:	b510      	push	{r4, lr}
 800120a:	6803      	ldr	r3, [r0, #0]
 800120c:	79da      	ldrb	r2, [r3, #7]
 800120e:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8001210:	429a      	cmp	r2, r3
 8001212:	4604      	mov	r4, r0
 8001214:	d210      	bcs.n	8001238 <usb_control_send_chunk+0x30>
 8001216:	4613      	mov	r3, r2
 8001218:	2100      	movs	r1, #0
 800121a:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800121c:	f7ff fd4a 	bl	8000cb4 <usbd_ep_write_packet>
 8001220:	2302      	movs	r3, #2
 8001222:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8001226:	6823      	ldr	r3, [r4, #0]
 8001228:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800122a:	79d9      	ldrb	r1, [r3, #7]
 800122c:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 800122e:	440a      	add	r2, r1
 8001230:	1a5b      	subs	r3, r3, r1
 8001232:	63a2      	str	r2, [r4, #56]	; 0x38
 8001234:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8001236:	bd10      	pop	{r4, pc}
 8001238:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800123a:	2100      	movs	r1, #0
 800123c:	f7ff fd3a 	bl	8000cb4 <usbd_ep_write_packet>
 8001240:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8001244:	2b00      	cmp	r3, #0
 8001246:	bf14      	ite	ne
 8001248:	2302      	movne	r3, #2
 800124a:	2303      	moveq	r3, #3
 800124c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8001250:	2300      	movs	r3, #0
 8001252:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8001256:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8001258:	63a3      	str	r3, [r4, #56]	; 0x38
 800125a:	bd10      	pop	{r4, pc}

0800125c <usb_control_request_dispatch>:
 800125c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001260:	4604      	mov	r4, r0
 8001262:	460e      	mov	r6, r1
 8001264:	f100 0548 	add.w	r5, r0, #72	; 0x48
 8001268:	f100 0b68 	add.w	fp, r0, #104	; 0x68
 800126c:	f100 093c 	add.w	r9, r0, #60	; 0x3c
 8001270:	f100 0838 	add.w	r8, r0, #56	; 0x38
 8001274:	f100 0a40 	add.w	sl, r0, #64	; 0x40
 8001278:	682f      	ldr	r7, [r5, #0]
 800127a:	b957      	cbnz	r7, 8001292 <usb_control_request_dispatch+0x36>
 800127c:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 8001280:	f104 0238 	add.w	r2, r4, #56	; 0x38
 8001284:	4631      	mov	r1, r6
 8001286:	4620      	mov	r0, r4
 8001288:	b003      	add	sp, #12
 800128a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800128e:	f7ff bf9f 	b.w	80011d0 <_usbd_standard_request>
 8001292:	7833      	ldrb	r3, [r6, #0]
 8001294:	7969      	ldrb	r1, [r5, #5]
 8001296:	792a      	ldrb	r2, [r5, #4]
 8001298:	400b      	ands	r3, r1
 800129a:	429a      	cmp	r2, r3
 800129c:	d003      	beq.n	80012a6 <usb_control_request_dispatch+0x4a>
 800129e:	3508      	adds	r5, #8
 80012a0:	455d      	cmp	r5, fp
 80012a2:	d1e9      	bne.n	8001278 <usb_control_request_dispatch+0x1c>
 80012a4:	e7ea      	b.n	800127c <usb_control_request_dispatch+0x20>
 80012a6:	f8cd a000 	str.w	sl, [sp]
 80012aa:	464b      	mov	r3, r9
 80012ac:	4642      	mov	r2, r8
 80012ae:	4631      	mov	r1, r6
 80012b0:	4620      	mov	r0, r4
 80012b2:	47b8      	blx	r7
 80012b4:	2801      	cmp	r0, #1
 80012b6:	d8f2      	bhi.n	800129e <usb_control_request_dispatch+0x42>
 80012b8:	b003      	add	sp, #12
 80012ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080012be <stall_transaction>:
 80012be:	b510      	push	{r4, lr}
 80012c0:	2201      	movs	r2, #1
 80012c2:	4604      	mov	r4, r0
 80012c4:	2100      	movs	r1, #0
 80012c6:	f7ff fd05 	bl	8000cd4 <usbd_ep_stall_set>
 80012ca:	2300      	movs	r3, #0
 80012cc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80012d0:	bd10      	pop	{r4, pc}

080012d2 <usb_control_recv_chunk>:
 80012d2:	b570      	push	{r4, r5, r6, lr}
 80012d4:	6803      	ldr	r3, [r0, #0]
 80012d6:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 80012d8:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 80012da:	79db      	ldrb	r3, [r3, #7]
 80012dc:	6b81      	ldr	r1, [r0, #56]	; 0x38
 80012de:	1aa4      	subs	r4, r4, r2
 80012e0:	429c      	cmp	r4, r3
 80012e2:	bfa8      	it	ge
 80012e4:	461c      	movge	r4, r3
 80012e6:	b2a6      	uxth	r6, r4
 80012e8:	440a      	add	r2, r1
 80012ea:	4633      	mov	r3, r6
 80012ec:	2100      	movs	r1, #0
 80012ee:	4605      	mov	r5, r0
 80012f0:	f7ff fce8 	bl	8000cc4 <usbd_ep_read_packet>
 80012f4:	4286      	cmp	r6, r0
 80012f6:	d005      	beq.n	8001304 <usb_control_recv_chunk+0x32>
 80012f8:	4628      	mov	r0, r5
 80012fa:	f7ff ffe0 	bl	80012be <stall_transaction>
 80012fe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001302:	bd70      	pop	{r4, r5, r6, pc}
 8001304:	8fab      	ldrh	r3, [r5, #60]	; 0x3c
 8001306:	441e      	add	r6, r3
 8001308:	87ae      	strh	r6, [r5, #60]	; 0x3c
 800130a:	b2a0      	uxth	r0, r4
 800130c:	bd70      	pop	{r4, r5, r6, pc}

0800130e <usb_control_setup_read>:
 800130e:	b538      	push	{r3, r4, r5, lr}
 8001310:	6903      	ldr	r3, [r0, #16]
 8001312:	6383      	str	r3, [r0, #56]	; 0x38
 8001314:	798b      	ldrb	r3, [r1, #6]
 8001316:	79ca      	ldrb	r2, [r1, #7]
 8001318:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800131c:	8783      	strh	r3, [r0, #60]	; 0x3c
 800131e:	4604      	mov	r4, r0
 8001320:	460d      	mov	r5, r1
 8001322:	f7ff ff9b 	bl	800125c <usb_control_request_dispatch>
 8001326:	b310      	cbz	r0, 800136e <usb_control_setup_read+0x60>
 8001328:	88eb      	ldrh	r3, [r5, #6]
 800132a:	b1bb      	cbz	r3, 800135c <usb_control_setup_read+0x4e>
 800132c:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 800132e:	6821      	ldr	r1, [r4, #0]
 8001330:	4293      	cmp	r3, r2
 8001332:	79c9      	ldrb	r1, [r1, #7]
 8001334:	d90e      	bls.n	8001354 <usb_control_setup_read+0x46>
 8001336:	b17a      	cbz	r2, 8001358 <usb_control_setup_read+0x4a>
 8001338:	fb92 f3f1 	sdiv	r3, r2, r1
 800133c:	fb01 2313 	mls	r3, r1, r3, r2
 8001340:	fab3 f383 	clz	r3, r3
 8001344:	095b      	lsrs	r3, r3, #5
 8001346:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800134a:	4620      	mov	r0, r4
 800134c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001350:	f7ff bf5a 	b.w	8001208 <usb_control_send_chunk>
 8001354:	2300      	movs	r3, #0
 8001356:	e7f6      	b.n	8001346 <usb_control_setup_read+0x38>
 8001358:	4613      	mov	r3, r2
 800135a:	e7f4      	b.n	8001346 <usb_control_setup_read+0x38>
 800135c:	461a      	mov	r2, r3
 800135e:	4619      	mov	r1, r3
 8001360:	4620      	mov	r0, r4
 8001362:	f7ff fca7 	bl	8000cb4 <usbd_ep_write_packet>
 8001366:	2304      	movs	r3, #4
 8001368:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800136c:	bd38      	pop	{r3, r4, r5, pc}
 800136e:	4620      	mov	r0, r4
 8001370:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001374:	f7ff bfa3 	b.w	80012be <stall_transaction>

08001378 <usbd_register_control_callback>:
 8001378:	b570      	push	{r4, r5, r6, lr}
 800137a:	2600      	movs	r6, #0
 800137c:	eb00 05c6 	add.w	r5, r0, r6, lsl #3
 8001380:	6cac      	ldr	r4, [r5, #72]	; 0x48
 8001382:	b12c      	cbz	r4, 8001390 <usbd_register_control_callback+0x18>
 8001384:	3601      	adds	r6, #1
 8001386:	2e04      	cmp	r6, #4
 8001388:	d1f8      	bne.n	800137c <usbd_register_control_callback+0x4>
 800138a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800138e:	bd70      	pop	{r4, r5, r6, pc}
 8001390:	f885 104c 	strb.w	r1, [r5, #76]	; 0x4c
 8001394:	f885 204d 	strb.w	r2, [r5, #77]	; 0x4d
 8001398:	64ab      	str	r3, [r5, #72]	; 0x48
 800139a:	4620      	mov	r0, r4
 800139c:	bd70      	pop	{r4, r5, r6, pc}

0800139e <_usbd_control_setup>:
 800139e:	b570      	push	{r4, r5, r6, lr}
 80013a0:	4604      	mov	r4, r0
 80013a2:	2500      	movs	r5, #0
 80013a4:	6405      	str	r5, [r0, #64]	; 0x40
 80013a6:	2201      	movs	r2, #1
 80013a8:	4629      	mov	r1, r5
 80013aa:	f100 0630 	add.w	r6, r0, #48	; 0x30
 80013ae:	f7ff fc99 	bl	8000ce4 <usbd_ep_nak_set>
 80013b2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80013b4:	b92b      	cbnz	r3, 80013c2 <_usbd_control_setup+0x24>
 80013b6:	4631      	mov	r1, r6
 80013b8:	4620      	mov	r0, r4
 80013ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80013be:	f7ff bfa6 	b.w	800130e <usb_control_setup_read>
 80013c2:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 80013c6:	2a00      	cmp	r2, #0
 80013c8:	dbf5      	blt.n	80013b6 <_usbd_control_setup+0x18>
 80013ca:	8aa2      	ldrh	r2, [r4, #20]
 80013cc:	429a      	cmp	r2, r3
 80013ce:	d204      	bcs.n	80013da <_usbd_control_setup+0x3c>
 80013d0:	4620      	mov	r0, r4
 80013d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80013d6:	f7ff bf72 	b.w	80012be <stall_transaction>
 80013da:	6922      	ldr	r2, [r4, #16]
 80013dc:	63a2      	str	r2, [r4, #56]	; 0x38
 80013de:	6822      	ldr	r2, [r4, #0]
 80013e0:	87a5      	strh	r5, [r4, #60]	; 0x3c
 80013e2:	79d2      	ldrb	r2, [r2, #7]
 80013e4:	429a      	cmp	r2, r3
 80013e6:	bf34      	ite	cc
 80013e8:	2305      	movcc	r3, #5
 80013ea:	2306      	movcs	r3, #6
 80013ec:	2200      	movs	r2, #0
 80013ee:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80013f2:	4620      	mov	r0, r4
 80013f4:	4611      	mov	r1, r2
 80013f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80013fa:	f7ff bc73 	b.w	8000ce4 <usbd_ep_nak_set>

080013fe <_usbd_control_out>:
 80013fe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8001402:	2b06      	cmp	r3, #6
 8001404:	b510      	push	{r4, lr}
 8001406:	4604      	mov	r4, r0
 8001408:	d012      	beq.n	8001430 <_usbd_control_out+0x32>
 800140a:	2b07      	cmp	r3, #7
 800140c:	d027      	beq.n	800145e <_usbd_control_out+0x60>
 800140e:	2b05      	cmp	r3, #5
 8001410:	d121      	bne.n	8001456 <_usbd_control_out+0x58>
 8001412:	f7ff ff5e 	bl	80012d2 <usb_control_recv_chunk>
 8001416:	2800      	cmp	r0, #0
 8001418:	db32      	blt.n	8001480 <_usbd_control_out+0x82>
 800141a:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 800141c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800141e:	1a9b      	subs	r3, r3, r2
 8001420:	6822      	ldr	r2, [r4, #0]
 8001422:	79d2      	ldrb	r2, [r2, #7]
 8001424:	4293      	cmp	r3, r2
 8001426:	dc2b      	bgt.n	8001480 <_usbd_control_out+0x82>
 8001428:	2306      	movs	r3, #6
 800142a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800142e:	bd10      	pop	{r4, pc}
 8001430:	f7ff ff4f 	bl	80012d2 <usb_control_recv_chunk>
 8001434:	2800      	cmp	r0, #0
 8001436:	db23      	blt.n	8001480 <_usbd_control_out+0x82>
 8001438:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800143c:	4620      	mov	r0, r4
 800143e:	f7ff ff0d 	bl	800125c <usb_control_request_dispatch>
 8001442:	b138      	cbz	r0, 8001454 <_usbd_control_out+0x56>
 8001444:	2300      	movs	r3, #0
 8001446:	461a      	mov	r2, r3
 8001448:	4619      	mov	r1, r3
 800144a:	4620      	mov	r0, r4
 800144c:	f7ff fc32 	bl	8000cb4 <usbd_ep_write_packet>
 8001450:	2304      	movs	r3, #4
 8001452:	e7ea      	b.n	800142a <_usbd_control_out+0x2c>
 8001454:	4620      	mov	r0, r4
 8001456:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800145a:	f7ff bf30 	b.w	80012be <stall_transaction>
 800145e:	2300      	movs	r3, #0
 8001460:	461a      	mov	r2, r3
 8001462:	4619      	mov	r1, r3
 8001464:	f7ff fc2e 	bl	8000cc4 <usbd_ep_read_packet>
 8001468:	2300      	movs	r3, #0
 800146a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800146e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001470:	b11b      	cbz	r3, 800147a <_usbd_control_out+0x7c>
 8001472:	f104 0130 	add.w	r1, r4, #48	; 0x30
 8001476:	4620      	mov	r0, r4
 8001478:	4798      	blx	r3
 800147a:	2300      	movs	r3, #0
 800147c:	6423      	str	r3, [r4, #64]	; 0x40
 800147e:	bd10      	pop	{r4, pc}
 8001480:	bd10      	pop	{r4, pc}

08001482 <_usbd_control_in>:
 8001482:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8001486:	2b03      	cmp	r3, #3
 8001488:	b510      	push	{r4, lr}
 800148a:	4604      	mov	r4, r0
 800148c:	d007      	beq.n	800149e <_usbd_control_in+0x1c>
 800148e:	2b04      	cmp	r3, #4
 8001490:	d00e      	beq.n	80014b0 <_usbd_control_in+0x2e>
 8001492:	2b02      	cmp	r3, #2
 8001494:	d123      	bne.n	80014de <_usbd_control_in+0x5c>
 8001496:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800149a:	f7ff beb5 	b.w	8001208 <usb_control_send_chunk>
 800149e:	2307      	movs	r3, #7
 80014a0:	2200      	movs	r2, #0
 80014a2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80014a6:	4611      	mov	r1, r2
 80014a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80014ac:	f7ff bc1a 	b.w	8000ce4 <usbd_ep_nak_set>
 80014b0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80014b2:	b113      	cbz	r3, 80014ba <_usbd_control_in+0x38>
 80014b4:	f100 0130 	add.w	r1, r0, #48	; 0x30
 80014b8:	4798      	blx	r3
 80014ba:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 80014be:	b953      	cbnz	r3, 80014d6 <_usbd_control_in+0x54>
 80014c0:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
 80014c4:	2b05      	cmp	r3, #5
 80014c6:	d106      	bne.n	80014d6 <_usbd_control_in+0x54>
 80014c8:	8e61      	ldrh	r1, [r4, #50]	; 0x32
 80014ca:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 80014ce:	b2c9      	uxtb	r1, r1
 80014d0:	685b      	ldr	r3, [r3, #4]
 80014d2:	4620      	mov	r0, r4
 80014d4:	4798      	blx	r3
 80014d6:	2300      	movs	r3, #0
 80014d8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80014dc:	bd10      	pop	{r4, pc}
 80014de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80014e2:	f7ff beec 	b.w	80012be <stall_transaction>
	...

080014e8 <stm32f107_usbd_init>:
 80014e8:	b508      	push	{r3, lr}
 80014ea:	f240 6087 	movw	r0, #1671	; 0x687
 80014ee:	f7ff fa05 	bl	80008fc <rcc_periph_clock_enable>
 80014f2:	4a25      	ldr	r2, [pc, #148]	; (8001588 <stm32f107_usbd_init+0xa0>)
 80014f4:	6813      	ldr	r3, [r2, #0]
 80014f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80014fa:	6013      	str	r3, [r2, #0]
 80014fc:	4b23      	ldr	r3, [pc, #140]	; (800158c <stm32f107_usbd_init+0xa4>)
 80014fe:	4619      	mov	r1, r3
 8001500:	681a      	ldr	r2, [r3, #0]
 8001502:	2a00      	cmp	r2, #0
 8001504:	dafc      	bge.n	8001500 <stm32f107_usbd_init+0x18>
 8001506:	681a      	ldr	r2, [r3, #0]
 8001508:	f042 0201 	orr.w	r2, r2, #1
 800150c:	601a      	str	r2, [r3, #0]
 800150e:	680b      	ldr	r3, [r1, #0]
 8001510:	07db      	lsls	r3, r3, #31
 8001512:	d4fc      	bmi.n	800150e <stm32f107_usbd_init+0x26>
 8001514:	4b1e      	ldr	r3, [pc, #120]	; (8001590 <stm32f107_usbd_init+0xa8>)
 8001516:	481f      	ldr	r0, [pc, #124]	; (8001594 <stm32f107_usbd_init+0xac>)
 8001518:	681b      	ldr	r3, [r3, #0]
 800151a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800151e:	4b1e      	ldr	r3, [pc, #120]	; (8001598 <stm32f107_usbd_init+0xb0>)
 8001520:	681a      	ldr	r2, [r3, #0]
 8001522:	bf2c      	ite	cs
 8001524:	f442 1204 	orrcs.w	r2, r2, #2162688	; 0x210000
 8001528:	f442 2210 	orrcc.w	r2, r2, #589824	; 0x90000
 800152c:	601a      	str	r2, [r3, #0]
 800152e:	4a1b      	ldr	r2, [pc, #108]	; (800159c <stm32f107_usbd_init+0xb4>)
 8001530:	6813      	ldr	r3, [r2, #0]
 8001532:	f023 0302 	bic.w	r3, r3, #2
 8001536:	6013      	str	r3, [r2, #0]
 8001538:	f5a2 62ff 	sub.w	r2, r2, #2040	; 0x7f8
 800153c:	6813      	ldr	r3, [r2, #0]
 800153e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8001542:	f443 5370 	orr.w	r3, r3, #15360	; 0x3c00
 8001546:	6013      	str	r3, [r2, #0]
 8001548:	4b15      	ldr	r3, [pc, #84]	; (80015a0 <stm32f107_usbd_init+0xb8>)
 800154a:	2202      	movs	r2, #2
 800154c:	601a      	str	r2, [r3, #0]
 800154e:	4a15      	ldr	r2, [pc, #84]	; (80015a4 <stm32f107_usbd_init+0xbc>)
 8001550:	6813      	ldr	r3, [r2, #0]
 8001552:	f043 0303 	orr.w	r3, r3, #3
 8001556:	6013      	str	r3, [r2, #0]
 8001558:	4b13      	ldr	r3, [pc, #76]	; (80015a8 <stm32f107_usbd_init+0xc0>)
 800155a:	2200      	movs	r2, #0
 800155c:	601a      	str	r2, [r3, #0]
 800155e:	4a13      	ldr	r2, [pc, #76]	; (80015ac <stm32f107_usbd_init+0xc4>)
 8001560:	2380      	movs	r3, #128	; 0x80
 8001562:	6013      	str	r3, [r2, #0]
 8001564:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
 8001568:	f852 3c1c 	ldr.w	r3, [r2, #-28]
 800156c:	f043 0301 	orr.w	r3, r3, #1
 8001570:	f842 3c1c 	str.w	r3, [r2, #-28]
 8001574:	4b0e      	ldr	r3, [pc, #56]	; (80015b0 <stm32f107_usbd_init+0xc8>)
 8001576:	4a0f      	ldr	r2, [pc, #60]	; (80015b4 <stm32f107_usbd_init+0xcc>)
 8001578:	601a      	str	r2, [r3, #0]
 800157a:	220f      	movs	r2, #15
 800157c:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8001580:	2201      	movs	r2, #1
 8001582:	f8c3 27f8 	str.w	r2, [r3, #2040]	; 0x7f8
 8001586:	bd08      	pop	{r3, pc}
 8001588:	5000000c 	.word	0x5000000c
 800158c:	50000010 	.word	0x50000010
 8001590:	5000003c 	.word	0x5000003c
 8001594:	200002ac 	.word	0x200002ac
 8001598:	50000038 	.word	0x50000038
 800159c:	50000804 	.word	0x50000804
 80015a0:	50000014 	.word	0x50000014
 80015a4:	50000800 	.word	0x50000800
 80015a8:	50000e00 	.word	0x50000e00
 80015ac:	50000024 	.word	0x50000024
 80015b0:	50000018 	.word	0x50000018
 80015b4:	80042810 	.word	0x80042810

080015b8 <msc_control_request>:
 80015b8:	7848      	ldrb	r0, [r1, #1]
 80015ba:	28fe      	cmp	r0, #254	; 0xfe
 80015bc:	d004      	beq.n	80015c8 <msc_control_request+0x10>
 80015be:	f1a0 03ff 	sub.w	r3, r0, #255	; 0xff
 80015c2:	4258      	negs	r0, r3
 80015c4:	4158      	adcs	r0, r3
 80015c6:	4770      	bx	lr
 80015c8:	6812      	ldr	r2, [r2, #0]
 80015ca:	2100      	movs	r1, #0
 80015cc:	2001      	movs	r0, #1
 80015ce:	7011      	strb	r1, [r2, #0]
 80015d0:	8018      	strh	r0, [r3, #0]
 80015d2:	4770      	bx	lr

080015d4 <msc_set_config>:
 80015d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80015d6:	4c0d      	ldr	r4, [pc, #52]	; (800160c <msc_set_config+0x38>)
 80015d8:	4a0d      	ldr	r2, [pc, #52]	; (8001610 <msc_set_config+0x3c>)
 80015da:	7963      	ldrb	r3, [r4, #5]
 80015dc:	7921      	ldrb	r1, [r4, #4]
 80015de:	9200      	str	r2, [sp, #0]
 80015e0:	2202      	movs	r2, #2
 80015e2:	4605      	mov	r5, r0
 80015e4:	f7ff fb44 	bl	8000c70 <usbd_ep_setup>
 80015e8:	4a0a      	ldr	r2, [pc, #40]	; (8001614 <msc_set_config+0x40>)
 80015ea:	79e3      	ldrb	r3, [r4, #7]
 80015ec:	79a1      	ldrb	r1, [r4, #6]
 80015ee:	9200      	str	r2, [sp, #0]
 80015f0:	4628      	mov	r0, r5
 80015f2:	2202      	movs	r2, #2
 80015f4:	f7ff fb3c 	bl	8000c70 <usbd_ep_setup>
 80015f8:	4b07      	ldr	r3, [pc, #28]	; (8001618 <msc_set_config+0x44>)
 80015fa:	227f      	movs	r2, #127	; 0x7f
 80015fc:	2121      	movs	r1, #33	; 0x21
 80015fe:	4628      	mov	r0, r5
 8001600:	b003      	add	sp, #12
 8001602:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001606:	f7ff beb7 	b.w	8001378 <usbd_register_control_callback>
 800160a:	bf00      	nop
 800160c:	200003a8 	.word	0x200003a8
 8001610:	08001935 	.word	0x08001935
 8001614:	08001a09 	.word	0x08001a09
 8001618:	080015b9 	.word	0x080015b9

0800161c <scsi_command.constprop.3>:
 800161c:	b570      	push	{r4, r5, r6, lr}
 800161e:	4605      	mov	r5, r0
 8001620:	4cbc      	ldr	r4, [pc, #752]	; (8001914 <scsi_command.constprop.3+0x2f8>)
 8001622:	b9b0      	cbnz	r0, 8001652 <scsi_command.constprop.3+0x36>
 8001624:	f245 3355 	movw	r3, #21333	; 0x5355
 8001628:	f8a4 3262 	strh.w	r3, [r4, #610]	; 0x262
 800162c:	f245 3342 	movw	r3, #21314	; 0x5342
 8001630:	f8a4 3264 	strh.w	r3, [r4, #612]	; 0x264
 8001634:	f8d4 302d 	ldr.w	r3, [r4, #45]	; 0x2d
 8001638:	f884 0261 	strb.w	r0, [r4, #609]	; 0x261
 800163c:	f8c4 3266 	str.w	r3, [r4, #614]	; 0x266
 8001640:	f8a4 026a 	strh.w	r0, [r4, #618]	; 0x26a
 8001644:	f8a4 026c 	strh.w	r0, [r4, #620]	; 0x26c
 8001648:	f884 026e 	strb.w	r0, [r4, #622]	; 0x26e
 800164c:	64e0      	str	r0, [r4, #76]	; 0x4c
 800164e:	64a0      	str	r0, [r4, #72]	; 0x48
 8001650:	6520      	str	r0, [r4, #80]	; 0x50
 8001652:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8001656:	2b12      	cmp	r3, #18
 8001658:	f000 80b6 	beq.w	80017c8 <scsi_command.constprop.3+0x1ac>
 800165c:	d82c      	bhi.n	80016b8 <scsi_command.constprop.3+0x9c>
 800165e:	2b04      	cmp	r3, #4
 8001660:	d062      	beq.n	8001728 <scsi_command.constprop.3+0x10c>
 8001662:	d811      	bhi.n	8001688 <scsi_command.constprop.3+0x6c>
 8001664:	b383      	cbz	r3, 80016c8 <scsi_command.constprop.3+0xac>
 8001666:	2b03      	cmp	r3, #3
 8001668:	d070      	beq.n	800174c <scsi_command.constprop.3+0x130>
 800166a:	2305      	movs	r3, #5
 800166c:	f884 3270 	strb.w	r3, [r4, #624]	; 0x270
 8001670:	2320      	movs	r3, #32
 8001672:	f884 3271 	strb.w	r3, [r4, #625]	; 0x271
 8001676:	2300      	movs	r3, #0
 8001678:	f884 3272 	strb.w	r3, [r4, #626]	; 0x272
 800167c:	64e3      	str	r3, [r4, #76]	; 0x4c
 800167e:	64a3      	str	r3, [r4, #72]	; 0x48
 8001680:	2301      	movs	r3, #1
 8001682:	f884 326e 	strb.w	r3, [r4, #622]	; 0x26e
 8001686:	bd70      	pop	{r4, r5, r6, pc}
 8001688:	2b08      	cmp	r3, #8
 800168a:	f000 8090 	beq.w	80017ae <scsi_command.constprop.3+0x192>
 800168e:	2b0a      	cmp	r3, #10
 8001690:	d1eb      	bne.n	800166a <scsi_command.constprop.3+0x4e>
 8001692:	2d00      	cmp	r5, #0
 8001694:	d1f7      	bne.n	8001686 <scsi_command.constprop.3+0x6a>
 8001696:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800169a:	8f62      	ldrh	r2, [r4, #58]	; 0x3a
 800169c:	041b      	lsls	r3, r3, #16
 800169e:	ba52      	rev16	r2, r2
 80016a0:	f403 13f8 	and.w	r3, r3, #2031616	; 0x1f0000
 80016a4:	b292      	uxth	r2, r2
 80016a6:	4313      	orrs	r3, r2
 80016a8:	6563      	str	r3, [r4, #84]	; 0x54
 80016aa:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80016ae:	65a3      	str	r3, [r4, #88]	; 0x58
 80016b0:	025b      	lsls	r3, r3, #9
 80016b2:	65e5      	str	r5, [r4, #92]	; 0x5c
 80016b4:	64a3      	str	r3, [r4, #72]	; 0x48
 80016b6:	bd70      	pop	{r4, r5, r6, pc}
 80016b8:	2b23      	cmp	r3, #35	; 0x23
 80016ba:	f000 810d 	beq.w	80018d8 <scsi_command.constprop.3+0x2bc>
 80016be:	d80b      	bhi.n	80016d8 <scsi_command.constprop.3+0xbc>
 80016c0:	2b1a      	cmp	r3, #26
 80016c2:	d063      	beq.n	800178c <scsi_command.constprop.3+0x170>
 80016c4:	2b1d      	cmp	r3, #29
 80016c6:	d1d0      	bne.n	800166a <scsi_command.constprop.3+0x4e>
 80016c8:	2300      	movs	r3, #0
 80016ca:	f884 3270 	strb.w	r3, [r4, #624]	; 0x270
 80016ce:	f884 3271 	strb.w	r3, [r4, #625]	; 0x271
 80016d2:	f884 3272 	strb.w	r3, [r4, #626]	; 0x272
 80016d6:	bd70      	pop	{r4, r5, r6, pc}
 80016d8:	2b28      	cmp	r3, #40	; 0x28
 80016da:	f000 80ca 	beq.w	8001872 <scsi_command.constprop.3+0x256>
 80016de:	2b2a      	cmp	r3, #42	; 0x2a
 80016e0:	f000 80e1 	beq.w	80018a6 <scsi_command.constprop.3+0x28a>
 80016e4:	2b25      	cmp	r3, #37	; 0x25
 80016e6:	d1c0      	bne.n	800166a <scsi_command.constprop.3+0x4e>
 80016e8:	2d00      	cmp	r5, #0
 80016ea:	d1cc      	bne.n	8001686 <scsi_command.constprop.3+0x6a>
 80016ec:	6963      	ldr	r3, [r4, #20]
 80016ee:	f884 3063 	strb.w	r3, [r4, #99]	; 0x63
 80016f2:	0e1a      	lsrs	r2, r3, #24
 80016f4:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
 80016f8:	0c1a      	lsrs	r2, r3, #16
 80016fa:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
 80016fe:	0a1a      	lsrs	r2, r3, #8
 8001700:	2302      	movs	r3, #2
 8001702:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8001706:	f884 2062 	strb.w	r2, [r4, #98]	; 0x62
 800170a:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 800170e:	f884 5065 	strb.w	r5, [r4, #101]	; 0x65
 8001712:	f884 5067 	strb.w	r5, [r4, #103]	; 0x67
 8001716:	2308      	movs	r3, #8
 8001718:	f884 5270 	strb.w	r5, [r4, #624]	; 0x270
 800171c:	f884 5271 	strb.w	r5, [r4, #625]	; 0x271
 8001720:	f884 5272 	strb.w	r5, [r4, #626]	; 0x272
 8001724:	64e3      	str	r3, [r4, #76]	; 0x4c
 8001726:	bd70      	pop	{r4, r5, r6, pc}
 8001728:	2d00      	cmp	r5, #0
 800172a:	d1ac      	bne.n	8001686 <scsi_command.constprop.3+0x6a>
 800172c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001730:	4629      	mov	r1, r5
 8001732:	4879      	ldr	r0, [pc, #484]	; (8001918 <scsi_command.constprop.3+0x2fc>)
 8001734:	4e78      	ldr	r6, [pc, #480]	; (8001918 <scsi_command.constprop.3+0x2fc>)
 8001736:	f000 fe1d 	bl	8002374 <memset>
 800173a:	6963      	ldr	r3, [r4, #20]
 800173c:	429d      	cmp	r5, r3
 800173e:	d2c3      	bcs.n	80016c8 <scsi_command.constprop.3+0xac>
 8001740:	4628      	mov	r0, r5
 8001742:	69e3      	ldr	r3, [r4, #28]
 8001744:	4631      	mov	r1, r6
 8001746:	4798      	blx	r3
 8001748:	3501      	adds	r5, #1
 800174a:	e7f6      	b.n	800173a <scsi_command.constprop.3+0x11e>
 800174c:	2d00      	cmp	r5, #0
 800174e:	d19a      	bne.n	8001686 <scsi_command.constprop.3+0x6a>
 8001750:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8001754:	64e3      	str	r3, [r4, #76]	; 0x4c
 8001756:	4b71      	ldr	r3, [pc, #452]	; (800191c <scsi_command.constprop.3+0x300>)
 8001758:	4a6f      	ldr	r2, [pc, #444]	; (8001918 <scsi_command.constprop.3+0x2fc>)
 800175a:	f103 0610 	add.w	r6, r3, #16
 800175e:	6818      	ldr	r0, [r3, #0]
 8001760:	6859      	ldr	r1, [r3, #4]
 8001762:	4615      	mov	r5, r2
 8001764:	c503      	stmia	r5!, {r0, r1}
 8001766:	3308      	adds	r3, #8
 8001768:	42b3      	cmp	r3, r6
 800176a:	462a      	mov	r2, r5
 800176c:	d1f7      	bne.n	800175e <scsi_command.constprop.3+0x142>
 800176e:	881b      	ldrh	r3, [r3, #0]
 8001770:	802b      	strh	r3, [r5, #0]
 8001772:	f894 3270 	ldrb.w	r3, [r4, #624]	; 0x270
 8001776:	f884 3062 	strb.w	r3, [r4, #98]	; 0x62
 800177a:	f894 3271 	ldrb.w	r3, [r4, #625]	; 0x271
 800177e:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 8001782:	f894 3272 	ldrb.w	r3, [r4, #626]	; 0x272
 8001786:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800178a:	bd70      	pop	{r4, r5, r6, pc}
 800178c:	2d00      	cmp	r5, #0
 800178e:	f47f af7a 	bne.w	8001686 <scsi_command.constprop.3+0x6a>
 8001792:	2304      	movs	r3, #4
 8001794:	2203      	movs	r2, #3
 8001796:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
 800179a:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800179e:	f884 5062 	strb.w	r5, [r4, #98]	; 0x62
 80017a2:	f8a4 326a 	strh.w	r3, [r4, #618]	; 0x26a
 80017a6:	f8a4 526c 	strh.w	r5, [r4, #620]	; 0x26c
 80017aa:	64e3      	str	r3, [r4, #76]	; 0x4c
 80017ac:	bd70      	pop	{r4, r5, r6, pc}
 80017ae:	2d00      	cmp	r5, #0
 80017b0:	f47f af69 	bne.w	8001686 <scsi_command.constprop.3+0x6a>
 80017b4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80017b6:	65e5      	str	r5, [r4, #92]	; 0x5c
 80017b8:	ba5b      	rev16	r3, r3
 80017ba:	b29b      	uxth	r3, r3
 80017bc:	6563      	str	r3, [r4, #84]	; 0x54
 80017be:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80017c2:	65a3      	str	r3, [r4, #88]	; 0x58
 80017c4:	025b      	lsls	r3, r3, #9
 80017c6:	e7a7      	b.n	8001718 <scsi_command.constprop.3+0xfc>
 80017c8:	2d00      	cmp	r5, #0
 80017ca:	f47f af5c 	bne.w	8001686 <scsi_command.constprop.3+0x6a>
 80017ce:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80017d2:	07db      	lsls	r3, r3, #31
 80017d4:	d43a      	bmi.n	800184c <scsi_command.constprop.3+0x230>
 80017d6:	2324      	movs	r3, #36	; 0x24
 80017d8:	64e3      	str	r3, [r4, #76]	; 0x4c
 80017da:	4b51      	ldr	r3, [pc, #324]	; (8001920 <scsi_command.constprop.3+0x304>)
 80017dc:	4a4e      	ldr	r2, [pc, #312]	; (8001918 <scsi_command.constprop.3+0x2fc>)
 80017de:	f103 0620 	add.w	r6, r3, #32
 80017e2:	6818      	ldr	r0, [r3, #0]
 80017e4:	6859      	ldr	r1, [r3, #4]
 80017e6:	4615      	mov	r5, r2
 80017e8:	c503      	stmia	r5!, {r0, r1}
 80017ea:	3308      	adds	r3, #8
 80017ec:	42b3      	cmp	r3, r6
 80017ee:	462a      	mov	r2, r5
 80017f0:	d1f7      	bne.n	80017e2 <scsi_command.constprop.3+0x1c6>
 80017f2:	6818      	ldr	r0, [r3, #0]
 80017f4:	6028      	str	r0, [r5, #0]
 80017f6:	68a5      	ldr	r5, [r4, #8]
 80017f8:	4628      	mov	r0, r5
 80017fa:	f000 fe21 	bl	8002440 <strlen>
 80017fe:	2808      	cmp	r0, #8
 8001800:	4602      	mov	r2, r0
 8001802:	4629      	mov	r1, r5
 8001804:	bf28      	it	cs
 8001806:	2208      	movcs	r2, #8
 8001808:	4846      	ldr	r0, [pc, #280]	; (8001924 <scsi_command.constprop.3+0x308>)
 800180a:	f000 fd19 	bl	8002240 <memcpy>
 800180e:	68e5      	ldr	r5, [r4, #12]
 8001810:	4628      	mov	r0, r5
 8001812:	f000 fe15 	bl	8002440 <strlen>
 8001816:	2810      	cmp	r0, #16
 8001818:	4602      	mov	r2, r0
 800181a:	4629      	mov	r1, r5
 800181c:	bf28      	it	cs
 800181e:	2210      	movcs	r2, #16
 8001820:	4841      	ldr	r0, [pc, #260]	; (8001928 <scsi_command.constprop.3+0x30c>)
 8001822:	f000 fd0d 	bl	8002240 <memcpy>
 8001826:	6925      	ldr	r5, [r4, #16]
 8001828:	4628      	mov	r0, r5
 800182a:	f000 fe09 	bl	8002440 <strlen>
 800182e:	2804      	cmp	r0, #4
 8001830:	4602      	mov	r2, r0
 8001832:	4629      	mov	r1, r5
 8001834:	bf28      	it	cs
 8001836:	2204      	movcs	r2, #4
 8001838:	483c      	ldr	r0, [pc, #240]	; (800192c <scsi_command.constprop.3+0x310>)
 800183a:	f000 fd01 	bl	8002240 <memcpy>
 800183e:	2300      	movs	r3, #0
 8001840:	2224      	movs	r2, #36	; 0x24
 8001842:	f8a4 226a 	strh.w	r2, [r4, #618]	; 0x26a
 8001846:	f8a4 326c 	strh.w	r3, [r4, #620]	; 0x26c
 800184a:	e73e      	b.n	80016ca <scsi_command.constprop.3+0xae>
 800184c:	2314      	movs	r3, #20
 800184e:	64e3      	str	r3, [r4, #76]	; 0x4c
 8001850:	4b37      	ldr	r3, [pc, #220]	; (8001930 <scsi_command.constprop.3+0x314>)
 8001852:	4a31      	ldr	r2, [pc, #196]	; (8001918 <scsi_command.constprop.3+0x2fc>)
 8001854:	f103 0610 	add.w	r6, r3, #16
 8001858:	6818      	ldr	r0, [r3, #0]
 800185a:	6859      	ldr	r1, [r3, #4]
 800185c:	4615      	mov	r5, r2
 800185e:	c503      	stmia	r5!, {r0, r1}
 8001860:	3308      	adds	r3, #8
 8001862:	42b3      	cmp	r3, r6
 8001864:	462a      	mov	r2, r5
 8001866:	d1f7      	bne.n	8001858 <scsi_command.constprop.3+0x23c>
 8001868:	6818      	ldr	r0, [r3, #0]
 800186a:	6028      	str	r0, [r5, #0]
 800186c:	2300      	movs	r3, #0
 800186e:	2214      	movs	r2, #20
 8001870:	e7e7      	b.n	8001842 <scsi_command.constprop.3+0x226>
 8001872:	2d00      	cmp	r5, #0
 8001874:	f47f af07 	bne.w	8001686 <scsi_command.constprop.3+0x6a>
 8001878:	f894 303b 	ldrb.w	r3, [r4, #59]	; 0x3b
 800187c:	f894 203a 	ldrb.w	r2, [r4, #58]	; 0x3a
 8001880:	041b      	lsls	r3, r3, #16
 8001882:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001886:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800188a:	4313      	orrs	r3, r2
 800188c:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8001890:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001894:	6563      	str	r3, [r4, #84]	; 0x54
 8001896:	f894 203f 	ldrb.w	r2, [r4, #63]	; 0x3f
 800189a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800189e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80018a2:	65a3      	str	r3, [r4, #88]	; 0x58
 80018a4:	e78e      	b.n	80017c4 <scsi_command.constprop.3+0x1a8>
 80018a6:	2d00      	cmp	r5, #0
 80018a8:	f47f aeed 	bne.w	8001686 <scsi_command.constprop.3+0x6a>
 80018ac:	f894 303b 	ldrb.w	r3, [r4, #59]	; 0x3b
 80018b0:	f894 203a 	ldrb.w	r2, [r4, #58]	; 0x3a
 80018b4:	041b      	lsls	r3, r3, #16
 80018b6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80018ba:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 80018be:	4313      	orrs	r3, r2
 80018c0:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 80018c4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80018c8:	6563      	str	r3, [r4, #84]	; 0x54
 80018ca:	f894 203f 	ldrb.w	r2, [r4, #63]	; 0x3f
 80018ce:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80018d2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80018d6:	e6ea      	b.n	80016ae <scsi_command.constprop.3+0x92>
 80018d8:	2d00      	cmp	r5, #0
 80018da:	f47f aed4 	bne.w	8001686 <scsi_command.constprop.3+0x6a>
 80018de:	2308      	movs	r3, #8
 80018e0:	f884 3063 	strb.w	r3, [r4, #99]	; 0x63
 80018e4:	6963      	ldr	r3, [r4, #20]
 80018e6:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80018ea:	0e1a      	lsrs	r2, r3, #24
 80018ec:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 80018f0:	0c1a      	lsrs	r2, r3, #16
 80018f2:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80018f6:	0a1a      	lsrs	r2, r3, #8
 80018f8:	2302      	movs	r3, #2
 80018fa:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 80018fe:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8001902:	f884 2066 	strb.w	r2, [r4, #102]	; 0x66
 8001906:	f884 5069 	strb.w	r5, [r4, #105]	; 0x69
 800190a:	f884 506b 	strb.w	r5, [r4, #107]	; 0x6b
 800190e:	2309      	movs	r3, #9
 8001910:	e702      	b.n	8001718 <scsi_command.constprop.3+0xfc>
 8001912:	bf00      	nop
 8001914:	200003a8 	.word	0x200003a8
 8001918:	20000408 	.word	0x20000408
 800191c:	08002d0c 	.word	0x08002d0c
 8001920:	08002cd4 	.word	0x08002cd4
 8001924:	20000410 	.word	0x20000410
 8001928:	20000418 	.word	0x20000418
 800192c:	20000428 	.word	0x20000428
 8001930:	08002cf8 	.word	0x08002cf8

08001934 <msc_data_tx_cb>:
 8001934:	b570      	push	{r4, r5, r6, lr}
 8001936:	4c33      	ldr	r4, [pc, #204]	; (8001a04 <msc_data_tx_cb+0xd0>)
 8001938:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800193a:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 800193c:	4293      	cmp	r3, r2
 800193e:	4605      	mov	r5, r0
 8001940:	460e      	mov	r6, r1
 8001942:	d222      	bcs.n	800198a <msc_data_tx_cb+0x56>
 8001944:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8001946:	b162      	cbz	r2, 8001962 <msc_data_tx_cb+0x2e>
 8001948:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800194c:	b94b      	cbnz	r3, 8001962 <msc_data_tx_cb+0x2e>
 800194e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001950:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001952:	69a3      	ldr	r3, [r4, #24]
 8001954:	f104 0160 	add.w	r1, r4, #96	; 0x60
 8001958:	4410      	add	r0, r2
 800195a:	4798      	blx	r3
 800195c:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 800195e:	3301      	adds	r3, #1
 8001960:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001962:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001964:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8001966:	79e1      	ldrb	r1, [r4, #7]
 8001968:	1a9b      	subs	r3, r3, r2
 800196a:	428b      	cmp	r3, r1
 800196c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001970:	bfa8      	it	ge
 8001972:	460b      	movge	r3, r1
 8001974:	3260      	adds	r2, #96	; 0x60
 8001976:	b29b      	uxth	r3, r3
 8001978:	4422      	add	r2, r4
 800197a:	4631      	mov	r1, r6
 800197c:	4628      	mov	r0, r5
 800197e:	f7ff f999 	bl	8000cb4 <usbd_ep_write_packet>
 8001982:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001984:	4418      	add	r0, r3
 8001986:	6520      	str	r0, [r4, #80]	; 0x50
 8001988:	bd70      	pop	{r4, r5, r6, pc}
 800198a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800198c:	b13b      	cbz	r3, 800199e <msc_data_tx_cb+0x6a>
 800198e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001990:	4293      	cmp	r3, r2
 8001992:	d104      	bne.n	800199e <msc_data_tx_cb+0x6a>
 8001994:	2300      	movs	r3, #0
 8001996:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001998:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800199a:	b103      	cbz	r3, 800199e <msc_data_tx_cb+0x6a>
 800199c:	4798      	blx	r3
 800199e:	f894 3260 	ldrb.w	r3, [r4, #608]	; 0x260
 80019a2:	b92b      	cbnz	r3, 80019b0 <msc_data_tx_cb+0x7c>
 80019a4:	2001      	movs	r0, #1
 80019a6:	f7ff fe39 	bl	800161c <scsi_command.constprop.3>
 80019aa:	2301      	movs	r3, #1
 80019ac:	f884 3260 	strb.w	r3, [r4, #608]	; 0x260
 80019b0:	f894 2261 	ldrb.w	r2, [r4, #609]	; 0x261
 80019b4:	f1c2 010d 	rsb	r1, r2, #13
 80019b8:	2900      	cmp	r1, #0
 80019ba:	dd11      	ble.n	80019e0 <msc_data_tx_cb+0xac>
 80019bc:	79e3      	ldrb	r3, [r4, #7]
 80019be:	428b      	cmp	r3, r1
 80019c0:	bfa8      	it	ge
 80019c2:	460b      	movge	r3, r1
 80019c4:	f202 2262 	addw	r2, r2, #610	; 0x262
 80019c8:	b29b      	uxth	r3, r3
 80019ca:	4422      	add	r2, r4
 80019cc:	4631      	mov	r1, r6
 80019ce:	4628      	mov	r0, r5
 80019d0:	f7ff f970 	bl	8000cb4 <usbd_ep_write_packet>
 80019d4:	f894 3261 	ldrb.w	r3, [r4, #609]	; 0x261
 80019d8:	4418      	add	r0, r3
 80019da:	f884 0261 	strb.w	r0, [r4, #609]	; 0x261
 80019de:	bd70      	pop	{r4, r5, r6, pc}
 80019e0:	2a0d      	cmp	r2, #13
 80019e2:	d10e      	bne.n	8001a02 <msc_data_tx_cb+0xce>
 80019e4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80019e8:	6563      	str	r3, [r4, #84]	; 0x54
 80019ea:	2300      	movs	r3, #0
 80019ec:	65a3      	str	r3, [r4, #88]	; 0x58
 80019ee:	65e3      	str	r3, [r4, #92]	; 0x5c
 80019f0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80019f4:	64a3      	str	r3, [r4, #72]	; 0x48
 80019f6:	64e3      	str	r3, [r4, #76]	; 0x4c
 80019f8:	6523      	str	r3, [r4, #80]	; 0x50
 80019fa:	f884 3261 	strb.w	r3, [r4, #609]	; 0x261
 80019fe:	f884 3260 	strb.w	r3, [r4, #608]	; 0x260
 8001a02:	bd70      	pop	{r4, r5, r6, pc}
 8001a04:	200003a8 	.word	0x200003a8

08001a08 <msc_data_rx_cb>:
 8001a08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a0a:	4c55      	ldr	r4, [pc, #340]	; (8001b60 <msc_data_rx_cb+0x158>)
 8001a0c:	f894 2028 	ldrb.w	r2, [r4, #40]	; 0x28
 8001a10:	f1c2 071f 	rsb	r7, r2, #31
 8001a14:	2f00      	cmp	r7, #0
 8001a16:	4605      	mov	r5, r0
 8001a18:	460e      	mov	r6, r1
 8001a1a:	dc2e      	bgt.n	8001a7a <msc_data_rx_cb+0x72>
 8001a1c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001a1e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8001a20:	4293      	cmp	r3, r2
 8001a22:	d343      	bcc.n	8001aac <msc_data_rx_cb+0xa4>
 8001a24:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 8001a26:	4293      	cmp	r3, r2
 8001a28:	f080 8088 	bcs.w	8001b3c <msc_data_rx_cb+0x134>
 8001a2c:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8001a2e:	b182      	cbz	r2, 8001a52 <msc_data_rx_cb+0x4a>
 8001a30:	b913      	cbnz	r3, 8001a38 <msc_data_rx_cb+0x30>
 8001a32:	6a23      	ldr	r3, [r4, #32]
 8001a34:	b103      	cbz	r3, 8001a38 <msc_data_rx_cb+0x30>
 8001a36:	4798      	blx	r3
 8001a38:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001a3a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001a3e:	b943      	cbnz	r3, 8001a52 <msc_data_rx_cb+0x4a>
 8001a40:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001a42:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001a44:	69a3      	ldr	r3, [r4, #24]
 8001a46:	4947      	ldr	r1, [pc, #284]	; (8001b64 <msc_data_rx_cb+0x15c>)
 8001a48:	4410      	add	r0, r2
 8001a4a:	4798      	blx	r3
 8001a4c:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8001a4e:	3301      	adds	r3, #1
 8001a50:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001a52:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001a54:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8001a56:	79e1      	ldrb	r1, [r4, #7]
 8001a58:	1a9b      	subs	r3, r3, r2
 8001a5a:	428b      	cmp	r3, r1
 8001a5c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001a60:	bfa8      	it	ge
 8001a62:	460b      	movge	r3, r1
 8001a64:	3260      	adds	r2, #96	; 0x60
 8001a66:	b29b      	uxth	r3, r3
 8001a68:	4422      	add	r2, r4
 8001a6a:	7921      	ldrb	r1, [r4, #4]
 8001a6c:	4628      	mov	r0, r5
 8001a6e:	f7ff f921 	bl	8000cb4 <usbd_ep_write_packet>
 8001a72:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001a74:	4418      	add	r0, r3
 8001a76:	6520      	str	r0, [r4, #80]	; 0x50
 8001a78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001a7a:	79e3      	ldrb	r3, [r4, #7]
 8001a7c:	42bb      	cmp	r3, r7
 8001a7e:	bfa8      	it	ge
 8001a80:	463b      	movge	r3, r7
 8001a82:	3229      	adds	r2, #41	; 0x29
 8001a84:	b29b      	uxth	r3, r3
 8001a86:	4422      	add	r2, r4
 8001a88:	f7ff f91c 	bl	8000cc4 <usbd_ep_read_packet>
 8001a8c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8001a90:	4418      	add	r0, r3
 8001a92:	b2c0      	uxtb	r0, r0
 8001a94:	281f      	cmp	r0, #31
 8001a96:	f884 0028 	strb.w	r0, [r4, #40]	; 0x28
 8001a9a:	d1bf      	bne.n	8001a1c <msc_data_rx_cb+0x14>
 8001a9c:	2000      	movs	r0, #0
 8001a9e:	f7ff fdbd 	bl	800161c <scsi_command.constprop.3>
 8001aa2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001aa4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001aa6:	429a      	cmp	r2, r3
 8001aa8:	d2b8      	bcs.n	8001a1c <msc_data_rx_cb+0x14>
 8001aaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001aac:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8001aae:	b11a      	cbz	r2, 8001ab8 <msc_data_rx_cb+0xb0>
 8001ab0:	b913      	cbnz	r3, 8001ab8 <msc_data_rx_cb+0xb0>
 8001ab2:	6a23      	ldr	r3, [r4, #32]
 8001ab4:	b103      	cbz	r3, 8001ab8 <msc_data_rx_cb+0xb0>
 8001ab6:	4798      	blx	r3
 8001ab8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001aba:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001abc:	79e1      	ldrb	r1, [r4, #7]
 8001abe:	1a9b      	subs	r3, r3, r2
 8001ac0:	428b      	cmp	r3, r1
 8001ac2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001ac6:	bfa8      	it	ge
 8001ac8:	460b      	movge	r3, r1
 8001aca:	3260      	adds	r2, #96	; 0x60
 8001acc:	b29b      	uxth	r3, r3
 8001ace:	4422      	add	r2, r4
 8001ad0:	4631      	mov	r1, r6
 8001ad2:	4628      	mov	r0, r5
 8001ad4:	f7ff f8f6 	bl	8000cc4 <usbd_ep_read_packet>
 8001ad8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8001ada:	4418      	add	r0, r3
 8001adc:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001ade:	6520      	str	r0, [r4, #80]	; 0x50
 8001ae0:	b15b      	cbz	r3, 8001afa <msc_data_rx_cb+0xf2>
 8001ae2:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8001ae6:	b940      	cbnz	r0, 8001afa <msc_data_rx_cb+0xf2>
 8001ae8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001aea:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001aec:	69e3      	ldr	r3, [r4, #28]
 8001aee:	491d      	ldr	r1, [pc, #116]	; (8001b64 <msc_data_rx_cb+0x15c>)
 8001af0:	4410      	add	r0, r2
 8001af2:	4798      	blx	r3
 8001af4:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8001af6:	3301      	adds	r3, #1
 8001af8:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001afa:	f894 3260 	ldrb.w	r3, [r4, #608]	; 0x260
 8001afe:	b92b      	cbnz	r3, 8001b0c <msc_data_rx_cb+0x104>
 8001b00:	2001      	movs	r0, #1
 8001b02:	f7ff fd8b 	bl	800161c <scsi_command.constprop.3>
 8001b06:	2301      	movs	r3, #1
 8001b08:	f884 3260 	strb.w	r3, [r4, #608]	; 0x260
 8001b0c:	f894 2261 	ldrb.w	r2, [r4, #609]	; 0x261
 8001b10:	f1c2 010d 	rsb	r1, r2, #13
 8001b14:	2900      	cmp	r1, #0
 8001b16:	dd10      	ble.n	8001b3a <msc_data_rx_cb+0x132>
 8001b18:	79e3      	ldrb	r3, [r4, #7]
 8001b1a:	428b      	cmp	r3, r1
 8001b1c:	bfa8      	it	ge
 8001b1e:	460b      	movge	r3, r1
 8001b20:	f202 2262 	addw	r2, r2, #610	; 0x262
 8001b24:	b29b      	uxth	r3, r3
 8001b26:	4422      	add	r2, r4
 8001b28:	7921      	ldrb	r1, [r4, #4]
 8001b2a:	4628      	mov	r0, r5
 8001b2c:	f7ff f8c2 	bl	8000cb4 <usbd_ep_write_packet>
 8001b30:	f894 3261 	ldrb.w	r3, [r4, #609]	; 0x261
 8001b34:	4418      	add	r0, r3
 8001b36:	f884 0261 	strb.w	r0, [r4, #609]	; 0x261
 8001b3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b3c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	d0db      	beq.n	8001afa <msc_data_rx_cb+0xf2>
 8001b42:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001b44:	4293      	cmp	r3, r2
 8001b46:	d1d8      	bne.n	8001afa <msc_data_rx_cb+0xf2>
 8001b48:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001b4a:	69e2      	ldr	r2, [r4, #28]
 8001b4c:	4905      	ldr	r1, [pc, #20]	; (8001b64 <msc_data_rx_cb+0x15c>)
 8001b4e:	4418      	add	r0, r3
 8001b50:	4790      	blx	r2
 8001b52:	2300      	movs	r3, #0
 8001b54:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001b56:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001b58:	2b00      	cmp	r3, #0
 8001b5a:	d0ce      	beq.n	8001afa <msc_data_rx_cb+0xf2>
 8001b5c:	4798      	blx	r3
 8001b5e:	e7cc      	b.n	8001afa <msc_data_rx_cb+0xf2>
 8001b60:	200003a8 	.word	0x200003a8
 8001b64:	20000408 	.word	0x20000408

08001b68 <usb_msc_init>:
 8001b68:	b510      	push	{r4, lr}
 8001b6a:	4c18      	ldr	r4, [pc, #96]	; (8001bcc <usb_msc_init+0x64>)
 8001b6c:	71a3      	strb	r3, [r4, #6]
 8001b6e:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8001b72:	71e3      	strb	r3, [r4, #7]
 8001b74:	9b03      	ldr	r3, [sp, #12]
 8001b76:	60a3      	str	r3, [r4, #8]
 8001b78:	9b04      	ldr	r3, [sp, #16]
 8001b7a:	60e3      	str	r3, [r4, #12]
 8001b7c:	9b05      	ldr	r3, [sp, #20]
 8001b7e:	6123      	str	r3, [r4, #16]
 8001b80:	9b06      	ldr	r3, [sp, #24]
 8001b82:	7121      	strb	r1, [r4, #4]
 8001b84:	3b01      	subs	r3, #1
 8001b86:	6163      	str	r3, [r4, #20]
 8001b88:	9b07      	ldr	r3, [sp, #28]
 8001b8a:	61a3      	str	r3, [r4, #24]
 8001b8c:	9b08      	ldr	r3, [sp, #32]
 8001b8e:	7162      	strb	r2, [r4, #5]
 8001b90:	61e3      	str	r3, [r4, #28]
 8001b92:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001b96:	2300      	movs	r3, #0
 8001b98:	490d      	ldr	r1, [pc, #52]	; (8001bd0 <usb_msc_init+0x68>)
 8001b9a:	6020      	str	r0, [r4, #0]
 8001b9c:	6223      	str	r3, [r4, #32]
 8001b9e:	6263      	str	r3, [r4, #36]	; 0x24
 8001ba0:	6562      	str	r2, [r4, #84]	; 0x54
 8001ba2:	65a3      	str	r3, [r4, #88]	; 0x58
 8001ba4:	65e3      	str	r3, [r4, #92]	; 0x5c
 8001ba6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8001baa:	64a3      	str	r3, [r4, #72]	; 0x48
 8001bac:	64e3      	str	r3, [r4, #76]	; 0x4c
 8001bae:	6523      	str	r3, [r4, #80]	; 0x50
 8001bb0:	f884 3260 	strb.w	r3, [r4, #608]	; 0x260
 8001bb4:	f884 3261 	strb.w	r3, [r4, #609]	; 0x261
 8001bb8:	f884 3270 	strb.w	r3, [r4, #624]	; 0x270
 8001bbc:	f884 3271 	strb.w	r3, [r4, #625]	; 0x271
 8001bc0:	f884 3272 	strb.w	r3, [r4, #626]	; 0x272
 8001bc4:	f7ff fab0 	bl	8001128 <usbd_register_set_config_callback>
 8001bc8:	4620      	mov	r0, r4
 8001bca:	bd10      	pop	{r4, pc}
 8001bcc:	200003a8 	.word	0x200003a8
 8001bd0:	080015d5 	.word	0x080015d5

08001bd4 <blocking_handler>:
 8001bd4:	e7fe      	b.n	8001bd4 <blocking_handler>

08001bd6 <null_handler>:
 8001bd6:	4770      	bx	lr

08001bd8 <reset_handler>:
 8001bd8:	b538      	push	{r3, r4, r5, lr}
 8001bda:	491b      	ldr	r1, [pc, #108]	; (8001c48 <reset_handler+0x70>)
 8001bdc:	4c1b      	ldr	r4, [pc, #108]	; (8001c4c <reset_handler+0x74>)
 8001bde:	481c      	ldr	r0, [pc, #112]	; (8001c50 <reset_handler+0x78>)
 8001be0:	2200      	movs	r2, #0
 8001be2:	1853      	adds	r3, r2, r1
 8001be4:	4283      	cmp	r3, r0
 8001be6:	d31b      	bcc.n	8001c20 <reset_handler+0x48>
 8001be8:	4a1a      	ldr	r2, [pc, #104]	; (8001c54 <reset_handler+0x7c>)
 8001bea:	2100      	movs	r1, #0
 8001bec:	4293      	cmp	r3, r2
 8001bee:	d31b      	bcc.n	8001c28 <reset_handler+0x50>
 8001bf0:	4a19      	ldr	r2, [pc, #100]	; (8001c58 <reset_handler+0x80>)
 8001bf2:	4c1a      	ldr	r4, [pc, #104]	; (8001c5c <reset_handler+0x84>)
 8001bf4:	6813      	ldr	r3, [r2, #0]
 8001bf6:	4d1a      	ldr	r5, [pc, #104]	; (8001c60 <reset_handler+0x88>)
 8001bf8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001bfc:	6013      	str	r3, [r2, #0]
 8001bfe:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8001c00:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001c04:	6753      	str	r3, [r2, #116]	; 0x74
 8001c06:	42ac      	cmp	r4, r5
 8001c08:	d311      	bcc.n	8001c2e <reset_handler+0x56>
 8001c0a:	4c16      	ldr	r4, [pc, #88]	; (8001c64 <reset_handler+0x8c>)
 8001c0c:	4d16      	ldr	r5, [pc, #88]	; (8001c68 <reset_handler+0x90>)
 8001c0e:	42ac      	cmp	r4, r5
 8001c10:	d311      	bcc.n	8001c36 <reset_handler+0x5e>
 8001c12:	f7fe fad1 	bl	80001b8 <main>
 8001c16:	4c15      	ldr	r4, [pc, #84]	; (8001c6c <reset_handler+0x94>)
 8001c18:	4d15      	ldr	r5, [pc, #84]	; (8001c70 <reset_handler+0x98>)
 8001c1a:	42ac      	cmp	r4, r5
 8001c1c:	d30f      	bcc.n	8001c3e <reset_handler+0x66>
 8001c1e:	bd38      	pop	{r3, r4, r5, pc}
 8001c20:	5913      	ldr	r3, [r2, r4]
 8001c22:	5053      	str	r3, [r2, r1]
 8001c24:	3204      	adds	r2, #4
 8001c26:	e7dc      	b.n	8001be2 <reset_handler+0xa>
 8001c28:	6019      	str	r1, [r3, #0]
 8001c2a:	3304      	adds	r3, #4
 8001c2c:	e7de      	b.n	8001bec <reset_handler+0x14>
 8001c2e:	f854 3b04 	ldr.w	r3, [r4], #4
 8001c32:	4798      	blx	r3
 8001c34:	e7e7      	b.n	8001c06 <reset_handler+0x2e>
 8001c36:	f854 3b04 	ldr.w	r3, [r4], #4
 8001c3a:	4798      	blx	r3
 8001c3c:	e7e7      	b.n	8001c0e <reset_handler+0x36>
 8001c3e:	f854 3b04 	ldr.w	r3, [r4], #4
 8001c42:	4798      	blx	r3
 8001c44:	e7e9      	b.n	8001c1a <reset_handler+0x42>
 8001c46:	bf00      	nop
 8001c48:	20000000 	.word	0x20000000
 8001c4c:	08002d20 	.word	0x08002d20
 8001c50:	20000018 	.word	0x20000018
 8001c54:	2000061c 	.word	0x2000061c
 8001c58:	e000ed14 	.word	0xe000ed14
 8001c5c:	08002d20 	.word	0x08002d20
 8001c60:	08002d20 	.word	0x08002d20
 8001c64:	08002d20 	.word	0x08002d20
 8001c68:	08002d20 	.word	0x08002d20
 8001c6c:	08002d20 	.word	0x08002d20
 8001c70:	08002d20 	.word	0x08002d20

08001c74 <scb_reset_system>:
 8001c74:	4b01      	ldr	r3, [pc, #4]	; (8001c7c <scb_reset_system+0x8>)
 8001c76:	4a02      	ldr	r2, [pc, #8]	; (8001c80 <scb_reset_system+0xc>)
 8001c78:	601a      	str	r2, [r3, #0]
 8001c7a:	e7fe      	b.n	8001c7a <scb_reset_system+0x6>
 8001c7c:	e000ed0c 	.word	0xe000ed0c
 8001c80:	05fa0004 	.word	0x05fa0004

08001c84 <nvic_enable_irq>:
 8001c84:	4b05      	ldr	r3, [pc, #20]	; (8001c9c <nvic_enable_irq+0x18>)
 8001c86:	0942      	lsrs	r2, r0, #5
 8001c88:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8001c8c:	f000 001f 	and.w	r0, r0, #31
 8001c90:	2201      	movs	r2, #1
 8001c92:	fa02 f000 	lsl.w	r0, r2, r0
 8001c96:	6018      	str	r0, [r3, #0]
 8001c98:	4770      	bx	lr
 8001c9a:	bf00      	nop
 8001c9c:	e000e100 	.word	0xe000e100

08001ca0 <nvic_set_priority>:
 8001ca0:	285a      	cmp	r0, #90	; 0x5a
 8001ca2:	bf93      	iteet	ls
 8001ca4:	f100 4060 	addls.w	r0, r0, #3758096384	; 0xe0000000
 8001ca8:	f000 000f 	andhi.w	r0, r0, #15
 8001cac:	4b03      	ldrhi	r3, [pc, #12]	; (8001cbc <nvic_set_priority+0x1c>)
 8001cae:	f500 4064 	addls.w	r0, r0, #58368	; 0xe400
 8001cb2:	bf8c      	ite	hi
 8001cb4:	54c1      	strbhi	r1, [r0, r3]
 8001cb6:	7001      	strbls	r1, [r0, #0]
 8001cb8:	4770      	bx	lr
 8001cba:	bf00      	nop
 8001cbc:	e000ed14 	.word	0xe000ed14

08001cc0 <flash_wait_for_last_operation>:
 8001cc0:	4a02      	ldr	r2, [pc, #8]	; (8001ccc <flash_wait_for_last_operation+0xc>)
 8001cc2:	6813      	ldr	r3, [r2, #0]
 8001cc4:	03db      	lsls	r3, r3, #15
 8001cc6:	d4fc      	bmi.n	8001cc2 <flash_wait_for_last_operation+0x2>
 8001cc8:	4770      	bx	lr
 8001cca:	bf00      	nop
 8001ccc:	40023c0c 	.word	0x40023c0c

08001cd0 <flash_set_ws>:
 8001cd0:	4a03      	ldr	r2, [pc, #12]	; (8001ce0 <flash_set_ws+0x10>)
 8001cd2:	6813      	ldr	r3, [r2, #0]
 8001cd4:	f023 030f 	bic.w	r3, r3, #15
 8001cd8:	4318      	orrs	r0, r3
 8001cda:	6010      	str	r0, [r2, #0]
 8001cdc:	4770      	bx	lr
 8001cde:	bf00      	nop
 8001ce0:	40023c00 	.word	0x40023c00

08001ce4 <flash_dcache_enable>:
 8001ce4:	4a02      	ldr	r2, [pc, #8]	; (8001cf0 <flash_dcache_enable+0xc>)
 8001ce6:	6813      	ldr	r3, [r2, #0]
 8001ce8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001cec:	6013      	str	r3, [r2, #0]
 8001cee:	4770      	bx	lr
 8001cf0:	40023c00 	.word	0x40023c00

08001cf4 <flash_dcache_disable>:
 8001cf4:	4a02      	ldr	r2, [pc, #8]	; (8001d00 <flash_dcache_disable+0xc>)
 8001cf6:	6813      	ldr	r3, [r2, #0]
 8001cf8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001cfc:	6013      	str	r3, [r2, #0]
 8001cfe:	4770      	bx	lr
 8001d00:	40023c00 	.word	0x40023c00

08001d04 <flash_icache_enable>:
 8001d04:	4a02      	ldr	r2, [pc, #8]	; (8001d10 <flash_icache_enable+0xc>)
 8001d06:	6813      	ldr	r3, [r2, #0]
 8001d08:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001d0c:	6013      	str	r3, [r2, #0]
 8001d0e:	4770      	bx	lr
 8001d10:	40023c00 	.word	0x40023c00

08001d14 <flash_icache_disable>:
 8001d14:	4a02      	ldr	r2, [pc, #8]	; (8001d20 <flash_icache_disable+0xc>)
 8001d16:	6813      	ldr	r3, [r2, #0]
 8001d18:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001d1c:	6013      	str	r3, [r2, #0]
 8001d1e:	4770      	bx	lr
 8001d20:	40023c00 	.word	0x40023c00

08001d24 <pwr_set_vos_scale>:
 8001d24:	4a04      	ldr	r2, [pc, #16]	; (8001d38 <pwr_set_vos_scale+0x14>)
 8001d26:	6813      	ldr	r3, [r2, #0]
 8001d28:	0380      	lsls	r0, r0, #14
 8001d2a:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001d2e:	b280      	uxth	r0, r0
 8001d30:	4318      	orrs	r0, r3
 8001d32:	6010      	str	r0, [r2, #0]
 8001d34:	4770      	bx	lr
 8001d36:	bf00      	nop
 8001d38:	40007000 	.word	0x40007000

08001d3c <dwc_set_address>:
 8001d3c:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8001d40:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001d42:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8001d46:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8001d4a:	ea43 1101 	orr.w	r1, r3, r1, lsl #4
 8001d4e:	f8c2 1800 	str.w	r1, [r2, #2048]	; 0x800
 8001d52:	4770      	bx	lr

08001d54 <dwc_ep_setup>:
 8001d54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001d58:	f011 057f 	ands.w	r5, r1, #127	; 0x7f
 8001d5c:	9e08      	ldr	r6, [sp, #32]
 8001d5e:	f8d0 e0dc 	ldr.w	lr, [r0, #220]	; 0xdc
 8001d62:	f003 077f 	and.w	r7, r3, #127	; 0x7f
 8001d66:	d141      	bne.n	8001dec <dwc_ep_setup+0x98>
 8001d68:	2b3f      	cmp	r3, #63	; 0x3f
 8001d6a:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001d6e:	d932      	bls.n	8001dd6 <dwc_ep_setup+0x82>
 8001d70:	f8c2 5900 	str.w	r5, [r2, #2304]	; 0x900
 8001d74:	f8de 102c 	ldr.w	r1, [lr, #44]	; 0x2c
 8001d78:	b2ba      	uxth	r2, r7
 8001d7a:	f8c1 2910 	str.w	r2, [r1, #2320]	; 0x910
 8001d7e:	f8de 402c 	ldr.w	r4, [lr, #44]	; 0x2c
 8001d82:	f8d4 1900 	ldr.w	r1, [r4, #2304]	; 0x900
 8001d86:	f041 4108 	orr.w	r1, r1, #2281701376	; 0x88000000
 8001d8a:	f8c4 1900 	str.w	r1, [r4, #2304]	; 0x900
 8001d8e:	f8de 102c 	ldr.w	r1, [lr, #44]	; 0x2c
 8001d92:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001d96:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8001d9a:	f8c0 20e8 	str.w	r2, [r0, #232]	; 0xe8
 8001d9e:	f8c1 2b10 	str.w	r2, [r1, #2832]	; 0xb10
 8001da2:	f8de 102c 	ldr.w	r1, [lr, #44]	; 0x2c
 8001da6:	f8d1 2b00 	ldr.w	r2, [r1, #2816]	; 0xb00
 8001daa:	f042 4208 	orr.w	r2, r2, #2281701376	; 0x88000000
 8001dae:	f8c1 2b00 	str.w	r2, [r1, #2816]	; 0xb00
 8001db2:	0899      	lsrs	r1, r3, #2
 8001db4:	f8be 3032 	ldrh.w	r3, [lr, #50]	; 0x32
 8001db8:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001dbc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8001dc0:	6293      	str	r3, [r2, #40]	; 0x28
 8001dc2:	f8b0 30e0 	ldrh.w	r3, [r0, #224]	; 0xe0
 8001dc6:	4419      	add	r1, r3
 8001dc8:	b289      	uxth	r1, r1
 8001dca:	f8a0 10e0 	strh.w	r1, [r0, #224]	; 0xe0
 8001dce:	f8a0 10e2 	strh.w	r1, [r0, #226]	; 0xe2
 8001dd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001dd6:	2b1f      	cmp	r3, #31
 8001dd8:	d903      	bls.n	8001de2 <dwc_ep_setup+0x8e>
 8001dda:	2101      	movs	r1, #1
 8001ddc:	f8c2 1900 	str.w	r1, [r2, #2304]	; 0x900
 8001de0:	e7c8      	b.n	8001d74 <dwc_ep_setup+0x20>
 8001de2:	2b0f      	cmp	r3, #15
 8001de4:	bf8c      	ite	hi
 8001de6:	2102      	movhi	r1, #2
 8001de8:	2103      	movls	r1, #3
 8001dea:	e7f7      	b.n	8001ddc <dwc_ep_setup+0x88>
 8001dec:	f011 0f80 	tst.w	r1, #128	; 0x80
 8001df0:	b22c      	sxth	r4, r5
 8001df2:	ea4f 4182 	mov.w	r1, r2, lsl #18
 8001df6:	d030      	beq.n	8001e5a <dwc_ep_setup+0x106>
 8001df8:	f8b0 90e0 	ldrh.w	r9, [r0, #224]	; 0xe0
 8001dfc:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001e00:	ea4f 0c93 	mov.w	ip, r3, lsr #2
 8001e04:	f105 0840 	add.w	r8, r5, #64	; 0x40
 8001e08:	ea49 4a0c 	orr.w	sl, r9, ip, lsl #16
 8001e0c:	f842 a028 	str.w	sl, [r2, r8, lsl #2]
 8001e10:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001e14:	0164      	lsls	r4, r4, #5
 8001e16:	f502 6211 	add.w	r2, r2, #2320	; 0x910
 8001e1a:	b2bf      	uxth	r7, r7
 8001e1c:	44cc      	add	ip, r9
 8001e1e:	f8a0 c0e0 	strh.w	ip, [r0, #224]	; 0xe0
 8001e22:	5117      	str	r7, [r2, r4]
 8001e24:	f041 4118 	orr.w	r1, r1, #2550136832	; 0x98000000
 8001e28:	f504 6410 	add.w	r4, r4, #2304	; 0x900
 8001e2c:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001e30:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8001e34:	58a7      	ldr	r7, [r4, r2]
 8001e36:	4319      	orrs	r1, r3
 8001e38:	ea41 5185 	orr.w	r1, r1, r5, lsl #22
 8001e3c:	4339      	orrs	r1, r7
 8001e3e:	50a1      	str	r1, [r4, r2]
 8001e40:	b33e      	cbz	r6, 8001e92 <dwc_ep_setup+0x13e>
 8001e42:	230c      	movs	r3, #12
 8001e44:	fb03 0005 	mla	r0, r3, r5, r0
 8001e48:	6686      	str	r6, [r0, #104]	; 0x68
 8001e4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e4e:	230c      	movs	r3, #12
 8001e50:	fb03 0005 	mla	r0, r3, r5, r0
 8001e54:	66c6      	str	r6, [r0, #108]	; 0x6c
 8001e56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e5a:	f105 023a 	add.w	r2, r5, #58	; 0x3a
 8001e5e:	f447 2700 	orr.w	r7, r7, #524288	; 0x80000
 8001e62:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
 8001e66:	f8de 202c 	ldr.w	r2, [lr, #44]	; 0x2c
 8001e6a:	0164      	lsls	r4, r4, #5
 8001e6c:	f502 6231 	add.w	r2, r2, #2832	; 0xb10
 8001e70:	5117      	str	r7, [r2, r4]
 8001e72:	f504 6430 	add.w	r4, r4, #2816	; 0xb00
 8001e76:	f8de 702c 	ldr.w	r7, [lr, #44]	; 0x2c
 8001e7a:	f041 4214 	orr.w	r2, r1, #2483027968	; 0x94000000
 8001e7e:	f854 e007 	ldr.w	lr, [r4, r7]
 8001e82:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001e86:	431a      	orrs	r2, r3
 8001e88:	ea42 020e 	orr.w	r2, r2, lr
 8001e8c:	51e2      	str	r2, [r4, r7]
 8001e8e:	2e00      	cmp	r6, #0
 8001e90:	d1dd      	bne.n	8001e4e <dwc_ep_setup+0xfa>
 8001e92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001e96 <dwc_endpoints_reset>:
 8001e96:	f8b0 30e2 	ldrh.w	r3, [r0, #226]	; 0xe2
 8001e9a:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 8001e9e:	b510      	push	{r4, lr}
 8001ea0:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
 8001ea4:	f44f 6332 	mov.w	r3, #2848	; 0xb20
 8001ea8:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8001eaa:	5858      	ldr	r0, [r3, r1]
 8001eac:	2800      	cmp	r0, #0
 8001eae:	bfbe      	ittt	lt
 8001eb0:	5858      	ldrlt	r0, [r3, r1]
 8001eb2:	f040 4080 	orrlt.w	r0, r0, #1073741824	; 0x40000000
 8001eb6:	5058      	strlt	r0, [r3, r1]
 8001eb8:	f5a3 7000 	sub.w	r0, r3, #512	; 0x200
 8001ebc:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8001ebe:	5844      	ldr	r4, [r0, r1]
 8001ec0:	2c00      	cmp	r4, #0
 8001ec2:	bfb8      	it	lt
 8001ec4:	5844      	ldrlt	r4, [r0, r1]
 8001ec6:	f103 0320 	add.w	r3, r3, #32
 8001eca:	bfbc      	itt	lt
 8001ecc:	f044 4480 	orrlt.w	r4, r4, #1073741824	; 0x40000000
 8001ed0:	5044      	strlt	r4, [r0, r1]
 8001ed2:	f5b3 6f38 	cmp.w	r3, #2944	; 0xb80
 8001ed6:	d1e7      	bne.n	8001ea8 <dwc_endpoints_reset+0x12>
 8001ed8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8001eda:	f44f 6286 	mov.w	r2, #1072	; 0x430
 8001ede:	611a      	str	r2, [r3, #16]
 8001ee0:	bd10      	pop	{r4, pc}

08001ee2 <dwc_ep_stall_set>:
 8001ee2:	b510      	push	{r4, lr}
 8001ee4:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8001ee8:	b939      	cbnz	r1, 8001efa <dwc_ep_stall_set+0x18>
 8001eea:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8001eec:	f8d4 0900 	ldr.w	r0, [r4, #2304]	; 0x900
 8001ef0:	b18a      	cbz	r2, 8001f16 <dwc_ep_stall_set+0x34>
 8001ef2:	f440 1000 	orr.w	r0, r0, #2097152	; 0x200000
 8001ef6:	f8c4 0900 	str.w	r0, [r4, #2304]	; 0x900
 8001efa:	0608      	lsls	r0, r1, #24
 8001efc:	bf46      	itte	mi
 8001efe:	f001 017f 	andmi.w	r1, r1, #127	; 0x7f
 8001f02:	3148      	addmi	r1, #72	; 0x48
 8001f04:	3158      	addpl	r1, #88	; 0x58
 8001f06:	0149      	lsls	r1, r1, #5
 8001f08:	b142      	cbz	r2, 8001f1c <dwc_ep_stall_set+0x3a>
 8001f0a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001f0c:	588b      	ldr	r3, [r1, r2]
 8001f0e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001f12:	508b      	str	r3, [r1, r2]
 8001f14:	bd10      	pop	{r4, pc}
 8001f16:	f420 1000 	bic.w	r0, r0, #2097152	; 0x200000
 8001f1a:	e7ec      	b.n	8001ef6 <dwc_ep_stall_set+0x14>
 8001f1c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001f1e:	580a      	ldr	r2, [r1, r0]
 8001f20:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8001f24:	500a      	str	r2, [r1, r0]
 8001f26:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001f28:	588b      	ldr	r3, [r1, r2]
 8001f2a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001f2e:	e7f0      	b.n	8001f12 <dwc_ep_stall_set+0x30>

08001f30 <dwc_ep_stall_get>:
 8001f30:	f011 0f80 	tst.w	r1, #128	; 0x80
 8001f34:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8001f38:	bf1a      	itte	ne
 8001f3a:	f001 017f 	andne.w	r1, r1, #127	; 0x7f
 8001f3e:	3148      	addne	r1, #72	; 0x48
 8001f40:	3158      	addeq	r1, #88	; 0x58
 8001f42:	0149      	lsls	r1, r1, #5
 8001f44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001f46:	58c8      	ldr	r0, [r1, r3]
 8001f48:	f3c0 5040 	ubfx	r0, r0, #21, #1
 8001f4c:	4770      	bx	lr

08001f4e <dwc_ep_nak_set>:
 8001f4e:	060b      	lsls	r3, r1, #24
 8001f50:	d40c      	bmi.n	8001f6c <dwc_ep_nak_set+0x1e>
 8001f52:	1843      	adds	r3, r0, r1
 8001f54:	3158      	adds	r1, #88	; 0x58
 8001f56:	f883 20e4 	strb.w	r2, [r3, #228]	; 0xe4
 8001f5a:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8001f5e:	0149      	lsls	r1, r1, #5
 8001f60:	b12a      	cbz	r2, 8001f6e <dwc_ep_nak_set+0x20>
 8001f62:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001f64:	588b      	ldr	r3, [r1, r2]
 8001f66:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8001f6a:	508b      	str	r3, [r1, r2]
 8001f6c:	4770      	bx	lr
 8001f6e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001f70:	588b      	ldr	r3, [r1, r2]
 8001f72:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001f76:	e7f8      	b.n	8001f6a <dwc_ep_nak_set+0x1c>

08001f78 <dwc_ep_write_packet>:
 8001f78:	b570      	push	{r4, r5, r6, lr}
 8001f7a:	f8d0 50dc 	ldr.w	r5, [r0, #220]	; 0xdc
 8001f7e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8001f80:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8001f84:	014c      	lsls	r4, r1, #5
 8001f86:	f500 6011 	add.w	r0, r0, #2320	; 0x910
 8001f8a:	5906      	ldr	r6, [r0, r4]
 8001f8c:	0336      	lsls	r6, r6, #12
 8001f8e:	d417      	bmi.n	8001fc0 <dwc_ep_write_packet+0x48>
 8001f90:	f443 2600 	orr.w	r6, r3, #524288	; 0x80000
 8001f94:	5106      	str	r6, [r0, r4]
 8001f96:	f504 6410 	add.w	r4, r4, #2304	; 0x900
 8001f9a:	6aee      	ldr	r6, [r5, #44]	; 0x2c
 8001f9c:	59a0      	ldr	r0, [r4, r6]
 8001f9e:	3101      	adds	r1, #1
 8001fa0:	f040 4004 	orr.w	r0, r0, #2214592512	; 0x84000000
 8001fa4:	51a0      	str	r0, [r4, r6]
 8001fa6:	0309      	lsls	r1, r1, #12
 8001fa8:	4614      	mov	r4, r2
 8001faa:	1b18      	subs	r0, r3, r4
 8001fac:	4410      	add	r0, r2
 8001fae:	2800      	cmp	r0, #0
 8001fb0:	dc01      	bgt.n	8001fb6 <dwc_ep_write_packet+0x3e>
 8001fb2:	4618      	mov	r0, r3
 8001fb4:	bd70      	pop	{r4, r5, r6, pc}
 8001fb6:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8001fb8:	f854 6b04 	ldr.w	r6, [r4], #4
 8001fbc:	500e      	str	r6, [r1, r0]
 8001fbe:	e7f4      	b.n	8001faa <dwc_ep_write_packet+0x32>
 8001fc0:	2300      	movs	r3, #0
 8001fc2:	e7f6      	b.n	8001fb2 <dwc_ep_write_packet+0x3a>

08001fc4 <dwc_ep_read_packet>:
 8001fc4:	b513      	push	{r0, r1, r4, lr}
 8001fc6:	f8b0 40f8 	ldrh.w	r4, [r0, #248]	; 0xf8
 8001fca:	429c      	cmp	r4, r3
 8001fcc:	4601      	mov	r1, r0
 8001fce:	bf28      	it	cs
 8001fd0:	461c      	movcs	r4, r3
 8001fd2:	4610      	mov	r0, r2
 8001fd4:	1a23      	subs	r3, r4, r0
 8001fd6:	4413      	add	r3, r2
 8001fd8:	2b03      	cmp	r3, #3
 8001fda:	dc1a      	bgt.n	8002012 <dwc_ep_read_packet+0x4e>
 8001fdc:	f024 0003 	bic.w	r0, r4, #3
 8001fe0:	4410      	add	r0, r2
 8001fe2:	f014 0203 	ands.w	r2, r4, #3
 8001fe6:	d011      	beq.n	800200c <dwc_ep_read_packet+0x48>
 8001fe8:	f8d1 30dc 	ldr.w	r3, [r1, #220]	; 0xdc
 8001fec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001fee:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	9301      	str	r3, [sp, #4]
 8001ff6:	f8b1 30f8 	ldrh.w	r3, [r1, #248]	; 0xf8
 8001ffa:	2b03      	cmp	r3, #3
 8001ffc:	bf94      	ite	ls
 8001ffe:	2300      	movls	r3, #0
 8002000:	3b04      	subhi	r3, #4
 8002002:	f8a1 30f8 	strh.w	r3, [r1, #248]	; 0xf8
 8002006:	a901      	add	r1, sp, #4
 8002008:	f000 f91a 	bl	8002240 <memcpy>
 800200c:	4620      	mov	r0, r4
 800200e:	b002      	add	sp, #8
 8002010:	bd10      	pop	{r4, pc}
 8002012:	f8d1 30dc 	ldr.w	r3, [r1, #220]	; 0xdc
 8002016:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002018:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	f840 3b04 	str.w	r3, [r0], #4
 8002022:	f8b1 30f8 	ldrh.w	r3, [r1, #248]	; 0xf8
 8002026:	3b04      	subs	r3, #4
 8002028:	f8a1 30f8 	strh.w	r3, [r1, #248]	; 0xf8
 800202c:	e7d2      	b.n	8001fd4 <dwc_ep_read_packet+0x10>

0800202e <dwc_poll>:
 800202e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002032:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8002036:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002038:	6956      	ldr	r6, [r2, #20]
 800203a:	f416 5500 	ands.w	r5, r6, #8192	; 0x2000
 800203e:	4604      	mov	r4, r0
 8002040:	d009      	beq.n	8002056 <dwc_poll+0x28>
 8002042:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8002044:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002048:	6151      	str	r1, [r2, #20]
 800204a:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
 800204e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002052:	f7fe be15 	b.w	8000c80 <_usbd_reset>
 8002056:	f04f 080c 	mov.w	r8, #12
 800205a:	f04f 0901 	mov.w	r9, #1
 800205e:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8002062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002064:	016f      	lsls	r7, r5, #5
 8002066:	f603 1308 	addw	r3, r3, #2312	; 0x908
 800206a:	59db      	ldr	r3, [r3, r7]
 800206c:	07d9      	lsls	r1, r3, #31
 800206e:	d50d      	bpl.n	800208c <dwc_poll+0x5e>
 8002070:	fb08 4305 	mla	r3, r8, r5, r4
 8002074:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8002076:	b113      	cbz	r3, 800207e <dwc_poll+0x50>
 8002078:	b2e9      	uxtb	r1, r5
 800207a:	4620      	mov	r0, r4
 800207c:	4798      	blx	r3
 800207e:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8002082:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002084:	f603 1308 	addw	r3, r3, #2312	; 0x908
 8002088:	f843 9007 	str.w	r9, [r3, r7]
 800208c:	3501      	adds	r5, #1
 800208e:	2d04      	cmp	r5, #4
 8002090:	d1e5      	bne.n	800205e <dwc_poll+0x30>
 8002092:	06f2      	lsls	r2, r6, #27
 8002094:	d555      	bpl.n	8002142 <dwc_poll+0x114>
 8002096:	f8d4 10dc 	ldr.w	r1, [r4, #220]	; 0xdc
 800209a:	6ac8      	ldr	r0, [r1, #44]	; 0x2c
 800209c:	6a02      	ldr	r2, [r0, #32]
 800209e:	f402 13f0 	and.w	r3, r2, #1966080	; 0x1e0000
 80020a2:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80020a6:	f002 050f 	and.w	r5, r2, #15
 80020aa:	d122      	bne.n	80020f2 <dwc_poll+0xc4>
 80020ac:	230c      	movs	r3, #12
 80020ae:	fb03 4305 	mla	r3, r3, r5, r4
 80020b2:	4629      	mov	r1, r5
 80020b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80020b6:	4620      	mov	r0, r4
 80020b8:	4798      	blx	r3
 80020ba:	f8d4 10dc 	ldr.w	r1, [r4, #220]	; 0xdc
 80020be:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80020c0:	f105 003a 	add.w	r0, r5, #58	; 0x3a
 80020c4:	016b      	lsls	r3, r5, #5
 80020c6:	f502 6231 	add.w	r2, r2, #2832	; 0xb10
 80020ca:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 80020ce:	50d0      	str	r0, [r2, r3]
 80020d0:	442c      	add	r4, r5
 80020d2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80020d6:	f894 20e4 	ldrb.w	r2, [r4, #228]	; 0xe4
 80020da:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 80020dc:	2a00      	cmp	r2, #0
 80020de:	5858      	ldr	r0, [r3, r1]
 80020e0:	bf0c      	ite	eq
 80020e2:	f04f 4204 	moveq.w	r2, #2214592512	; 0x84000000
 80020e6:	f04f 4208 	movne.w	r2, #2281701376	; 0x88000000
 80020ea:	4302      	orrs	r2, r0
 80020ec:	505a      	str	r2, [r3, r1]
 80020ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80020f2:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 80020f6:	d0e0      	beq.n	80020ba <dwc_poll+0x8c>
 80020f8:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80020fc:	d101      	bne.n	8002102 <dwc_poll+0xd4>
 80020fe:	2301      	movs	r3, #1
 8002100:	e00a      	b.n	8002118 <dwc_poll+0xea>
 8002102:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8002106:	f040 808a 	bne.w	800221e <dwc_poll+0x1f0>
 800210a:	016f      	lsls	r7, r5, #5
 800210c:	f500 6311 	add.w	r3, r0, #2320	; 0x910
 8002110:	59db      	ldr	r3, [r3, r7]
 8002112:	031b      	lsls	r3, r3, #12
 8002114:	d441      	bmi.n	800219a <dwc_poll+0x16c>
 8002116:	2302      	movs	r3, #2
 8002118:	f3c2 120a 	ubfx	r2, r2, #4, #11
 800211c:	2b02      	cmp	r3, #2
 800211e:	f8a4 20f8 	strh.w	r2, [r4, #248]	; 0xf8
 8002122:	d165      	bne.n	80021f0 <dwc_poll+0x1c2>
 8002124:	2308      	movs	r3, #8
 8002126:	f104 0230 	add.w	r2, r4, #48	; 0x30
 800212a:	4629      	mov	r1, r5
 800212c:	4620      	mov	r0, r4
 800212e:	f7ff ff49 	bl	8001fc4 <dwc_ep_read_packet>
 8002132:	f8b4 10f8 	ldrh.w	r1, [r4, #248]	; 0xf8
 8002136:	2300      	movs	r3, #0
 8002138:	428b      	cmp	r3, r1
 800213a:	db63      	blt.n	8002204 <dwc_poll+0x1d6>
 800213c:	2300      	movs	r3, #0
 800213e:	f8a4 30f8 	strh.w	r3, [r4, #248]	; 0xf8
 8002142:	0532      	lsls	r2, r6, #20
 8002144:	d508      	bpl.n	8002158 <dwc_poll+0x12a>
 8002146:	6a23      	ldr	r3, [r4, #32]
 8002148:	b103      	cbz	r3, 800214c <dwc_poll+0x11e>
 800214a:	4798      	blx	r3
 800214c:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8002150:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002152:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002156:	615a      	str	r2, [r3, #20]
 8002158:	2e00      	cmp	r6, #0
 800215a:	da08      	bge.n	800216e <dwc_poll+0x140>
 800215c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800215e:	b103      	cbz	r3, 8002162 <dwc_poll+0x134>
 8002160:	4798      	blx	r3
 8002162:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8002166:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002168:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 800216c:	615a      	str	r2, [r3, #20]
 800216e:	0733      	lsls	r3, r6, #28
 8002170:	d507      	bpl.n	8002182 <dwc_poll+0x154>
 8002172:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8002174:	b103      	cbz	r3, 8002178 <dwc_poll+0x14a>
 8002176:	4798      	blx	r3
 8002178:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800217c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800217e:	2208      	movs	r2, #8
 8002180:	615a      	str	r2, [r3, #20]
 8002182:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8002184:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8002188:	2a00      	cmp	r2, #0
 800218a:	d043      	beq.n	8002214 <dwc_poll+0x1e6>
 800218c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800218e:	6993      	ldr	r3, [r2, #24]
 8002190:	f043 0308 	orr.w	r3, r3, #8
 8002194:	6193      	str	r3, [r2, #24]
 8002196:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800219a:	f507 6310 	add.w	r3, r7, #2304	; 0x900
 800219e:	f850 e003 	ldr.w	lr, [r0, r3]
 80021a2:	f04e 6e00 	orr.w	lr, lr, #134217728	; 0x8000000
 80021a6:	f840 e003 	str.w	lr, [r0, r3]
 80021aa:	6ac8      	ldr	r0, [r1, #44]	; 0x2c
 80021ac:	f600 1e08 	addw	lr, r0, #2312	; 0x908
 80021b0:	44be      	add	lr, r7
 80021b2:	f8de c000 	ldr.w	ip, [lr]
 80021b6:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80021ba:	d0fa      	beq.n	80021b2 <dwc_poll+0x184>
 80021bc:	581b      	ldr	r3, [r3, r0]
 80021be:	0d9b      	lsrs	r3, r3, #22
 80021c0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80021c4:	f1bc 0f00 	cmp.w	ip, #0
 80021c8:	f100 0e10 	add.w	lr, r0, #16
 80021cc:	daf8      	bge.n	80021c0 <dwc_poll+0x192>
 80021ce:	019b      	lsls	r3, r3, #6
 80021d0:	f403 7370 	and.w	r3, r3, #960	; 0x3c0
 80021d4:	f043 0320 	orr.w	r3, r3, #32
 80021d8:	6103      	str	r3, [r0, #16]
 80021da:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 80021dc:	f503 6311 	add.w	r3, r3, #2320	; 0x910
 80021e0:	2000      	movs	r0, #0
 80021e2:	51d8      	str	r0, [r3, r7]
 80021e4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 80021e6:	3310      	adds	r3, #16
 80021e8:	6819      	ldr	r1, [r3, #0]
 80021ea:	0689      	lsls	r1, r1, #26
 80021ec:	d4fc      	bmi.n	80021e8 <dwc_poll+0x1ba>
 80021ee:	e792      	b.n	8002116 <dwc_poll+0xe8>
 80021f0:	230c      	movs	r3, #12
 80021f2:	fb03 4305 	mla	r3, r3, r5, r4
 80021f6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80021f8:	2b00      	cmp	r3, #0
 80021fa:	d09a      	beq.n	8002132 <dwc_poll+0x104>
 80021fc:	4629      	mov	r1, r5
 80021fe:	4620      	mov	r0, r4
 8002200:	4798      	blx	r3
 8002202:	e796      	b.n	8002132 <dwc_poll+0x104>
 8002204:	f8d4 20dc 	ldr.w	r2, [r4, #220]	; 0xdc
 8002208:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800220a:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800220e:	3304      	adds	r3, #4
 8002210:	6812      	ldr	r2, [r2, #0]
 8002212:	e791      	b.n	8002138 <dwc_poll+0x10a>
 8002214:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002216:	6993      	ldr	r3, [r2, #24]
 8002218:	f023 0308 	bic.w	r3, r3, #8
 800221c:	e7ba      	b.n	8002194 <dwc_poll+0x166>
 800221e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08002222 <dwc_disconnect>:
 8002222:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8002226:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002228:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 800222c:	b121      	cbz	r1, 8002238 <dwc_disconnect+0x16>
 800222e:	f043 0302 	orr.w	r3, r3, #2
 8002232:	f8c2 3804 	str.w	r3, [r2, #2052]	; 0x804
 8002236:	4770      	bx	lr
 8002238:	f023 0302 	bic.w	r3, r3, #2
 800223c:	e7f9      	b.n	8002232 <dwc_disconnect+0x10>
	...

08002240 <memcpy>:
 8002240:	4684      	mov	ip, r0
 8002242:	ea41 0300 	orr.w	r3, r1, r0
 8002246:	f013 0303 	ands.w	r3, r3, #3
 800224a:	d16d      	bne.n	8002328 <memcpy+0xe8>
 800224c:	3a40      	subs	r2, #64	; 0x40
 800224e:	d341      	bcc.n	80022d4 <memcpy+0x94>
 8002250:	f851 3b04 	ldr.w	r3, [r1], #4
 8002254:	f840 3b04 	str.w	r3, [r0], #4
 8002258:	f851 3b04 	ldr.w	r3, [r1], #4
 800225c:	f840 3b04 	str.w	r3, [r0], #4
 8002260:	f851 3b04 	ldr.w	r3, [r1], #4
 8002264:	f840 3b04 	str.w	r3, [r0], #4
 8002268:	f851 3b04 	ldr.w	r3, [r1], #4
 800226c:	f840 3b04 	str.w	r3, [r0], #4
 8002270:	f851 3b04 	ldr.w	r3, [r1], #4
 8002274:	f840 3b04 	str.w	r3, [r0], #4
 8002278:	f851 3b04 	ldr.w	r3, [r1], #4
 800227c:	f840 3b04 	str.w	r3, [r0], #4
 8002280:	f851 3b04 	ldr.w	r3, [r1], #4
 8002284:	f840 3b04 	str.w	r3, [r0], #4
 8002288:	f851 3b04 	ldr.w	r3, [r1], #4
 800228c:	f840 3b04 	str.w	r3, [r0], #4
 8002290:	f851 3b04 	ldr.w	r3, [r1], #4
 8002294:	f840 3b04 	str.w	r3, [r0], #4
 8002298:	f851 3b04 	ldr.w	r3, [r1], #4
 800229c:	f840 3b04 	str.w	r3, [r0], #4
 80022a0:	f851 3b04 	ldr.w	r3, [r1], #4
 80022a4:	f840 3b04 	str.w	r3, [r0], #4
 80022a8:	f851 3b04 	ldr.w	r3, [r1], #4
 80022ac:	f840 3b04 	str.w	r3, [r0], #4
 80022b0:	f851 3b04 	ldr.w	r3, [r1], #4
 80022b4:	f840 3b04 	str.w	r3, [r0], #4
 80022b8:	f851 3b04 	ldr.w	r3, [r1], #4
 80022bc:	f840 3b04 	str.w	r3, [r0], #4
 80022c0:	f851 3b04 	ldr.w	r3, [r1], #4
 80022c4:	f840 3b04 	str.w	r3, [r0], #4
 80022c8:	f851 3b04 	ldr.w	r3, [r1], #4
 80022cc:	f840 3b04 	str.w	r3, [r0], #4
 80022d0:	3a40      	subs	r2, #64	; 0x40
 80022d2:	d2bd      	bcs.n	8002250 <memcpy+0x10>
 80022d4:	3230      	adds	r2, #48	; 0x30
 80022d6:	d311      	bcc.n	80022fc <memcpy+0xbc>
 80022d8:	f851 3b04 	ldr.w	r3, [r1], #4
 80022dc:	f840 3b04 	str.w	r3, [r0], #4
 80022e0:	f851 3b04 	ldr.w	r3, [r1], #4
 80022e4:	f840 3b04 	str.w	r3, [r0], #4
 80022e8:	f851 3b04 	ldr.w	r3, [r1], #4
 80022ec:	f840 3b04 	str.w	r3, [r0], #4
 80022f0:	f851 3b04 	ldr.w	r3, [r1], #4
 80022f4:	f840 3b04 	str.w	r3, [r0], #4
 80022f8:	3a10      	subs	r2, #16
 80022fa:	d2ed      	bcs.n	80022d8 <memcpy+0x98>
 80022fc:	320c      	adds	r2, #12
 80022fe:	d305      	bcc.n	800230c <memcpy+0xcc>
 8002300:	f851 3b04 	ldr.w	r3, [r1], #4
 8002304:	f840 3b04 	str.w	r3, [r0], #4
 8002308:	3a04      	subs	r2, #4
 800230a:	d2f9      	bcs.n	8002300 <memcpy+0xc0>
 800230c:	3204      	adds	r2, #4
 800230e:	d008      	beq.n	8002322 <memcpy+0xe2>
 8002310:	07d2      	lsls	r2, r2, #31
 8002312:	bf1c      	itt	ne
 8002314:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8002318:	f800 3b01 	strbne.w	r3, [r0], #1
 800231c:	d301      	bcc.n	8002322 <memcpy+0xe2>
 800231e:	880b      	ldrh	r3, [r1, #0]
 8002320:	8003      	strh	r3, [r0, #0]
 8002322:	4660      	mov	r0, ip
 8002324:	4770      	bx	lr
 8002326:	bf00      	nop
 8002328:	2a08      	cmp	r2, #8
 800232a:	d313      	bcc.n	8002354 <memcpy+0x114>
 800232c:	078b      	lsls	r3, r1, #30
 800232e:	d08d      	beq.n	800224c <memcpy+0xc>
 8002330:	f010 0303 	ands.w	r3, r0, #3
 8002334:	d08a      	beq.n	800224c <memcpy+0xc>
 8002336:	f1c3 0304 	rsb	r3, r3, #4
 800233a:	1ad2      	subs	r2, r2, r3
 800233c:	07db      	lsls	r3, r3, #31
 800233e:	bf1c      	itt	ne
 8002340:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8002344:	f800 3b01 	strbne.w	r3, [r0], #1
 8002348:	d380      	bcc.n	800224c <memcpy+0xc>
 800234a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800234e:	f820 3b02 	strh.w	r3, [r0], #2
 8002352:	e77b      	b.n	800224c <memcpy+0xc>
 8002354:	3a04      	subs	r2, #4
 8002356:	d3d9      	bcc.n	800230c <memcpy+0xcc>
 8002358:	3a01      	subs	r2, #1
 800235a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800235e:	f800 3b01 	strb.w	r3, [r0], #1
 8002362:	d2f9      	bcs.n	8002358 <memcpy+0x118>
 8002364:	780b      	ldrb	r3, [r1, #0]
 8002366:	7003      	strb	r3, [r0, #0]
 8002368:	784b      	ldrb	r3, [r1, #1]
 800236a:	7043      	strb	r3, [r0, #1]
 800236c:	788b      	ldrb	r3, [r1, #2]
 800236e:	7083      	strb	r3, [r0, #2]
 8002370:	4660      	mov	r0, ip
 8002372:	4770      	bx	lr

08002374 <memset>:
 8002374:	b470      	push	{r4, r5, r6}
 8002376:	0786      	lsls	r6, r0, #30
 8002378:	d046      	beq.n	8002408 <memset+0x94>
 800237a:	1e54      	subs	r4, r2, #1
 800237c:	2a00      	cmp	r2, #0
 800237e:	d041      	beq.n	8002404 <memset+0x90>
 8002380:	b2ca      	uxtb	r2, r1
 8002382:	4603      	mov	r3, r0
 8002384:	e002      	b.n	800238c <memset+0x18>
 8002386:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
 800238a:	d33b      	bcc.n	8002404 <memset+0x90>
 800238c:	f803 2b01 	strb.w	r2, [r3], #1
 8002390:	079d      	lsls	r5, r3, #30
 8002392:	d1f8      	bne.n	8002386 <memset+0x12>
 8002394:	2c03      	cmp	r4, #3
 8002396:	d92e      	bls.n	80023f6 <memset+0x82>
 8002398:	b2cd      	uxtb	r5, r1
 800239a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 800239e:	2c0f      	cmp	r4, #15
 80023a0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 80023a4:	d919      	bls.n	80023da <memset+0x66>
 80023a6:	f103 0210 	add.w	r2, r3, #16
 80023aa:	4626      	mov	r6, r4
 80023ac:	3e10      	subs	r6, #16
 80023ae:	2e0f      	cmp	r6, #15
 80023b0:	f842 5c10 	str.w	r5, [r2, #-16]
 80023b4:	f842 5c0c 	str.w	r5, [r2, #-12]
 80023b8:	f842 5c08 	str.w	r5, [r2, #-8]
 80023bc:	f842 5c04 	str.w	r5, [r2, #-4]
 80023c0:	f102 0210 	add.w	r2, r2, #16
 80023c4:	d8f2      	bhi.n	80023ac <memset+0x38>
 80023c6:	f1a4 0210 	sub.w	r2, r4, #16
 80023ca:	f022 020f 	bic.w	r2, r2, #15
 80023ce:	f004 040f 	and.w	r4, r4, #15
 80023d2:	3210      	adds	r2, #16
 80023d4:	2c03      	cmp	r4, #3
 80023d6:	4413      	add	r3, r2
 80023d8:	d90d      	bls.n	80023f6 <memset+0x82>
 80023da:	461e      	mov	r6, r3
 80023dc:	4622      	mov	r2, r4
 80023de:	3a04      	subs	r2, #4
 80023e0:	2a03      	cmp	r2, #3
 80023e2:	f846 5b04 	str.w	r5, [r6], #4
 80023e6:	d8fa      	bhi.n	80023de <memset+0x6a>
 80023e8:	1f22      	subs	r2, r4, #4
 80023ea:	f022 0203 	bic.w	r2, r2, #3
 80023ee:	3204      	adds	r2, #4
 80023f0:	4413      	add	r3, r2
 80023f2:	f004 0403 	and.w	r4, r4, #3
 80023f6:	b12c      	cbz	r4, 8002404 <memset+0x90>
 80023f8:	b2c9      	uxtb	r1, r1
 80023fa:	441c      	add	r4, r3
 80023fc:	f803 1b01 	strb.w	r1, [r3], #1
 8002400:	429c      	cmp	r4, r3
 8002402:	d1fb      	bne.n	80023fc <memset+0x88>
 8002404:	bc70      	pop	{r4, r5, r6}
 8002406:	4770      	bx	lr
 8002408:	4614      	mov	r4, r2
 800240a:	4603      	mov	r3, r0
 800240c:	e7c2      	b.n	8002394 <memset+0x20>
 800240e:	bf00      	nop
	...

08002440 <strlen>:
 8002440:	f890 f000 	pld	[r0]
 8002444:	e96d 4502 	strd	r4, r5, [sp, #-8]!
 8002448:	f020 0107 	bic.w	r1, r0, #7
 800244c:	f06f 0c00 	mvn.w	ip, #0
 8002450:	f010 0407 	ands.w	r4, r0, #7
 8002454:	f891 f020 	pld	[r1, #32]
 8002458:	f040 8049 	bne.w	80024ee <strlen+0xae>
 800245c:	f04f 0400 	mov.w	r4, #0
 8002460:	f06f 0007 	mvn.w	r0, #7
 8002464:	e9d1 2300 	ldrd	r2, r3, [r1]
 8002468:	f891 f040 	pld	[r1, #64]	; 0x40
 800246c:	f100 0008 	add.w	r0, r0, #8
 8002470:	fa82 f24c 	uadd8	r2, r2, ip
 8002474:	faa4 f28c 	sel	r2, r4, ip
 8002478:	fa83 f34c 	uadd8	r3, r3, ip
 800247c:	faa2 f38c 	sel	r3, r2, ip
 8002480:	bb4b      	cbnz	r3, 80024d6 <strlen+0x96>
 8002482:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 8002486:	fa82 f24c 	uadd8	r2, r2, ip
 800248a:	f100 0008 	add.w	r0, r0, #8
 800248e:	faa4 f28c 	sel	r2, r4, ip
 8002492:	fa83 f34c 	uadd8	r3, r3, ip
 8002496:	faa2 f38c 	sel	r3, r2, ip
 800249a:	b9e3      	cbnz	r3, 80024d6 <strlen+0x96>
 800249c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
 80024a0:	fa82 f24c 	uadd8	r2, r2, ip
 80024a4:	f100 0008 	add.w	r0, r0, #8
 80024a8:	faa4 f28c 	sel	r2, r4, ip
 80024ac:	fa83 f34c 	uadd8	r3, r3, ip
 80024b0:	faa2 f38c 	sel	r3, r2, ip
 80024b4:	b97b      	cbnz	r3, 80024d6 <strlen+0x96>
 80024b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
 80024ba:	f101 0120 	add.w	r1, r1, #32
 80024be:	fa82 f24c 	uadd8	r2, r2, ip
 80024c2:	f100 0008 	add.w	r0, r0, #8
 80024c6:	faa4 f28c 	sel	r2, r4, ip
 80024ca:	fa83 f34c 	uadd8	r3, r3, ip
 80024ce:	faa2 f38c 	sel	r3, r2, ip
 80024d2:	2b00      	cmp	r3, #0
 80024d4:	d0c6      	beq.n	8002464 <strlen+0x24>
 80024d6:	2a00      	cmp	r2, #0
 80024d8:	bf04      	itt	eq
 80024da:	3004      	addeq	r0, #4
 80024dc:	461a      	moveq	r2, r3
 80024de:	ba12      	rev	r2, r2
 80024e0:	fab2 f282 	clz	r2, r2
 80024e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
 80024e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
 80024ec:	4770      	bx	lr
 80024ee:	e9d1 2300 	ldrd	r2, r3, [r1]
 80024f2:	f004 0503 	and.w	r5, r4, #3
 80024f6:	f1c4 0000 	rsb	r0, r4, #0
 80024fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
 80024fe:	f014 0f04 	tst.w	r4, #4
 8002502:	f891 f040 	pld	[r1, #64]	; 0x40
 8002506:	fa0c f505 	lsl.w	r5, ip, r5
 800250a:	ea62 0205 	orn	r2, r2, r5
 800250e:	bf1c      	itt	ne
 8002510:	ea63 0305 	ornne	r3, r3, r5
 8002514:	4662      	movne	r2, ip
 8002516:	f04f 0400 	mov.w	r4, #0
 800251a:	e7a9      	b.n	8002470 <strlen+0x30>
 800251c:	30302e31 	.word	0x30302e31
 8002520:	0030302e 	.word	0x0030302e
 8002524:	726b7349 	.word	0x726b7349
 8002528:	00534a61 	.word	0x00534a61
 800252c:	65706d41 	.word	0x65706d41
 8002530:	00616b72 	.word	0x00616b72

08002534 <BootSector>:
 8002534:	4d903ceb 534f4453 00302e35 00040402     .<.MSDOS5.0.....
 8002544:	00020002 0002f808 00ff003f 00000800     ........?.......
 8002554:	00000000 0b290180 49009c8d 41524b53     ......)....ISKRA
 8002564:	2020534a 41462020 20323154 c9332020     JS    FAT12   3.
 8002574:	f0bcd18e b8d98e7b c08e2000 7c00bdfc     ....{.... .....|
 8002584:	7d244e38 99c18b24 72013ce8 3aeb831c     8N$}$....<.r...:
 8002594:	7c1ca166 073b6626 fc578a26 ca800675     f..|&f;.&.W.u...
 80025a4:	02568802 7310c380 8ac933eb f7981046     ..V....s.3..F...
 80025b4:	46031666 1e56131c 130e4603 11768bd1     f..F..V..F....v.
 80025c4:	fc468960 b8fe5689 e6f70020 030b5e8b     `.F..V.. ....^..
 80025d4:	f3f748c3 11fc4601 bf61fe4e e6e80000     .H...F..N.a.....
 80025e4:	26397200 17742d38 be0bb160 a6f37da1     .r9&8-t.`....}..
 80025f4:	4e327461 c7830974 72fb3b20 a0dcebe6     at2Nt... ;.r....
 8002604:	7db47dfb 98acf08b 480c7440 0eb41374     .}.}....@t.Ht...
 8002614:	cd0007bb a0efeb10 e6eb7dfd eb7dfca0     .........}....}.
 8002624:	cd16cde1 558b2619 01b0521a e80000bb     .....&.U.R......
 8002634:	e872003b 24568a5b 8b7c0bbe f046c7fc     ;.r.[.V$..|...F.
 8002644:	46c77d3d 8c7d29f4 f24e89d9 c6f64e89     =}.F.)}...N..N..
 8002654:	cb7d9606 000003ea c8b60f20 f8468b66     ..}..... ...f.F.
 8002664:	1c460366 66d08b66 eb10eac1 c8b60f5e     f.F.f..f....^...
 8002674:	468a4a4a f7e4320d fc4603e2 ebfe5613     JJ.F.2....F..V..
 8002684:	0650524a 6a016a53 468b9110 33929618     JRP.Sj.j...F...3
 8002694:	91f6f7d2 8742f6f7 1a76f7ca e88af28a     ......B...v.....
 80026a4:	0a02ccc0 0201b8cc 0e027e80 42b40475     .........~..u..B
 80026b4:	568af48b 6113cd24 400b7261 03420175     ...V$..aar.@u.B.
 80026c4:	75490b5e 41c3f806 600000bb eb006a66     ^.Iu...A...`fj..
 80026d4:	4f4f42b0 52474d54 20202020 65520a0d     .BOOTMGR    ..Re
 80026e4:	65766f6d 73696420 6f20736b 746f2072     move disks or ot
 80026f4:	20726568 6964656d 0dff2e61 7369440a     her media....Dis
 8002704:	7265206b ff726f72 72500a0d 20737365     k error...Press 
 8002714:	20796e61 2079656b 72206f74 61747365     any key to resta
 8002724:	0a0d7472 00000000 ac000000 aa55d8cb     rt............U.

08002734 <Dir>:
 8002734:	2020202e 20202020 10202020 4d4ec100     .          ...NM
 8002744:	50335033 4d4f0000 00025033 00000000     3P3P..OM3P......
 8002754:	2020202e 20202020 10202020 4d4ec100     .          ...NM
 8002764:	50335033 4d4f0000 00005033 00000000     3P3P..OM3P......
 8002774:	75004742 64006900 0f000000 ffffff00     BG.u.i.d........
 8002784:	ffffffff ffffffff 0000ffff ffffffff     ................
 8002794:	6e004901 65006400 0f007800 0065ff00     .I.n.d.e.x....e.
 80027a4:	00560072 006c006f 00000075 0065006d     r.V.o.l.u...m.e.
 80027b4:	45444e49 317e4558 20202020 4d4ec400     INDEXE~1    ..NM
 80027c4:	50335033 4d4f0000 00035033 0000004c     3P3P..OM3P..L...

080027d4 <Fat>:
 80027d4:	fffffff8 ffffffff 34007bff                       .........

080027dd <Guid>:
 80027dd:	0034007b 00330037 00320038 00440036     {.4.7.3.8.2.6.D.
 80027ed:	002d0035 00420036 00320033 0034002d     5.-.6.B.3.2.-.4.
 80027fd:	00350030 002d0044 00440039 00450032     0.5.D.-.9.D.2.E.
 800280d:	0032002d 00430035 00350041 00410034     -.2.5.C.A.5.4.A.
 800281d:	00440039 00340035 007d0046              9.D.5.4.F.}.

08002829 <Root>:
 8002829:	524b5349 20534a41 08202020 00000000     ISKRAJS    .....
 8002839:	00000000 4d4e0000 00005033 00000000     ......NM3P......
 8002849:	49002042 66006e00 0f006f00 00727200     B .I.n.f.o...rr.
 8002859:	0061006d 00690074 0000006f 0000006e     m.a.t.i.o...n...
 8002869:	79005301 74007300 0f006500 006d7200     .S.y.s.t.e...rm.
 8002879:	00560020 006c006f 00000075 0065006d      .V.o.l.u...m.e.
 8002889:	54535953 317e4d45 16202020 4d4ec100     SYSTEM~1   ...NM
 8002899:	50335033 4d4f0000 00025033 00000000     3P3P..OM3P......
 80028a9:	44414552 2020454d 20545854 4d6b9b18     README  TXT ..kM
 80028b9:	50335033 4d6c0000 00045033 00000174     3P3P..lM3P..t...
 80028c9:	73006941 72006b00 0f006100 006a7500     Ai.s.k.r.a...uj.
 80028d9:	002e0073 00000068 0000ffff ffffffff     s...h...........
 80028e9:	524b5349 20534a41 20202048 7bc24d00     ISKRAJS H   .M.{
 80028f9:	50335033 7bc20000 00055033 00000079     3P3P...{3P..y...
 8002909:	6e666923 20666564 53495f5f 4a41524b     #ifndef __ISKRAJ
 8002919:	5f485f53 64230a5f 6e696665 5f5f2065     S_H__.#define __
 8002929:	524b5349 5f534a41 0a5f5f48 6564230a     ISKRAJS_H__..#de
 8002939:	656e6966 4f4f4220 414f4c54 5f524544     fine BOOTLOADER_
 8002949:	53524556 204e4f49 30303031 64230a30     VERSION 10000.#d
 8002959:	6e696665 53552065 53465f42 4e41485f     efine USB_FS_HAN
 8002969:	52454c44 30783020 30303038 0a646131     DLER 0x080001ad.
 8002979:	6e65230a 0a666964 6552000a 656d6461     .#endif...Readme
 8002989:	68540a0a 69207369 73492073 4a61726b     ..This is IskraJ
 8002999:	6f622053 6f6c746f 72656461 44534d20     S bootloader MSD
 80029a9:	76656420 2e656369 73754a0a 6f632074      device..Just co
 80029b9:	79207970 4920756f 61726b73 6620534a     py you IskraJS f
 80029c9:	776d7269 20657261 2e206e69 206e6962     irmware in .bin 
 80029d9:	6d726f66 74207461 6874206f 64207369     format to this d
 80029e9:	2e6b7369 6f590a0a 69662075 61776d72     isk...You firmwa
 80029f9:	6d206572 20747375 63206562 69706d6f     re must be compi
 8002a09:	2064656c 20726f66 204d4f52 72617473     led for ROM star
 8002a19:	78302074 30303830 30303034 646e6120     t 0x08004000 and
 8002a29:	4d415220 61747320 30207472 30303278      RAM start 0x200
 8002a39:	30383030 4d0a2e30 63696761 64646120     00800..Magic add
 8002a49:	73736572 66207365 7420726f 20736968     resses for this 
 8002a59:	746f6f62 64616f6c 0a3a7265 6966202d     bootloader:.- fi
 8002a69:	61776d72 55206572 46204253 6e692053     rmware USB FS in
 8002a79:	72726574 20747075 74636576 6d20726f     terrupt vector m
 8002a89:	20747375 73206562 74207465 7830206f     ust be set to 0x
 8002a99:	30303830 64613130 66490a3b 6d6f7320     080001ad;.If som
 8002aa9:	6e696874 73692067 6f727720 203a676e     thing is wrong: 
 8002ab9:	79706f63 7065722f 6563616c 73696020     copy/replace `is
 8002ac9:	6a61726b 60682e73 6f726620 6568206d     krajs.h` from he
 8002ad9:	74206572 6f79206f 72412075 6e697564     re to you Arduin
 8002ae9:	6964206f 74636572 2e79726f 07000a0a              o directory....

08002af8 <msc_endp>:
 8002af8:	02010507 00000040 00000000 07000000     ....@...........
 8002b08:	40028105 00000000 00000000 04090000              ...@..........

08002b16 <msc_iface>:
 8002b16:	00000409 50060802 002af800 00000008     .......P..*.....
 8002b26:	00000000 00240500                                .....

08002b2b <cdcacm_functional_descriptors>:
 8002b2b:	10002405 01240501 24040100 24050002     .$....$....$...$
 8002b3b:	07010206                                         ...

08002b3e <comm_endp>:
 8002b3e:	03840507 00ff0010 00000000 09000000              ...............

08002b4d <comm_iface>:
 8002b4d:	00010409 01020201 002b3e00 002b2b08     .........>+..++.
 8002b5d:	00001308 03050700                                .....

08002b62 <data_endp>:
 8002b62:	02030507 00010040 00000000 07000000     ....@...........
 8002b72:	40028305 00000100 00000000 04090000              ...@..........

08002b80 <data_iface>:
 8002b80:	00020409 00000a02 002b6200 00000008     .........b+.....
 8002b90:	00000000 010b0800                                .....

08002b95 <iadcdc_descr>:
 8002b95:	02010b08 00010202                       ........

08002b9d <config_descr>:
 8002b9d:	00000209 c0000103 002bbc32 10011208              ........2.+..

08002baa <dev_descr>:
 8002baa:	01100112 400102ef 57410483 02010110     .......@..AW....
 8002bba:	00000103                                         ..

08002bbc <ifaces>:
 8002bbc:	00000000 00000001 00000000 08002b16     .............+..
 8002bcc:	00000000 00000001 08002b95 08002b4d     .........+..M+..
 8002bdc:	00000000 00000001 00000000 08002b80     .............+..
 8002bec:	64616f4c 00007265                       Loader..

08002bf4 <rcc_hse_8mhz_3v3>:
 8002bf4:	01500008 01000704 00000602 03000400     ..P.............
 8002c04:	0501bd00 0280de80 0501bd00 01500008     ..............P.
 8002c14:	01000702 00000605 03040500 0a037a00     .............z..
 8002c24:	0280de80 0501bd00 01680008 01000802     ..........h.....
 8002c34:	00000605 03040500 0aba9500 02aea540     ............@...
 8002c44:	055d4a80                                .J].

08002c48 <CSWTCH.31>:
 8002c48:	08001111 00000000 00000000 00000000     ................
 8002c58:	00000000 08000e3f 08000eb5 00000000     ....?...........
 8002c68:	08000d83 08000ced                       ........

08002c70 <CSWTCH.33>:
 8002c70:	08000ddd 00000000 00000000 00000000     ................
	...
 8002c98:	08000da5 08000e67                       ....g...

08002ca0 <stm32f107_usb_driver>:
 8002ca0:	080014e9 08001d3d 08001d55 08001e97     ....=...U.......
 8002cb0:	08001ee3 08001f4f 08001f31 08001f79     ....O...1...y...
 8002cc0:	08001fc5 0800202f 08002223 50000000     ..../ ..#".....P
 8002cd0:	00800001                                ....

08002cd4 <_spc3_inquiry_response>:
 8002cd4:	02048000 00000020 20202020 20202020     .... ...        
 8002ce4:	20202020 20202020 20202020 20202020                     
 8002cf4:	20202020                                    

08002cf8 <_spc3_inquiry_sn_response>:
 8002cf8:	10008000 726b7349 20534a61 302e3130     ....IskraJS 01.0
 8002d08:	30302e30                                0.00

08002d0c <_spc3_request_sense>:
 8002d0c:	00000070 0a000000 00000000 00000000     p...............
 8002d1c:	00000000                                ....
